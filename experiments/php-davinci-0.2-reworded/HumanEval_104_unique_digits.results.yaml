language: php
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $has_even_digit = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even_digit = true;\n                break;\n            }\n\
    \        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$digits = str_split($value);\n\t\t$is_unique = true;\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$is_unique\
    \ = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_unique) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4850voh.php:37\n\
    Stack trace:\n#0 /tmp/tmpq4850voh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq4850voh.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strpos($num, '2') === false && strpos($num, '4')\
    \ === false && strpos($num, '6') === false && strpos($num, '8') === false) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub41gkf6.php:27\n\
    Stack trace:\n#0 /tmp/tmpub41gkf6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpub41gkf6.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $digits = str_split($value);\n    $has_even = false;\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $has_even_digit = false;\n        for ($i = 0; $i\
    \ < strlen($number); $i++) {\n            if ($number[$i] % 2 == 0) {\n      \
    \          $has_even_digit = true;\n                break;\n            }\n  \
    \      }\n        if (!$has_even_digit) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx891ceec.php:33\n\
    Stack trace:\n#0 /tmp/tmpx891ceec.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx891ceec.php\
    \ on line 33\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $isEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $isEven = true;\n                break;\n            }\n     \
    \   }\n        if (!$isEven) {\n            $result[] = $value;\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $hasEvenDigit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $hasEvenDigit = true;\n                break;\n   \
    \         }\n        }\n        if (!$hasEvenDigit) {\n            $result[] =\
    \ $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $digits = str_split($number);\n        $hasEvenDigit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $hasEvenDigit = true;\n                break;\n   \
    \         }\n        }\n        if (!$hasEvenDigit) {\n            $result[] =\
    \ $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt58e6y_.php:27\n\
    Stack trace:\n#0 /tmp/tmppt58e6y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppt58e6y_.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt58e6y_.php:27\n\
    Stack trace:\n#0 /tmp/tmppt58e6y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppt58e6y_.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\twhile ($value > 0) {\n\t\t\t$digit\
    \ = $value % 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even = true;\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t\t$value = $value / 10;\n\t\t}\n\t\tif (!$has_even) {\n\
    \t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7yf0su1.php:35\n\
    Stack trace:\n#0 /tmp/tmpz7yf0su1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpz7yf0su1.php\
    \ on line 35\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $arr = str_split($str);\n            $flag = true;\n            foreach ($arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $flag\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($flag) {\n                $result[] = $value;\n            }\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\twhile ($value > 0) {\n\t\t\t$digit\
    \ = $value % 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even = true;\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t\t$value = (int)($value / 10);\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqf7itlvd.php:35\n\
    Stack trace:\n#0 /tmp/tmpqf7itlvd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqf7itlvd.php\
    \ on line 35\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false &&\n           \
    \ strpos($value, '4') === false &&\n            strpos($value, '6') === false\
    \ &&\n            strpos($value, '8') === false &&\n            strpos($value,\
    \ '0') === false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\tforeach ($x\
    \ as $value) {\n\t\t$value = (string)$value;\n\t\t$even = false;\n\t\tfor ($i\
    \ = 0; $i < strlen($value); $i++) {\n\t\t\tif ($value[$i] % 2 == 0) {\n\t\t\t\t\
    $even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$even) {\n\t\t\t$y[] =\
    \ $value;\n\t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49qta88b.php:34\n\
    Stack trace:\n#0 /tmp/tmp49qta88b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp49qta88b.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $hasEven = false;\n            $digits\
    \ = str_split($value);\n            foreach ($digits as $digit) {\n          \
    \      if ($digit % 2 == 0) {\n                    $hasEven = true;\n        \
    \            break;\n                }\n            }\n            if (!$hasEven)\
    \ {\n                array_push($result, $value);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $has_even =\
    \ false;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $has_even = true;\n                break;\n          \
    \  }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = (string)$value;\n\t\t$flag = true;\n\t\tfor ($i\
    \ = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$flag\
    \ = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($flag) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $hasEvenDigit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $hasEvenDigit = true;\n          \
    \      break;\n            }\n        }\n        if (!$hasEvenDigit) {\n     \
    \       $result[] = (int) $number;\n        }\n    }\n    sort($result);\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $hasEven = false;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $hasEven = true;\n                    break;\n      \
    \          }\n            }\n            if (!$hasEven) {\n                array_push($result,\
    \ $value);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp511m34q8.php:37\n\
    Stack trace:\n#0 /tmp/tmp511m34q8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp511m34q8.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $has_even = false;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfa59br7.php:34\n\
    Stack trace:\n#0 /tmp/tmpbfa59br7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbfa59br7.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $has_even_digit = true;\n        \
    \        break;\n            }\n        }\n        if (!$has_even_digit) {\n \
    \           $result[] = (int) $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num = strval($num);\n        $has_even = false;\n \
    \       for ($i = 0; $i < strlen($num); $i++) {\n            if ($num[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = intval($num);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[] = $num;\n\
    \        } else {\n            $str = strval($num);\n            $is_even = false;\n\
    \            for ($i = 0; $i < strlen($str); $i++) {\n                if ($str[$i]\
    \ % 2 == 0) {\n                    $is_even = true;\n                    break;\n\
    \                }\n            }\n            if (!$is_even) {\n            \
    \    $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[] = $num;\n\
    \        } else {\n            $num_str = strval($num);\n            $is_unique\
    \ = true;\n            for ($i = 0; $i < strlen($num_str); $i++) {\n         \
    \       if ($num_str[$i] % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                $result[] = $num;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $even = false;\n        $value = (string)$value;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $even = true;\n                break;\n       \
    \     }\n        }\n        if (!$even) {\n            $result[] = $value;\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45eueasx.php:34\n\
    Stack trace:\n#0 /tmp/tmp45eueasx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp45eueasx.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) === 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $hasEven = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ===\
    \ 0) {\n                    $hasEven = true;\n                    break;\n   \
    \             }\n            }\n            if (!$hasEven) {\n               \
    \ $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tarcoa4.php:37\n\
    Stack trace:\n#0 /tmp/tmp7tarcoa4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7tarcoa4.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $num_str = (string)$num;\n    for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n      if ((int)$num_str[$i] % 2 ==\
    \ 0) {\n        $has_even = true;\n        break;\n      }\n    }\n    if (!$has_even)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $even = true;\n                break;\n       \
    \     }\n        }\n        if (!$even) {\n            $result[] = $value;\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1hf2ee9.php:34\n\
    Stack trace:\n#0 /tmp/tmpt1hf2ee9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt1hf2ee9.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $is_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $is_even = true;\n                    break;\n   \
    \             }\n            }\n            if (!$is_even) {\n               \
    \ $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbii5qdn.php:37\n\
    Stack trace:\n#0 /tmp/tmpbbii5qdn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbbii5qdn.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $check = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $check = false;\n                    break;\n       \
    \         }\n            }\n            if ($check) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbm67vhm.php:37\n\
    Stack trace:\n#0 /tmp/tmplbm67vhm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplbm67vhm.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $isEven = true;\n                break;\n         \
    \   }\n        }\n        if (!$isEven) {\n            $result[] = $value;\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $has_even_digit = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even_digit = true;\n                break;\n            }\n\
    \        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $is_even = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n  \
    \              if ($str[$i] % 2 == 0) {\n                    $is_even = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$is_even) {\n                $result[] = $value;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $even = true;\n                break;\n       \
    \     }\n        }\n        if (!$even) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $has_even_digit = true;\n        \
    \        break;\n            }\n        }\n        if (!$has_even_digit) {\n \
    \           $result[] = $number;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7_0ew4z.php:34\n\
    Stack trace:\n#0 /tmp/tmpi7_0ew4z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi7_0ew4z.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4850voh.php:37\n\
    Stack trace:\n#0 /tmp/tmpq4850voh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq4850voh.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $is_even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $is_even = true;\n                break;\n    \
    \        }\n        }\n        if (!$is_even) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $item) {\n        if (strlen($item) == 1) {\n            $result[] =\
    \ $item;\n        } else {\n            $str = strval($item);\n            $is_even\
    \ = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n            \
    \    if ($str[$i] % 2 == 0) {\n                    $is_even = true;\n        \
    \            break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = $item;\n            }\n        }\n    }\n   \
    \ sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            $digits\
    \ = str_split($value);\n            foreach ($digits as $digit) {\n          \
    \      if ($digit % 2 == 0) {\n                    $has_even = true;\n       \
    \             break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $string = strval($value);\n       \
    \     $flag = true;\n            for ($i = 0; $i < strlen($string); $i++) {\n\
    \                if ($string[$i] % 2 == 0) {\n                    $flag = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($flag) {\n                $result[] = $value;\n            }\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n   \
    \ [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd083jkuv.php:29\n\
    Stack trace:\n#0 /tmp/tmpd083jkuv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd083jkuv.php\
    \ on line 29\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $digits = str_split($value);\n    $has_even = false;\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            array_push($result,\
    \ $num);\n        } else {\n            $str = strval($num);\n            $even\
    \ = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n            \
    \    if ($str[$i] % 2 == 0) {\n                    $even = true;\n           \
    \         break;\n                }\n            }\n            if (!$even) {\n\
    \                array_push($result, $num);\n            }\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) > 1) {\n            $value = str_split($value);\n\
    \            $count = 0;\n            foreach ($value as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $count++;\n              \
    \  }\n            }\n            if ($count == 0) {\n                $result[]\
    \ = implode($value);\n            }\n        } else {\n            $result[] =\
    \ $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6q81qkwf.php:37\n\
    Stack trace:\n#0 /tmp/tmp6q81qkwf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6q81qkwf.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $has_even =\
    \ false;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $has_even = true;\n                break;\n          \
    \  }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_even = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_even = true;\n                break;\n            }\n    \
    \    }\n        if (!$is_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $has_even_digit = false;\n        $number_string\
    \ = strval($number);\n        for ($i = 0; $i < strlen($number_string); $i++)\
    \ {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = strval($value);\n        $is_unique = true;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if (intval($str[$i])\
    \ % 2 == 0) {\n                $is_unique = false;\n                break;\n \
    \           }\n        }\n        if ($is_unique) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strlen(strval($value)) == 1) {\n      array_push($result,\
    \ $value);\n    } else {\n      $str = strval($value);\n      $has_even = false;\n\
    \      for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i] % 2 == 0)\
    \ {\n          $has_even = true;\n          break;\n        }\n      }\n     \
    \ if (!$has_even) {\n        array_push($result, $value);\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $hasEven = true;\n                break;\n        \
    \    }\n        }\n        if (!$hasEven) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_unique =\
    \ true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $hasEvenDigit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $hasEvenDigit = true;\n          \
    \      break;\n            }\n        }\n        if (!$hasEvenDigit) {\n     \
    \       $result[] = (int) $number;\n        }\n    }\n    sort($result);\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq80v9onp.php:34\n\
    Stack trace:\n#0 /tmp/tmpq80v9onp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq80v9onp.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $temp = str_split($value);\n       \
    \     $flag = true;\n            foreach ($temp as $digit) {\n               \
    \ if ($digit % 2 == 0) {\n                    $flag = false;\n               \
    \     break;\n                }\n            }\n            if ($flag) {\n   \
    \             array_push($result, $value);\n            }\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $is_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $is_even = true;\n                break;\n        \
    \    }\n        }\n        if (!$is_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $hasEven = true;\n                break;\n        \
    \    }\n        }\n        if (!$hasEven) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $unique_digits = array();\n\
    \    foreach ($x as $number) {\n        $has_even_digit = false;\n        $number_string\
    \ = (string) $number;\n        for ($i = 0; $i < strlen($number_string); $i++)\
    \ {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $unique_digits[] = $number;\n        }\n    }\n    sort($unique_digits);\n\
    \    return $unique_digits;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $flag = true;\n            for ($i = 0; $i < strlen($str); $i++) {\n      \
    \          if ($str[$i] % 2 == 0) {\n                    $flag = false;\n    \
    \                break;\n                }\n            }\n            if ($flag)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $digits = str_split($num);\n        $is_unique = true;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_unique = false;\n                break;\n            }\n \
    \       }\n        if ($is_unique) {\n            $result[] = $num;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $number) {\n\t\tif (strpos($number, '2') === false && strpos($number,\
    \ '4') === false && strpos($number, '6') === false && strpos($number, '8') ===\
    \ false) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83ad2_gm.php:27\n\
    Stack trace:\n#0 /tmp/tmp83ad2_gm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp83ad2_gm.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false &&\n           \
    \ strpos($value, '4') === false &&\n            strpos($value, '6') === false\
    \ &&\n            strpos($value, '8') === false &&\n            strpos($value,\
    \ '0') === false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = strval($value);\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $isEven = true;\n                break;\n         \
    \   }\n        }\n        if (!$isEven) {\n            array_push($result, $value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $value = str_split($value);\n     \
    \       $flag = true;\n            foreach ($value as $digit) {\n            \
    \    if ($digit % 2 == 0) {\n                    $flag = false;\n            \
    \        break;\n                }\n            }\n            if ($flag) {\n\
    \                $result[] = implode($value);\n            }\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dmjkq65.php:38\n\
    Stack trace:\n#0 /tmp/tmp9dmjkq65.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9dmjkq65.php\
    \ on line 38\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        $is_unique = true;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $is_unique = false;\n                break;\n \
    \           }\n        }\n        if ($is_unique) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, \"2\") === false && strpos($value,\
    \ \"4\") === false && strpos($value, \"6\") === false && strpos($value, \"8\"\
    ) === false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10u8dg4w.php:27\n\
    Stack trace:\n#0 /tmp/tmp10u8dg4w.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp10u8dg4w.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number_string = (string) $number;\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number_string); $i++) {\n      \
    \      if ($number_string[$i] % 2 == 0) {\n                $has_even_digit = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $flag = true;\n  \
    \      for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2 ==\
    \ 0) {\n                $flag = false;\n                break;\n            }\n\
    \        }\n        if ($flag) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $has_even_digit = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even_digit = true;\n                break;\n            }\n\
    \        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$digits = str_split($value);\n\t\t$has_even = false;\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_unique =\
    \ true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $digits = str_split($value);\n    $has_even = false;\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = strval($value);\n        if (strpos($value,\
    \ '2') === false && strpos($value, '4') === false && strpos($value, '6') === false\
    \ && strpos($value, '8') === false) {\n            $result[] = $value;\n     \
    \   }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjnrgkln.php:27\n\
    Stack trace:\n#0 /tmp/tmpwjnrgkln.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwjnrgkln.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[] = $num;\n\
    \        } else {\n            $num_str = strval($num);\n            $is_unique\
    \ = true;\n            for ($i = 0; $i < strlen($num_str); $i++) {\n         \
    \       if ($num_str[$i] % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                $result[] = $num;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_unique =\
    \ true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = (string)$value;\n        $is_unique = true;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $is_unique = false;\n                break;\n     \
    \       }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false &&\n           \
    \ strpos($value, '4') === false &&\n            strpos($value, '6') === false\
    \ &&\n            strpos($value, '8') === false) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp0ys9u8w.php:30\n\
    Stack trace:\n#0 /tmp/tmpp0ys9u8w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp0ys9u8w.php\
    \ on line 30\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (!preg_match('/[02468]/', $num)) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = (string)$value;\n\t\t$flag = true;\n\t\tfor ($i\
    \ = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$flag\
    \ = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($flag) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $has_even_digit = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even_digit = true;\n                break;\n            }\n\
    \        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $array = str_split($value);\n     \
    \       $flag = true;\n            foreach ($array as $digit) {\n            \
    \    if ($digit % 2 == 0) {\n                    $flag = false;\n            \
    \        break;\n                }\n            }\n            if ($flag) {\n\
    \                $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = (string)$value;\n\t\t$str = str_split($str);\n\t\
    \t$is_even = false;\n\t\tforeach ($str as $digit) {\n\t\t\tif ($digit % 2 == 0)\
    \ {\n\t\t\t\t$is_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$is_even)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $is_even = false;\n            $value\
    \ = str_split($value);\n            foreach ($value as $digit) {\n           \
    \     if ($digit % 2 == 0) {\n                    $is_even = true;\n         \
    \           break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = implode($value);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvrgqubs.php:38\n\
    Stack trace:\n#0 /tmp/tmpbvrgqubs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbvrgqubs.php\
    \ on line 38\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt58e6y_.php:27\n\
    Stack trace:\n#0 /tmp/tmppt58e6y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppt58e6y_.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = strval($value);\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $isEven = true;\n                break;\n         \
    \   }\n        }\n        if (!$isEven) {\n            array_push($result, $value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq80v9onp.php:34\n\
    Stack trace:\n#0 /tmp/tmpq80v9onp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq80v9onp.php\
    \ on line 34\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $value = str_split($value);\n     \
    \       $is_even = false;\n            foreach ($value as $digit) {\n        \
    \        if ($digit % 2 == 0) {\n                    $is_even = true;\n      \
    \              break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = implode($value);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp739h0ilw.php:38\n\
    Stack trace:\n#0 /tmp/tmp739h0ilw.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp739h0ilw.php\
    \ on line 38\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $isEven = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!$isEven) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $res = [];\n    foreach\
    \ ($x as $num) {\n        $str = strval($num);\n        $has_even = false;\n \
    \       for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $res[] = $num;\n  \
    \      }\n    }\n    sort($res);\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $is_unique = true;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $is_unique = false;\n                break;\n \
    \           }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($x));\necho \"\\n\";\n\n$x = array(152,\
    \ 323, 1422, 10);\nprint_r(unique_digits($x));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nArray\n(\n)\n\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuka_s3ev.php:41\n\
    Stack trace:\n#0 /tmp/tmpuka_s3ev.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuka_s3ev.php\
    \ on line 41\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num_str = strval($num);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $has_even = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n \
    \               if ($str[$i] % 2 == 0) {\n                    $has_even = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$has_even) {\n                $result[] = $value;\n            }\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        if (strpos($value,\
    \ '2') === false && strpos($value, '4') === false && strpos($value, '6') === false\
    \ && strpos($value, '8') === false) {\n            $result[] = $value;\n     \
    \   }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevf7k83d.php:27\n\
    Stack trace:\n#0 /tmp/tmpevf7k83d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpevf7k83d.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num_str = strval($num);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $hasEven = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt58e6y_.php:27\n\
    Stack trace:\n#0 /tmp/tmppt58e6y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppt58e6y_.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$digits = str_split($value);\n\t\t$hasEven = false;\n\t\
    \tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$hasEven\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$hasEven) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $str = strval($num);\n        $hasEven = false;\n  \
    \      for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2 ==\
    \ 0) {\n                $hasEven = true;\n                break;\n           \
    \ }\n        }\n        if (!$hasEven) {\n            $result[] = $num;\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $flag = true;\n            for ($i = 0; $i < strlen($str); $i++) {\n      \
    \          if ($str[$i] % 2 == 0) {\n                    $flag = false;\n    \
    \                break;\n                }\n            }\n            if ($flag)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $flag = true;\n            for ($i = 0; $i < strlen($str); $i++) {\n      \
    \          if ($str[$i] % 2 == 0) {\n                    $flag = false;\n    \
    \                break;\n                }\n            }\n            if ($flag)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $hasEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        if (!preg_match('/[02468]/',\
    \ $value)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgranwzw9.php:27\n\
    Stack trace:\n#0 /tmp/tmpgranwzw9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgranwzw9.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnktl7wlx.php:37\n\
    Stack trace:\n#0 /tmp/tmpnktl7wlx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnktl7wlx.php\
    \ on line 37\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (!has_even_digit($num)) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpbudaksag.php:13\nStack trace:\n#0 /tmp/tmpbudaksag.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpbudaksag.php(26): candidate(Array)\n#2 /tmp/tmpbudaksag.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbudaksag.php on line 13\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $str = (string)$num;\n        $hasEven = false;\n  \
    \      for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2 ==\
    \ 0) {\n                $hasEven = true;\n                break;\n           \
    \ }\n        }\n        if (!$hasEven) {\n            $result[] = $num;\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$digits = str_split($value);\n\t\t$has_even = false;\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num = (string)$num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            if ($num[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = (int)$num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($x));\n\n$x = array(152, 323, 1422, 10);\n\
    print_r(unique_digits($x));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $num_str = strval($num);\n    if (strpos($num_str, '2')\
    \ === false &&\n        strpos($num_str, '4') === false &&\n        strpos($num_str,\
    \ '6') === false &&\n        strpos($num_str, '8') === false) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7t97180.php:31\n\
    Stack trace:\n#0 /tmp/tmpb7t97180.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb7t97180.php\
    \ on line 31\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strpos($number, '2') === false &&\n \
    \           strpos($number, '4') === false &&\n            strpos($number, '6')\
    \ === false &&\n            strpos($number, '8') === false &&\n            strpos($number,\
    \ '0') === false) {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $n) {\n    if (strpos(strval($n), '2') === false &&\n        strpos(strval($n),\
    \ '4') === false &&\n        strpos(strval($n), '6') === false &&\n        strpos(strval($n),\
    \ '8') === false) {\n      $result[] = $n;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2dsbcxr.php:30\n\
    Stack trace:\n#0 /tmp/tmpr2dsbcxr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr2dsbcxr.php\
    \ on line 30\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num = (string)$num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            if ($num[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = (int)$num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $value = (string)$value;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($value); $i++) {\n            if\
    \ ($value[$i] % 2 == 0) {\n                $has_even = true;\n               \
    \ break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = (int)$value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strpos($number, '2') === false &&\n \
    \           strpos($number, '4') === false &&\n            strpos($number, '6')\
    \ === false &&\n            strpos($number, '8') === false) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7rr8imsj.php:30\n\
    Stack trace:\n#0 /tmp/tmp7rr8imsj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7rr8imsj.php\
    \ on line 30\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strpos((string)$number, '2') === false\
    \ &&\n            strpos((string)$number, '4') === false &&\n            strpos((string)$number,\
    \ '6') === false &&\n            strpos((string)$number, '8') === false) {\n \
    \           $result[] = $number;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c7qmm63.php:30\n\
    Stack trace:\n#0 /tmp/tmp6c7qmm63.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6c7qmm63.php\
    \ on line 30\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvi3vtan.php:27\n\
    Stack trace:\n#0 /tmp/tmprvi3vtan.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprvi3vtan.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $number) {\n\t\t$has_even_digit = false;\n\t\t$number_string = (string)\
    \ $number;\n\t\tfor ($i = 0; $i < strlen($number_string); $i++) {\n\t\t\tif ($number_string[$i]\
    \ % 2 == 0) {\n\t\t\t\t$has_even_digit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\t\tif (!$has_even_digit) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\tsort($result);\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvi3vtan.php:27\n\
    Stack trace:\n#0 /tmp/tmprvi3vtan.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprvi3vtan.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $item) {\n        $item = strval($item);\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($item); $i++) {\n            if ($item[$i] %\
    \ 2 == 0) {\n                $hasEven = true;\n                break;\n      \
    \      }\n        }\n        if (!$hasEven) {\n            $result[] = intval($item);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $hasEvenDigit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $hasEvenDigit = true;\n                break;\n   \
    \         }\n        }\n        if (!$hasEvenDigit) {\n            $result[] =\
    \ $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$digits = str_split($value);\n\t\t$hasEven = false;\n\t\
    \tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$hasEven\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$hasEven) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $str = (string)$num;\n        $has_even = false;\n \
    \       for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    $number_str = (string)$number;\n    $has_even_digit =\
    \ false;\n    for ($i = 0; $i < strlen($number_str); $i++) {\n      if ($number_str[$i]\
    \ % 2 == 0) {\n        $has_even_digit = true;\n        break;\n      }\n    }\n\
    \    if (!$has_even_digit) {\n      $result[] = $number;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$value = (string)$value;\n\t\t$has_even = false;\n\t\t\
    for ($i = 0; $i < strlen($value); $i++) {\n\t\t\tif ($value[$i] % 2 == 0) {\n\t\
    \t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\
    \t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06wdv22b.php:34\n\
    Stack trace:\n#0 /tmp/tmp06wdv22b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp06wdv22b.php\
    \ on line 34\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (!has_even_digit($value)) {\n      $result[] = $value;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpfscytvb7.php:13\nStack trace:\n#0 /tmp/tmpfscytvb7.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpfscytvb7.php(26): candidate(Array)\n#2 /tmp/tmpfscytvb7.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfscytvb7.php on line 13\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $is_even = false;\n            foreach ($digits as $digit) {\n      \
    \          if ($digit % 2 == 0) {\n                    $is_even = true;\n    \
    \                break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = strval($value);\n\t\t$flag = true;\n\t\tfor ($i\
    \ = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$flag\
    \ = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($flag) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\tforeach ($x\
    \ as $num) {\n\t\t$num = strval($num);\n\t\t$has_even = false;\n\t\tfor ($i =\
    \ 0; $i < strlen($num); $i++) {\n\t\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$y[] =\
    \ intval($num);\n\t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false &&\n           \
    \ strpos($value, '4') === false &&\n            strpos($value, '6') === false\
    \ &&\n            strpos($value, '8') === false &&\n            strpos($value,\
    \ '0') === false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_even = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_even = true;\n                break;\n            }\n    \
    \    }\n        if (!$is_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$has_even = false;\n\t\t$num_str = strval($num);\n\t\tfor\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n\t\t\tif ($num_str[$i] % 2 == 0) {\n\
    \t\t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\tarray_push($result, $num);\n\t\t}\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $is_unique =\
    \ true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num = strval($num);\n        if (strpos($num, '2')\
    \ === false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n            $result[] = intval($num);\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l489cqa.php:28\n\
    Stack trace:\n#0 /tmp/tmp9l489cqa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9l489cqa.php\
    \ on line 28\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strpos($num, '2') === false && strpos($num, '4')\
    \ === false && strpos($num, '6') === false && strpos($num, '8') === false) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub41gkf6.php:27\n\
    Stack trace:\n#0 /tmp/tmpub41gkf6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpub41gkf6.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = [];\n\tforeach ($x as\
    \ $value) {\n\t\tif (strlen($value) == 1) {\n\t\t\t$y[] = $value;\n\t\t} else\
    \ {\n\t\t\t$z = str_split($value);\n\t\t\t$even = false;\n\t\t\tforeach ($z as\
    \ $value) {\n\t\t\t\tif ($value % 2 == 0) {\n\t\t\t\t\t$even = true;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t\tif (!$even) {\n\t\t\t\t$y[] = $value;\n\t\t\t}\n\t\t}\n\t}\n\
    \tsort($y);\n\treturn $y;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkquecrt8.php:37\n\
    Stack trace:\n#0 /tmp/tmpkquecrt8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkquecrt8.php\
    \ on line 37\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $hasEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $is_even = false;\n            foreach ($digits as $digit) {\n      \
    \          if ($digit % 2 == 0) {\n                    $is_even = true;\n    \
    \                break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, \"2\") === false && strpos($value,\
    \ \"4\") === false && strpos($value, \"6\") === false && strpos($value, \"8\"\
    ) === false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10u8dg4w.php:27\n\
    Stack trace:\n#0 /tmp/tmp10u8dg4w.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp10u8dg4w.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $hasEven = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos($value, '2') === false &&\n        strpos($value,\
    \ '4') === false &&\n        strpos($value, '6') === false &&\n        strpos($value,\
    \ '8') === false) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqrueg_z.php:30\n\
    Stack trace:\n#0 /tmp/tmpaqrueg_z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaqrueg_z.php\
    \ on line 30\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $hasEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $hasEven = false;\n\
    \        for ($i = 0; $i < strlen($number); $i++) {\n            if ($number[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = (int)\
    \ $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        if (!has_even_digit($number)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp5l2v_f4c.php:13\nStack trace:\n#0 /tmp/tmp5l2v_f4c.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp5l2v_f4c.php(26): candidate(Array)\n#2 /tmp/tmp5l2v_f4c.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5l2v_f4c.php on line 13\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $has_even_digit = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even_digit = true;\n                break;\n            }\n\
    \        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (!has_even_digit($num)) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpbudaksag.php:13\nStack trace:\n#0 /tmp/tmpbudaksag.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpbudaksag.php(26): candidate(Array)\n#2 /tmp/tmpbudaksag.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbudaksag.php on line 13\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $is_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $is_even = true;\n                    break;\n   \
    \             }\n            }\n            if (!$is_even) {\n               \
    \ $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbii5qdn.php:37\n\
    Stack trace:\n#0 /tmp/tmpbbii5qdn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbbii5qdn.php\
    \ on line 37\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $str = strval($value);\n        $is_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $is_even = true;\n                break;\n        \
    \    }\n        }\n        if (!$is_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahf6nn9.php:27\n\
    Stack trace:\n#0 /tmp/tmpkahf6nn9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkahf6nn9.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$num_str = (string)$num;\n\t\t$has_even = false;\n\t\tfor\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n\t\t\tif ($num_str[$i] % 2 == 0) {\n\
    \t\t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\t$result[] = $num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = (string) $number;\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $has_even_digit = true;\n        \
    \        break;\n            }\n        }\n        if (!$has_even_digit) {\n \
    \           $result[] = (int) $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num = (string) $num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            if ((int) $num[$i]\
    \ % 2 === 0) {\n                $has_even = true;\n                break;\n  \
    \          }\n        }\n        if (!$has_even) {\n            $result[] = (int)\
    \ $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num_str = (string)$num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num_str = strval($num);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strpos($num, '2') === false && strpos($num, '4')\
    \ === false && strpos($num, '6') === false && strpos($num, '8') === false) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub41gkf6.php:27\n\
    Stack trace:\n#0 /tmp/tmpub41gkf6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpub41gkf6.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $num_str = strval($num);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [15, 33,\
    \ 1422, 1];\nprint_r(unique_digits($x));\necho \"\\n\";\n$x = [152, 323, 1422,\
    \ 10];\nprint_r(unique_digits($x));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nArray\n(\n)\n\
    \n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $even = false;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $even = true;\n                    break;\n         \
    \       }\n            }\n            if (!$even) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnqry5ox.php:37\n\
    Stack trace:\n#0 /tmp/tmppnqry5ox.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppnqry5ox.php\
    \ on line 37\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\tforeach ($x\
    \ as $value) {\n\t\t$str = strval($value);\n\t\t$flag = 0;\n\t\tfor ($i = 0; $i\
    \ < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$flag = 1;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($flag == 0) {\n\t\t\tarray_push($y, $value);\n\
    \t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}\n\nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $has_even_digit = false;\n    $digits = str_split($value);\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even_digit\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even_digit) {\n     \
    \ $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strlen($value) == 1) {\n      array_push($result,\
    \ $value);\n    } else {\n      $has_even = false;\n      for ($i = 0; $i < strlen($value);\
    \ $i++) {\n        if ($value[$i] % 2 == 0) {\n          $has_even = true;\n \
    \         break;\n        }\n      }\n      if (!$has_even) {\n        array_push($result,\
    \ $value);\n      }\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqxf5bwq.php:37\n\
    Stack trace:\n#0 /tmp/tmpcqxf5bwq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcqxf5bwq.php\
    \ on line 37\n"
  timestamp: 1659729948
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    if (strpos($num, '2') === false && strpos($num, '4') ===\
    \ false && strpos($num, '6') === false && strpos($num, '8') === false) {\n   \
    \   $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d130phx.php:27\n\
    Stack trace:\n#0 /tmp/tmp5d130phx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5d130phx.php\
    \ on line 27\n"
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $digits = str_split($value);\n        $has_even =\
    \ false;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $has_even = true;\n                break;\n          \
    \  }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yah7ejp.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yah7ejp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yah7ejp.php\
    \ on line 27\n"
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        $value = (string)$value;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = (int)$value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[] = $num;\n\
    \        } else {\n            $num_str = strval($num);\n            $is_unique\
    \ = true;\n            for ($i = 0; $i < strlen($num_str); $i++) {\n         \
    \       if ($num_str[$i] % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                $result[] = $num;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = strval($number);\n        if (strpos($number,\
    \ '2') === false &&\n            strpos($number, '4') === false &&\n         \
    \   strpos($number, '6') === false &&\n            strpos($number, '8') === false\
    \ &&\n            strpos($number, '0') === false) {\n            $result[] = intval($number);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729948

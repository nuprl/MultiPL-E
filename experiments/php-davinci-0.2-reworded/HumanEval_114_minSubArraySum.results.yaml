language: php
name: HumanEval_114_minSubArraySum
results:
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = 0;\n    $sum = 0;\n    $min = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > $minSum) {\n            $minSum = $sum;\n        }\n    }\n    return $minSum\
    \ - $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnygpgbm.php:30\n\
    Stack trace:\n#0 /tmp/tmpfnygpgbm.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfnygpgbm.php\
    \ on line 30\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt4xn1j0.php:36\n\
    Stack trace:\n#0 /tmp/tmpdt4xn1j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdt4xn1j0.php\
    \ on line 36\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n            $left = $i + 1;\n        }\n    }\n\
    \    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\n\
    echo minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt4xn1j0.php:36\n\
    Stack trace:\n#0 /tmp/tmpdt4xn1j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdt4xn1j0.php\
    \ on line 36\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n    \
    \        $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4))\
    \ . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left =\
    \ 0;\n    $right = 0;\n    while ($right < count($nums)) {\n        $sum += $nums[$right];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$left];\n            $left++;\n        }\n        $right++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    $len = count($nums);\n    for ($i = 1; $i < $len; $i++) {\n        $currSum\
    \ = min($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\n$inputArray = array(2, 3, 4, 1, 2, 4);\necho minSubArraySum($inputArray);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = 0;\n    $sum = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum)\
    \ {\n            $minSum = $sum;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqnx7eox.php:26\n\
    Stack trace:\n#0 /tmp/tmpqqnx7eox.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqqnx7eox.php\
    \ on line 26\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n    \
    \        $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt4xn1j0.php:36\n\
    Stack trace:\n#0 /tmp/tmpdt4xn1j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdt4xn1j0.php\
    \ on line 36\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n\
    \        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n  \
    \      }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n     \
    \   }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt4xn1j0.php:36\n\
    Stack trace:\n#0 /tmp/tmpdt4xn1j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdt4xn1j0.php\
    \ on line 36\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $currSum = 0;\n   \
    \ $start = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currSum +=\
    \ $nums[$i];\n        while ($currSum >= $minSum) {\n            $minSum = min($minSum,\
    \ $currSum);\n            $currSum -= $nums[$start];\n            $start++;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qfkjljb.php:29\n\
    Stack trace:\n#0 /tmp/tmp6qfkjljb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6qfkjljb.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) .\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    foreach\
    \ ($nums as $num) {\n        $sum += $num;\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf24hmbq2.php:27\n\
    Stack trace:\n#0 /tmp/tmpf24hmbq2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf24hmbq2.php\
    \ on line 27\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        if ($sum < $minSum) {\n            $minSum = $sum;\n        }\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n            $start = $end + 1;\n \
    \       }\n        $end++;\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = 0;\n    $sum = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum)\
    \ {\n            $minSum = $sum;\n        }\n    }\n    return $minSum;\n}\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jynt4ng.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jynt4ng.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8jynt4ng.php\
    \ on line 25\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt4xn1j0.php:36\n\
    Stack trace:\n#0 /tmp/tmpdt4xn1j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdt4xn1j0.php\
    \ on line 36\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n    \
    \        $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum - $left);\n        $left = min($left, $sum);\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s5_jdtu.php:26\n\
    Stack trace:\n#0 /tmp/tmp8s5_jdtu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8s5_jdtu.php\
    \ on line 26\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        if ($sum < $minSum) {\n            $minSum = $sum;\n        }\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n            $start = $end + 1;\n \
    \       }\n        $end++;\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n\
    \    $start = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $currentSum\
    \ += $nums[$end];\n        while ($currentSum >= $minSum) {\n            $minSum\
    \ = min($minSum, $currentSum);\n            $currentSum -= $nums[$start];\n  \
    \          $start++;\n        }\n        $end++;\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnef1ouuq.php:31\n\
    Stack trace:\n#0 /tmp/tmpnef1ouuq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnef1ouuq.php\
    \ on line 31\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ir9brt.php:37\n\
    Stack trace:\n#0 /tmp/tmp9_ir9brt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_ir9brt.php\
    \ on line 37\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = max($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e96i9y9.php:24\n\
    Stack trace:\n#0 /tmp/tmp2e96i9y9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2e96i9y9.php\
    \ on line 24\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n    \
    \        $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpki_lhcwt.php:34\n\
    Stack trace:\n#0 /tmp/tmpki_lhcwt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpki_lhcwt.php\
    \ on line 34\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $sum = 0;\n    $len = count($nums);\n  \
    \  for ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexlcdiub.php:26\n\
    Stack trace:\n#0 /tmp/tmpexlcdiub.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpexlcdiub.php\
    \ on line 26\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    $len = count($nums);\n    for ($i = 1; $i < $len; $i++) {\n        $currSum\
    \ = min($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: -1
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    $end = 0;\n    while ($end < count($nums)) {\n        $sum += $nums[$end];\n\
    \        while ($sum >= 0) {\n            $min = min($min, $sum);\n          \
    \  $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) .\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730937
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $min) {\n            $min = min($min, $sum);\n       \
    \     $sum -= $nums[$start];\n            $start++;\n        }\n    }\n    return\
    \ $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5st34eui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5st34eui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5st34eui.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\n\
    echo minSubArraySum(array(-1, -2, -3)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    -6

    '
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n   \
    \ }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmajeingi.php:35\n\
    Stack trace:\n#0 /tmp/tmpmajeingi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmajeingi.php\
    \ on line 35\n"
  timestamp: 1659730932
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        while ($sum >= $minSum) {\n            $minSum = min($minSum, $sum);\n\
    \            $sum -= $nums[$start];\n            $start++;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9la4t6to.php:29\n\
    Stack trace:\n#0 /tmp/tmp9la4t6to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9la4t6to.php\
    \ on line 29\n"
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction\
    \ minSubArraySum($nums) {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730932

name: HumanEval_111_histogram
language: php
prompt: "<?php\n// Given a string representing a space separated lowercase letters,\
  \ return an array\n// of the letter with the most repetition and containing the\
  \ corresponding count.\n// If several letters have the same occurrence, return all\
  \ of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\"\
  \ => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" =>\
  \ 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>>\
  \ histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\n\
  function histogram($test) {\n"
tests: "function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\"\
  ) !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
  \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"\
  r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    foreach ($result as $key => $value)\
    \ {\n        if ($value != $max) {\n            unset($result[$key]);\n      \
    \  }\n    }\n    return $result;\n}\n", "\t$test = explode(\" \", $test);\n\t\
    $test = array_count_values($test);\n\tarsort($test);\n\t$max = max($test);\n\t\
    $result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value == $max)\
    \ {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "   \
    \ $test = explode(\" \", $test);\n    $result = array();\n    $max = 0;\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n        if ($result[$value] > $max) {\n            $max = $result[$value];\n\
    \        }\n    }\n    foreach ($result as $key => $value) {\n        if ($value\
    \ < $max) {\n            unset($result[$key]);\n        }\n    }\n    return $result;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\
    \t$max = max($test);\n\t$result = array();\n\tforeach ($test as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $histogram))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "  $letters = explode(\"\
    \ \", $test);\n  $counts = array();\n  foreach ($letters as $letter) {\n    if\
    \ (array_key_exists($letter, $counts)) {\n      $counts[$letter]++;\n    } else\
    \ {\n      $counts[$letter] = 1;\n    }\n  }\n  $max = max($counts);\n  $results\
    \ = array();\n  foreach ($counts as $key => $value) {\n    if ($value == $max)\
    \ {\n      $results[$key] = $value;\n    }\n  }\n  return $results;\n}\n", " \
    \   $letters = explode(\" \", $test);\n    $counts = array();\n    foreach ($letters\
    \ as $letter) {\n        if (array_key_exists($letter, $counts)) {\n         \
    \   $counts[$letter]++;\n        } else {\n            $counts[$letter] = 1;\n\
    \        }\n    }\n    return $counts;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]\
    \ += 1;\n        } else {\n            $result[$value] = 1;\n        }\n    }\n\
    \    $max = max($result);\n    $result = array_filter($result, function($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n", "    $test = str_replace(\" \", \"\", $test);\n    $test = str_split($test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (isset($histogram[$letter])) {\n          \
    \  $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $test = str_replace(\" \"\
    , \"\", $test);\n  $test = str_split($test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = array();\n  foreach ($test as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $newArr\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $newArr[$key] = $value;\n        }\n    }\n    return $newArr;\n\
    }\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $histogram = array();\n  foreach ($test\
    \ as $letter) {\n    if (array_key_exists($letter, $histogram)) {\n      $histogram[$letter]\
    \ += 1;\n    } else {\n      $histogram[$letter] = 1;\n    }\n  }\n  return $histogram;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = array();\n  foreach ($test as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $result = array();\n \
    \   foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (isset($histogram[$letter])) {\n          \
    \  $histogram[$letter]++;\n        } else {\n            $histogram[$letter] =\
    \ 1;\n        }\n    }\n    $max = max($histogram);\n    foreach ($histogram as\
    \ $key => $value) {\n        if ($value != $max) {\n            unset($histogram[$key]);\n\
    \        }\n    }\n    return $histogram;\n}", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\t\
    arsort($test);\n\t$max = reset($test);\n\tforeach ($test as $key => $value) {\n\
    \t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t}\n\treturn $test;\n\
    }\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $arr = explode(\" \", $test);\n    $hist = array();\n \
    \   foreach ($arr as $value) {\n        if (array_key_exists($value, $hist)) {\n\
    \            $hist[$value]++;\n        } else {\n            $hist[$value] = 1;\n\
    \        }\n    }\n    $max = max($hist);\n    $result = array();\n    foreach\
    \ ($hist as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $test_array = explode(\" \"\
    , $test);\n    foreach ($test_array as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "  $letters\
    \ = explode(\" \", $test);\n  $counts = array();\n  foreach ($letters as $letter)\
    \ {\n    if (array_key_exists($letter, $counts)) {\n      $counts[$letter]++;\n\
    \    } else {\n      $counts[$letter] = 1;\n    }\n  }\n  $max = max($counts);\n\
    \  $result = array();\n  foreach ($counts as $key => $value) {\n    if ($value\
    \ == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "  $letters = explode(\" \", $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]++;\n\
    \        } else {\n            $letter_count[$letter] = 1;\n        }\n    }\n\
    \    $max_count = max($letter_count);\n    $max_letters = array();\n    foreach\
    \ ($letter_count as $letter => $count) {\n        if ($count == $max_count) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "\t$test = str_replace(\" \", \"\", $test);\n\t$test = str_split($test);\n\
    \t$test = array_count_values($test);\n\tarsort($test);\n\t$max = max($test);\n\
    \t$result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $key => $value) {\n        if (array_key_exists($value, $result)) {\n   \
    \         $result[$value]++;\n        } else {\n            $result[$value] =\
    \ 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "  $test_array = explode(\" \", $test);\n  $count_array\
    \ = array_count_values($test_array);\n  $max_count = max($count_array);\n  $result\
    \ = array();\n  foreach ($count_array as $key => $value) {\n    if ($value ==\
    \ $max_count) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n\
    }", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n", "    $letters = explode(\" \"\
    , $test);\n    $count = array_count_values($letters);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $result = array();\n  foreach ($test as $letter) {\n    if (isset($result[$letter]))\
    \ {\n      $result[$letter]++;\n    } else {\n      $result[$letter] = 1;\n  \
    \  }\n  }\n  $max = max($result);\n  $result = array_filter($result, function($value)\
    \ use ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n", " \
    \ $test = explode(\" \", $test);\n  $histogram = array();\n  foreach ($test as\
    \ $letter) {\n    if (array_key_exists($letter, $histogram)) {\n      $histogram[$letter]++;\n\
    \    } else {\n      $histogram[$letter] = 1;\n    }\n  }\n  $max = max($histogram);\n\
    \  $histogram = array_filter($histogram, function($value) use ($max) {\n    return\
    \ $value == $max;\n  });\n  return $histogram;\n}\n", "    $arr = explode(\" \"\
    , $test);\n    $count = array_count_values($arr);\n    $max = max($count);\n \
    \   $result = array();\n    foreach ($count as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\n$test = \"a b c\";\n$test1 = \"a b b a\";\n$test2 = \"a b c a\
    \ b\";\n$test3 = \"b b b b a\";\n$test4 = \"\";\n\nprint_r(histogram($test));\n\
    print_r(histogram($test1));\nprint_r(histogram($test2));\nprint_r(histogram($test3));\n\
    print_r(histogram($test4));\n", "    $test = explode(\" \", $test);\n    $test\
    \ = array_count_values($test);\n    $max = max($test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($array as $value) {\n        if (array_key_exists($value,\
    \ $histogram)) {\n            $histogram[$value]++;\n        } else {\n      \
    \      $histogram[$value] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\n", "  $test = explode(\" \", $test);\n  $result =\
    \ array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $result)) {\n      $result[$value] += 1;\n    } else {\n      $result[$value]\
    \ = 1;\n    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\n$result = histogram($test);\n\
    print_r($result);\n\n$test = \"a b b a\";\n$result = histogram($test);\nprint_r($result);\n\
    \n$test = \"a b c a b\";\n$result = histogram($test);\nprint_r($result);\n\n$test\
    \ = \"b b b b a\";\n$result = histogram($test);\nprint_r($result);\n\n$test =\
    \ \"\";\n$result = histogram($test);\nprint_r($result);", "  $test = explode(\"\
    \ \", $test);\n  $count = array_count_values($test);\n  $max = max($count);\n\
    \  $result = array();\n  foreach ($count as $key => $value) {\n    if ($value\
    \ == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "    $letters = explode(\" \", $test);\n    $counts = array();\n    foreach ($letters\
    \ as $letter) {\n        if (isset($counts[$letter])) {\n            $counts[$letter]++;\n\
    \        } else {\n            $counts[$letter] = 1;\n        }\n    }\n    $max\
    \ = max($counts);\n    $max_letters = array();\n    foreach ($counts as $letter\
    \ => $count) {\n        if ($count == $max) {\n            $max_letters[$letter]\
    \ = $count;\n        }\n    }\n    return $max_letters;\n}", "  $letters = explode(\"\
    \ \", $test);\n  $counts = array();\n  foreach ($letters as $letter) {\n    if\
    \ (isset($counts[$letter])) {\n      $counts[$letter]++;\n    } else {\n     \
    \ $counts[$letter] = 1;\n    }\n  }\n  $max = max($counts);\n  $result = array();\n\
    \  foreach ($counts as $letter => $count) {\n    if ($count == $max) {\n     \
    \ $result[$letter] = $count;\n    }\n  }\n  return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $histogram = array();\n    foreach ($test as $letter)\
    \ {\n        if (!array_key_exists($letter, $histogram)) {\n            $histogram[$letter]\
    \ = 1;\n        } else {\n            $histogram[$letter]++;\n        }\n    }\n\
    \    return $histogram;\n}\n", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "  $letters = explode(\" \", $test);\n  $letter_count = array();\n  foreach ($letters\
    \ as $letter) {\n    if (array_key_exists($letter, $letter_count)) {\n      $letter_count[$letter]++;\n\
    \    } else {\n      $letter_count[$letter] = 1;\n    }\n  }\n  $max_count = max($letter_count);\n\
    \  $max_letters = array();\n  foreach ($letter_count as $letter => $count) {\n\
    \    if ($count == $max_count) {\n      $max_letters[$letter] = $count;\n    }\n\
    \  }\n  return $max_letters;\n}\n", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "  $array = explode(\" \", $test);\n  $histogram = array();\n  foreach ($array as\
    \ $value) {\n    if (array_key_exists($value, $histogram)) {\n      $histogram[$value]\
    \ += 1;\n    } else {\n      $histogram[$value] = 1;\n    }\n  }\n  return $histogram;\n\
    }\n", "  $letters = explode(\" \", $test);\n  $histogram = array();\n  foreach\
    \ ($letters as $letter) {\n    if (array_key_exists($letter, $histogram)) {\n\
    \      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter] = 1;\n\
    \    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach ($histogram\
    \ as $key => $value) {\n    if ($value == $max) {\n      $result[$key] = $value;\n\
    \    }\n  }\n  return $result;\n}\n", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] += 1;\n        } else {\n        \
    \    $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n", "  $test\
    \ = explode(\" \", $test);\n  $histogram = array();\n  foreach ($test as $letter)\
    \ {\n    if (array_key_exists($letter, $histogram)) {\n      $histogram[$letter]++;\n\
    \    } else {\n      $histogram[$letter] = 1;\n    }\n  }\n  return $histogram;\n\
    }\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = str_replace(' ', '',\
    \ $test);\n    $test = str_split($test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n", "  $test = str_replace(\" \", \"\
    \", $test);\n  $test = str_split($test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = array();\n  foreach ($test as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array();\n\
    \    foreach ($letters as $letter) {\n        if (isset($counts[$letter])) {\n\
    \            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "  $test = explode(\" \", $test);\n  $result = array();\n  foreach ($test\
    \ as $value) {\n    if (array_key_exists($value, $result)) {\n      $result[$value]++;\n\
    \    } else {\n      $result[$value] = 1;\n    }\n  }\n  return $result;\n}\n",
  "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $counts = array();\n    foreach\
    \ ($letters as $letter) {\n        if (isset($counts[$letter])) {\n          \
    \  $counts[$letter]++;\n        } else {\n            $counts[$letter] = 1;\n\
    \        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n   \
    \ foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n  \
    \          $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }", "  $test = explode(\" \", $test);\n  $output = array();\n  foreach ($test\
    \ as $key => $value) {\n    if (array_key_exists($value, $output)) {\n      $output[$value]\
    \ += 1;\n    } else {\n      $output[$value] = 1;\n    }\n  }\n  return $output;\n\
    }\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function($value) use ($max) {\n        return $value == $max;\n    });\n   \
    \ return $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $result = array();\n  $test =\
    \ explode(\" \", $test);\n  $max = 0;\n  foreach ($test as $key => $value) {\n\
    \    if (array_key_exists($value, $result)) {\n      $result[$value]++;\n    }\
    \ else {\n      $result[$value] = 1;\n    }\n    if ($result[$value] > $max) {\n\
    \      $max = $result[$value];\n    }\n  }\n  foreach ($result as $key => $value)\
    \ {\n    if ($value != $max) {\n      unset($result[$key]);\n    }\n  }\n  return\
    \ $result;\n}\n", "\t$array = explode(\" \", $test);\n\t$count = array_count_values($array);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "  $letters = explode(\" \", $test);\n \
    \ $counts = array();\n  foreach ($letters as $letter) {\n    if (isset($counts[$letter]))\
    \ {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter] = 1;\n  \
    \  }\n  }\n  $max = max($counts);\n  $max_letters = array();\n  foreach ($counts\
    \ as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \tarsort($count);\n\t$max = max($count);\n\t$result = array();\n\tforeach ($count\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\t$test = explode(\" \", $test);\n\t$result\
    \ = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value] += 1;\n\t\t} else {\n\t\t\t$result[$value]\
    \ = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    foreach\
    \ ($count as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $histogram = array();\n    foreach ($test as $letter) {\n \
    \       if (array_key_exists($letter, $histogram)) {\n            $histogram[$letter]\
    \ += 1;\n        } else {\n            $histogram[$letter] = 1;\n        }\n \
    \   }\n    $max = max($histogram);\n    $result = array();\n    foreach ($histogram\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $array = explode(\"\
    \ \", $test);\n    $count = array_count_values($array);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result2 = array();\n\
    \    foreach ($result as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result2[$key] = $value;\n        }\n    }\n    return $result2;\n}",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter] += 1;\n        } else {\n        \
    \    $counts[$letter] = 1;\n        }\n    }\n    $max = max($counts);\n    $keys\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($keys as\
    \ $key) {\n        $result[$key] = $max;\n    }\n    return $result;\n}\n", " \
    \   $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n", "  $test\
    \ = explode(\" \", $test);\n  $result = array();\n  foreach ($test as $value)\
    \ {\n    if (!isset($result[$value])) {\n      $result[$value] = 1;\n    } else\
    \ {\n      $result[$value]++;\n    }\n  }\n  return $result;\n}\n", "  $test =\
    \ explode(\" \", $test);\n  $count = array_count_values($test);\n  $max = max($count);\n\
    \  $result = array();\n  foreach ($count as $key => $value) {\n    if ($value\
    \ == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "    $letters = explode(\" \", $test);\n    $letterCount = array();\n    foreach\
    \ ($letters as $letter) {\n        if (isset($letterCount[$letter])) {\n     \
    \       $letterCount[$letter]++;\n        } else {\n            $letterCount[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($letterCount);\n    $result = array();\n\
    \    foreach ($letterCount as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (isset($histogram[$letter])) {\n          \
    \  $histogram[$letter]++;\n        } else {\n            $histogram[$letter] =\
    \ 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}", "  $letters = explode(\" \", $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $letter_count =\
    \ array();\n    foreach ($letters as $letter) {\n        if (!isset($letter_count[$letter]))\
    \ {\n            $letter_count[$letter] = 0;\n        }\n        $letter_count[$letter]++;\n\
    \    }\n    $max_count = max($letter_count);\n    $max_letters = array();\n  \
    \  foreach ($letter_count as $letter => $count) {\n        if ($count == $max_count)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "  $test = explode(\" \", $test);\n  $histogram\
    \ = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value]++;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach\
    \ ($histogram as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\n$test2 =\
    \ \"a b b a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\"\
    ;\n\necho \"Test 1: \" . $test . \"\\n\";\nprint_r(histogram($test));\necho \"\
    \\n\";\necho \"Test 2: \" . $test2 . \"\\n\";\nprint_r(histogram($test2));\necho\
    \ \"\\n\";\necho \"Test 3: \" . $test3 . \"\\n\";\nprint_r(histogram($test3));\n\
    echo \"\\n\";\necho \"Test 4: \" . $test4 . \"\\n\";\nprint_r(histogram($test4));\n\
    echo \"\\n\";\necho \"Test 5: \" . $test5 . \"\\n\";\nprint_r(histogram($test5));\n\
    echo \"\\n\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $array\
    \ = explode(\" \", $test);\n    $count = array_count_values($array);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $test_array = explode(\" \", $test);\n\
    \    $count_array = array_count_values($test_array);\n    $max_value = max($count_array);\n\
    \    $max_keys = array_keys($count_array, $max_value);\n    $result = array();\n\
    \    foreach ($max_keys as $key) {\n        $result[$key] = $max_value;\n    }\n\
    \    return $result;\n}", "    $letters = explode(\" \", $test);\n    $count =\
    \ array_count_values($letters);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }\n", "    $array = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($array as $value) {\n        if (array_key_exists($value, $result)) {\n   \
    \         $result[$value]++;\n        } else {\n            $result[$value] =\
    \ 1;\n        }\n    }\n    $max = max($result);\n    $max_array = array();\n\
    \    foreach ($result as $key => $value) {\n        if ($value == $max) {\n  \
    \          $max_array[$key] = $value;\n        }\n    }\n    return $max_array;\n\
    }\n", "    $arr = explode(\" \", $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "  $letters = explode(\" \"\
    , $test);\n  $count = array_count_values($letters);\n  $max = max($count);\n \
    \ $result = array();\n  foreach ($count as $key => $value) {\n    if ($value ==\
    \ $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value]++;\n        } else {\n            $result[$value] = 1;\n   \
    \     }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $test = array_count_values($test);\n    $max = max($test);\n  \
    \  $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $letters = explode(\" \", $test);\n  $counts = array();\n\
    \  foreach ($letters as $letter) {\n    if (array_key_exists($letter, $counts))\
    \ {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter] = 1;\n  \
    \  }\n  }\n  return $counts;\n}\n", "  $test_array = explode(\" \", $test);\n\
    \  $test_array_count = array_count_values($test_array);\n  $max_count = max($test_array_count);\n\
    \  $max_count_array = array();\n  foreach ($test_array_count as $key => $value)\
    \ {\n    if ($value == $max_count) {\n      $max_count_array[$key] = $value;\n\
    \    }\n  }\n  return $max_count_array;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}", "  $histogram = array();\n  $test = explode(\" \", $test);\n \
    \ foreach ($test as $letter) {\n    if (isset($histogram[$letter])) {\n      $histogram[$letter]++;\n\
    \    } else {\n      $histogram[$letter] = 1;\n    }\n  }\n  $max = max($histogram);\n\
    \  $max_letters = array();\n  foreach ($histogram as $letter => $count) {\n  \
    \  if ($count == $max) {\n      $max_letters[$letter] = $count;\n    }\n  }\n\
    \  return $max_letters;\n}\n", "    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value]++;\n        } else {\n            $result[$value] = 1;\n   \
    \     }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "  $test = explode(\" \", $test);\n  $test = array_count_values($test);\n\
    \  arsort($test);\n  $max = max($test);\n  foreach ($test as $key => $value) {\n\
    \    if ($value != $max) {\n      unset($test[$key]);\n    }\n  }\n  return $test;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $key => $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]\
    \ += 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $words = explode(\" \", $test);\n    $histogram\
    \ = array();\n    foreach ($words as $word) {\n        if (isset($histogram[$word]))\
    \ {\n            $histogram[$word]++;\n        } else {\n            $histogram[$word]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $arr = explode(\" \", $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($counts);\n  $max_letters = array();\n  foreach\
    \ ($counts as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n", "    $array = explode(\"\
    \ \", $test);\n    $count = array_count_values($array);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value] += 1;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$test = str_replace(\" \", \"\", $test);\n\t$test = str_split($test);\n\
    \t$test = array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\
    \tforeach ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $test = explode(\" \",\
    \ $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $histogram\
    \ = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $histogram = array();\n    foreach ($test as $letter) {\n     \
    \   if (!isset($histogram[$letter])) {\n            $histogram[$letter] = 1;\n\
    \        } else {\n            $histogram[$letter]++;\n        }\n    }\n    $max\
    \ = max($histogram);\n    $result = array();\n    foreach ($histogram as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}", "  $array = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($array as $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value] += 1;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $test = explode(\" \",\
    \ $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "  $letters = explode(\" \", $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho \"\\n\"\
    ;\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"\\n\";\n$test = \"\
    a b c a b\";\nprint_r(histogram($test));\necho \"\\n\";\n$test = \"b b b b a\"\
    ;\nprint_r(histogram($test));\necho \"\\n\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"\\n\";", "  $test = explode(\" \", $test);\n  $histogram = array();\n \
    \ foreach ($test as $letter) {\n    if (array_key_exists($letter, $histogram))\
    \ {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n\
    \    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach ($histogram\
    \ as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $test = explode(\" \", $test);\n  $histogram = array();\n\
    \  foreach ($test as $letter) {\n    if (array_key_exists($letter, $histogram))\
    \ {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n\
    \    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach ($histogram\
    \ as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n", "  $test = explode(\" \"\
    , $test);\n  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $histogram = array();\n  foreach ($test\
    \ as $letter) {\n    if (array_key_exists($letter, $histogram)) {\n      $histogram[$letter]++;\n\
    \    } else {\n      $histogram[$letter] = 1;\n    }\n  }\n  $max = max($histogram);\n\
    \  $max_letters = array();\n  foreach ($histogram as $letter => $count) {\n  \
    \  if ($count == $max) {\n      $max_letters[$letter] = $count;\n    }\n  }\n\
    \  return $max_letters;\n}\n", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}",
  "    $arr = explode(\" \", $test);\n    $newArr = [];\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $newArr)) {\n            $newArr[$value]++;\n\
    \        } else {\n            $newArr[$value] = 1;\n        }\n    }\n    return\
    \ $newArr;\n}\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $array = explode(\" \", $test);\n  $histogram = array();\n\
    \  foreach ($array as $value) {\n    if (array_key_exists($value, $histogram))\
    \ {\n      $histogram[$value] += 1;\n    } else {\n      $histogram[$value] =\
    \ 1;\n    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach ($histogram\
    \ as $key => $value) {\n    if ($value == $max) {\n      $result[$key] = $value;\n\
    \    }\n  }\n  return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]\
    \ += 1;\n        } else {\n            $letter_count[$letter] = 1;\n        }\n\
    \    }\n    $max_count = max($letter_count);\n    $max_letters = array();\n  \
    \  foreach ($letter_count as $letter => $count) {\n        if ($count == $max_count)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $histogram))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    arsort($histogram);\n    $max = reset($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n    $count\
    \ = array_count_values($letters);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}",
  "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n\
    \    foreach ($test as $letter) {\n        if (array_key_exists($letter, $histogram))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $histogram)) {\n \
    \           $histogram[$value]++;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    foreach ($histogram\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($histogram[$key]);\n\
    \        }\n    }\n    return $histogram;\n}", "    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (array_key_exists($letter, $histogram)) {\n\
    \            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $counts = array();\n    foreach\
    \ ($letters as $letter) {\n        if (array_key_exists($letter, $counts)) {\n\
    \            $counts[$letter] += 1;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$test1 = \"a b c\";\n$test2 =\
    \ \"a b b a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\"\
    ;\n\necho \"Test 1: \";\nprint_r(histogram($test1));\necho \"Test 2: \";\nprint_r(histogram($test2));\n\
    echo \"Test 3: \";\nprint_r(histogram($test3));\necho \"Test 4: \";\nprint_r(histogram($test4));\n\
    echo \"Test 5: \";\nprint_r(histogram($test5));", "    $test = explode(\" \",\
    \ $test);\n    $test = array_count_values($test);\n    arsort($test);\n    $max\
    \ = max($test);\n    $result = array();\n    foreach ($test as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value]++;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "  $letters\
    \ = explode(\" \", $test);\n  $count = array_count_values($letters);\n  $max =\
    \ max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $keys = array_keys($count, $max);\n  $result = array();\n\
    \  foreach ($keys as $key) {\n    $result[$key] = $max;\n  }\n  return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (isset($histogram[$letter])) {\n          \
    \  $histogram[$letter]++;\n        } else {\n            $histogram[$letter] =\
    \ 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

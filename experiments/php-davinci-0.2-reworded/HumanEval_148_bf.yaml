name: HumanEval_148_bf
language: php
prompt: "<?php\n// There are eight planets in our solar system: the closerst to the\
  \ Sun \n// is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn,\
  \ \n// Uranus, Neptune.\n// Write a function that takes two planet names as strings\
  \ planet1 and planet2. \n// The function should return an array containing all planets\
  \ whose orbits are \n// located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n// the proximity to the sun. \n// The function should return an empty\
  \ array if planet1 or planet2\n// are not correct planet names. \n// Examples\n\
  // >>> bf(\"Jupiter\", \"Neptune\")\n// array(\"Saturn\", \"Uranus\")\n// >>> bf(\"\
  Earth\", \"Mercury\")\n// \"Venus\"\n// >>> bf(\"Mercury\", \"Uranus\")\n// array(\"\
  Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\nfunction bf($planet1, $planet2)\
  \ {\n"
tests: "function candidate(...$args) {\n    return bf(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(\"Jupiter\", \"Neptune\") !== array(\"Saturn\", \"Uranus\"\
  )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Earth\", \"Mercury\"\
  ) !== array(\"Venus\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Mercury\", \"Uranus\") !== array(\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"\
  Saturn\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Neptune\"\
  , \"Venus\") !== array(\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
  )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Earth\", \"Earth\"\
  ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Mars\", \"Earth\") !== array()) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Jupiter\", \"Makemake\") !== array()) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"\
    Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n    $planet1_index = array_search($planet1,\
    \ $planets);\n    $planet2_index = array_search($planet2, $planets);\n    if ($planet1_index\
    \ === false || $planet2_index === false) {\n        return array();\n    }\n \
    \   if ($planet1_index < $planet2_index) {\n        return array_slice($planets,\
    \ $planet1_index + 1, $planet2_index - $planet1_index - 1);\n    } else {\n  \
    \      return array_slice($planets, $planet2_index + 1, $planet1_index - $planet2_index\
    \ - 1);\n    }\n}\n", "    $planets = array(\"Mercury\", \"Venus\", \"Earth\"\
    , \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n    $planet1_index\
    \ = array_search($planet1, $planets);\n    $planet2_index = array_search($planet2,\
    \ $planets);\n    if ($planet1_index === false || $planet2_index === false) {\n\
    \        return array();\n    }\n    if ($planet1_index < $planet2_index) {\n\
    \        return array_slice($planets, $planet1_index + 1, $planet2_index - $planet1_index\
    \ - 1);\n    } else {\n        return array_slice($planets, $planet2_index + 1,\
    \ $planet1_index - $planet2_index - 1);\n    }\n}\n", "    $planets = array(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\");\n    $planet1_index = array_search($planet1, $planets);\n    $planet2_index\
    \ = array_search($planet2, $planets);\n    $result = array();\n    if ($planet1_index\
    \ === false || $planet2_index === false) {\n        return $result;\n    }\n \
    \   if ($planet1_index > $planet2_index) {\n        $temp = $planet1_index;\n\
    \        $planet1_index = $planet2_index;\n        $planet2_index = $temp;\n \
    \   }\n    for ($i = $planet1_index + 1; $i < $planet2_index; $i++) {\n      \
    \  $result[] = $planets[$i];\n    }\n    return $result;\n}\n", "    $planets\
    \ = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"\
    , \"Uranus\", \"Neptune\");\n    $result = array();\n    $start = false;\n   \
    \ foreach ($planets as $planet) {\n        if ($planet == $planet1) {\n      \
    \      $start = true;\n        }\n        if ($start) {\n            $result[]\
    \ = $planet;\n        }\n        if ($planet == $planet2) {\n            break;\n\
    \        }\n    }\n    return $result;\n}\n", "    $planets = array(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    );\n    $result = array();\n    $index1 = array_search($planet1, $planets);\n\
    \    $index2 = array_search($planet2, $planets);\n    if ($index1 === false ||\
    \ $index2 === false) {\n        return $result;\n    }\n    if ($index1 > $index2)\
    \ {\n        $temp = $index1;\n        $index1 = $index2;\n        $index2 = $temp;\n\
    \    }\n    for ($i = $index1 + 1; $i < $index2; $i++) {\n        $result[] =\
    \ $planets[$i];\n    }\n    return $result;\n}\n", "    $planets = array(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    );\n    $planet1_index = array_search($planet1, $planets);\n    $planet2_index\
    \ = array_search($planet2, $planets);\n    if ($planet1_index === false || $planet2_index\
    \ === false) {\n        return array();\n    }\n    if ($planet1_index < $planet2_index)\
    \ {\n        return array_slice($planets, $planet1_index + 1, $planet2_index -\
    \ $planet1_index - 1);\n    } else {\n        return array_slice($planets, $planet2_index\
    \ + 1, $planet1_index - $planet2_index - 1);\n    }\n}\n\n$result = bf(\"Jupiter\"\
    , \"Neptune\");\nvar_dump($result);\n$result = bf(\"Earth\", \"Mercury\");\nvar_dump($result);\n\
    $result = bf(\"Mercury\", \"Uranus\");\nvar_dump($result);\n$result = bf(\"Mercury\"\
    , \"Pluto\");\nvar_dump($result);", "    $planets = array(\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n  \
    \  $planet1_index = array_search($planet1, $planets);\n    $planet2_index = array_search($planet2,\
    \ $planets);\n    if ($planet1_index === false || $planet2_index === false) {\n\
    \        return array();\n    }\n    $result = array();\n    if ($planet1_index\
    \ < $planet2_index) {\n        for ($i = $planet1_index + 1; $i < $planet2_index;\
    \ $i++) {\n            $result[] = $planets[$i];\n        }\n    } else {\n  \
    \      for ($i = $planet2_index + 1; $i < $planet1_index; $i++) {\n          \
    \  $result[] = $planets[$i];\n        }\n    }\n    return $result;\n}\n", "\t\
    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"\
    Saturn\", \"Uranus\", \"Neptune\");\n\t$result = array();\n\t$start = array_search($planet1,\
    \ $planets);\n\t$end = array_search($planet2, $planets);\n\tif ($start === false\
    \ || $end === false) {\n\t\treturn $result;\n\t}\n\tif ($start < $end) {\n\t\t\
    for ($i = $start + 1; $i < $end; $i++) {\n\t\t\t$result[] = $planets[$i];\n\t\t\
    }\n\t} else {\n\t\tfor ($i = $start - 1; $i > $end; $i--) {\n\t\t\t$result[] =\
    \ $planets[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $planets = array(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\");\n    $result = array();\n    $index1 = array_search($planet1,\
    \ $planets);\n    $index2 = array_search($planet2, $planets);\n    if ($index1\
    \ === false || $index2 === false) {\n        return $result;\n    }\n    if ($index1\
    \ < $index2) {\n        for ($i = $index1 + 1; $i < $index2; $i++) {\n       \
    \     $result[] = $planets[$i];\n        }\n    } else {\n        for ($i = $index2\
    \ + 1; $i < $index1; $i++) {\n            $result[] = $planets[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "    $planets = array(\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n  \
    \  $planet1_index = array_search($planet1, $planets);\n    $planet2_index = array_search($planet2,\
    \ $planets);\n    if ($planet1_index === false || $planet2_index === false) {\n\
    \        return array();\n    }\n    if ($planet1_index > $planet2_index) {\n\
    \        $temp = $planet1_index;\n        $planet1_index = $planet2_index;\n \
    \       $planet2_index = $temp;\n    }\n    $result = array();\n    for ($i =\
    \ $planet1_index + 1; $i < $planet2_index; $i++) {\n        $result[] = $planets[$i];\n\
    \    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(bf(\"Jupiter\", \"\
    Neptune\"));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(bf(\"Earth\", \"Mercury\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(bf(\"Mercury\", \"Uranus\"));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(bf(\"Mercury\", \"Pluto\"));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(bf(\"Pluto\", \"Mercury\"));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(bf(\"Pluto\", \"Pluto\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(bf(\"Pluto\", \"Earth\"));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(bf(\"Earth\", \"Pluto\"));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(bf(\"Earth\", \"Earth\"));\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(bf(\"Earth\", \"Mars\"));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint", "    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\",\
    \ \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n    $planet1 = array_search($planet1,\
    \ $planets);\n    $planet2 = array_search($planet2, $planets);\n    $result =\
    \ array();\n    if ($planet1 !== false && $planet2 !== false) {\n        if ($planet1\
    \ < $planet2) {\n            for ($i = $planet1 + 1; $i < $planet2; $i++) {\n\
    \                $result[] = $planets[$i];\n            }\n        } else {\n\
    \            for ($i = $planet2 + 1; $i < $planet1; $i++) {\n                $result[]\
    \ = $planets[$i];\n            }\n        }\n    }\n    return $result;\n}\n",
  "    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\",\
    \ \"Saturn\", \"Uranus\", \"Neptune\");\n    $index1 = array_search($planet1,\
    \ $planets);\n    $index2 = array_search($planet2, $planets);\n    if ($index1\
    \ === false || $index2 === false) {\n        return array();\n    }\n    if ($index1\
    \ > $index2) {\n        $tmp = $index1;\n        $index1 = $index2;\n        $index2\
    \ = $tmp;\n    }\n    return array_slice($planets, $index1 + 1, $index2 - $index1\
    \ - 1);\n}\n", "\t$planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n\t$planet1_index = array_search($planet1,\
    \ $planets);\n\t$planet2_index = array_search($planet2, $planets);\n\t$result\
    \ = array();\n\tif ($planet1_index === false || $planet2_index === false) {\n\t\
    \treturn $result;\n\t}\n\tif ($planet1_index < $planet2_index) {\n\t\tfor ($i\
    \ = $planet1_index + 1; $i < $planet2_index; $i++) {\n\t\t\t$result[] = $planets[$i];\n\
    \t\t}\n\t} else {\n\t\tfor ($i = $planet2_index + 1; $i < $planet1_index; $i++)\
    \ {\n\t\t\t$result[] = $planets[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n\n$planet1\
    \ = \"Jupiter\";\n$planet2 = \"Neptune\";\necho \"<pre>\";\nprint_r(bf($planet1,\
    \ $planet2));\necho \"</pre>\";\n\n$planet1 = \"Earth\";\n$planet2 = \"Mercury\"\
    ;\necho \"<pre>\";\nprint_r(bf($planet1, $planet2));\necho \"</pre>\";\n\n$planet1\
    \ = \"Mercury\";\n$planet2 = \"Uranus\";\necho \"<pre>\";\nprint_r(bf($planet1,\
    \ $planet2));\necho \"</pre>\";\n\n$planet1 = \"Mercury\";\n$planet2 = \"Pluto\"\
    ;\necho \"<pre>\";\nprint_r(bf($planet1, $planet2));\necho \"</pre>\";\n\n$planet1\
    \ = \"Pluto\";\n$planet2 = \"Mercury\";\necho \"<pre>\";\nprint_r(bf($planet1,\
    \ $planet2));\necho \"</pre>\";\n\n$planet1 = \"Pluto\";\n$planet2 = \"Pluto\"\
    ;\necho \"<pre>\";\nprint_r(bf($planet1, $planet2));\necho", "    $planets = array(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\");\n    $result = array();\n    if (in_array($planet1, $planets)\
    \ && in_array($planet2, $planets)) {\n        $planet1_index = array_search($planet1,\
    \ $planets);\n        $planet2_index = array_search($planet2, $planets);\n   \
    \     if ($planet1_index < $planet2_index) {\n            for ($i = $planet1_index\
    \ + 1; $i < $planet2_index; $i++) {\n                $result[] = $planets[$i];\n\
    \            }\n        } else {\n            for ($i = $planet2_index + 1; $i\
    \ < $planet1_index; $i++) {\n                $result[] = $planets[$i];\n     \
    \       }\n        }\n    }\n    return $result;\n}\n", "    $planets = array(\"\
    Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\");\n    $result = array();\n    $start = array_search($planet1, $planets);\n\
    \    $end = array_search($planet2, $planets);\n    if ($start === false || $end\
    \ === false) {\n        return $result;\n    }\n    if ($start > $end) {\n   \
    \     $temp = $start;\n        $start = $end;\n        $end = $temp;\n    }\n\
    \    for ($i = $start + 1; $i < $end; $i++) {\n        $result[] = $planets[$i];\n\
    \    }\n    return $result;\n}\n", "    $planets = array(\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n  \
    \  $planet1_index = array_search($planet1, $planets);\n    $planet2_index = array_search($planet2,\
    \ $planets);\n    if ($planet1_index === false || $planet2_index === false) {\n\
    \        return array();\n    }\n    $result = array();\n    if ($planet1_index\
    \ < $planet2_index) {\n        for ($i = $planet1_index + 1; $i < $planet2_index;\
    \ $i++) {\n            $result[] = $planets[$i];\n        }\n    } else {\n  \
    \      for ($i = $planet2_index + 1; $i < $planet1_index; $i++) {\n          \
    \  $result[] = $planets[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\");\n    $planets_between = array();\n   \
    \ $index1 = array_search($planet1, $planets);\n    $index2 = array_search($planet2,\
    \ $planets);\n    if ($index1 === false || $index2 === false) {\n        return\
    \ $planets_between;\n    }\n    if ($index1 > $index2) {\n        $temp = $index1;\n\
    \        $index1 = $index2;\n        $index2 = $temp;\n    }\n    for ($i = $index1\
    \ + 1; $i < $index2; $i++) {\n        $planets_between[] = $planets[$i];\n   \
    \ }\n    return $planets_between;\n}\n\n$planet1 = \"Mercury\";\n$planet2 = \"\
    Uranus\";\nprint_r(bf($planet1, $planet2));", "    $planets = array(\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"\
    );\n    $result = array();\n    $start = array_search($planet1, $planets);\n \
    \   $end = array_search($planet2, $planets);\n    if ($start === false || $end\
    \ === false) {\n        return $result;\n    }\n    if ($start < $end) {\n   \
    \     for ($i = $start + 1; $i < $end; $i++) {\n            $result[] = $planets[$i];\n\
    \        }\n    } else {\n        for ($i = $start - 1; $i > $end; $i--) {\n \
    \           $result[] = $planets[$i];\n        }\n    }\n    return $result;\n\
    }\n", "\t$planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\", \"Neptune\");\n\t$result = array();\n\t$start = 0;\n\
    \t$end = 0;\n\tfor ($i = 0; $i < count($planets); $i++) {\n\t\tif ($planets[$i]\
    \ == $planet1) {\n\t\t\t$start = $i;\n\t\t}\n\t\tif ($planets[$i] == $planet2)\
    \ {\n\t\t\t$end = $i;\n\t\t}\n\t}\n\tif ($start > $end) {\n\t\t$temp = $start;\n\
    \t\t$start = $end;\n\t\t$end = $temp;\n\t}\n\tfor ($i = $start + 1; $i < $end;\
    \ $i++) {\n\t\tarray_push($result, $planets[$i]);\n\t}\n\treturn $result;\n}\n",
  "    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\",\
    \ \"Saturn\", \"Uranus\", \"Neptune\");\n    $result = array();\n    $index1 =\
    \ array_search($planet1, $planets);\n    $index2 = array_search($planet2, $planets);\n\
    \    if ($index1 === false || $index2 === false) {\n        return $result;\n\
    \    }\n    if ($index1 > $index2) {\n        $temp = $index1;\n        $index1\
    \ = $index2;\n        $index2 = $temp;\n    }\n    for ($i = $index1 + 1; $i <\
    \ $index2; $i++) {\n        $result[] = $planets[$i];\n    }\n    return $result;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

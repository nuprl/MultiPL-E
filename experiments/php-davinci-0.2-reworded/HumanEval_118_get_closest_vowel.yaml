name: HumanEval_118_get_closest_vowel
language: php
prompt: "<?php\n// You are given a word. Your task is to find the closest vowel that\
  \ stands between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel($word)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Above\") !== \"\
  o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $length = strlen($word);\n    $vowel_index = 0;\n\
    \    $vowel_distance = 0;\n    for ($i = $length - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n    \
    \        break;\n        }\n    }\n    for ($i = $vowel_index; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $vowel_index - $i;\n            break;\n        }\n    }\n    if ($vowel_distance\
    \ > 0) {\n        return $word[$vowel_index];\n    } else {\n        return \"\
    \";\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_len;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      return $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $i = $word_length - 1;\n    $vowel_index = -1;\n    while\
    \ ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n        $i--;\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    $i = $vowel_index - 1;\n    while\
    \ ($i >= 0) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n        $i--;\n    }\n    return \"\";\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_array = array_reverse($word_array);\n    $vowel_index\
    \ = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word_array); $i++)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    if (!$vowel_found) {\n        return \"\";\n    }\n    for ($i = $vowel_index\
    \ + 1; $i < count($word_array); $i++) {\n        if (!in_array($word_array[$i],\
    \ $vowels)) {\n            return $word_array[$vowel_index];\n        }\n    }\n\
    \    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_pos = -1;\n\
    \    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos = $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_pos == -1) {\n        return '';\n    }\n    $left_consonant_pos\
    \ = -1;\n    for ($i = $vowel_pos - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_pos = $i;\n            break;\n   \
    \     }\n    }\n    if ($left_consonant_pos == -1) {\n        return '';\n   \
    \ }\n    $right_consonant_pos = -1;\n    for ($i = $vowel_pos + 1; $i < $word_len;\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $right_consonant_pos\
    \ = $i;\n            break;\n        }\n    }\n    if ($right_consonant_pos ==\
    \ -1) {\n        return '';\n    }\n    if ($right_consonant_pos - $vowel_pos\
    \ < $vowel_pos - $left_consonant_pos) {\n        return $word[$vowel_pos];\n \
    \   }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $closest_vowel = '';\n    $closest_vowel_index =\
    \ 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_vowel_distance_temp_index = 0;\n    $closest_vowel_distance_temp_index_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_", "    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\");\n    $word = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    $vowel_index_array_index = 0;\n    $consonant_index_array_index = 0;\n  \
    \  $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_index_array_index\
    \ = 0;\n    $closest_vowel_index_array = array();\n    $closest_vowel_index_array_index\
    \ = 0;\n    $closest_vowel_index_array_index_index = 0;\n    $closest_vowel_index_array_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index = 0;\n    $closest_vowel_index_array_index_index_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index_index_index = 0;\n\
    \    $closest_vowel_index_array_index_index_index_index_index_index_index = 0;\n\
    \    $closest_vowel_index_array_index_index_index_index_index_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index_index_index_index_index_index\
    \ = 0;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    $closest_consonant_index_2 = 0;\n    $closest_vowel_distance = 0;\n\
    \    $closest_vowel_distance_2 = 0;\n    $closest_vowel_distance_3 = 0;\n    $closest_vowel_distance_4\
    \ = 0;\n    $closest_vowel_distance_5 = 0;\n    $closest_vowel_distance_6 = 0;\n\
    \    $closest_vowel_distance_7 = 0;\n    $closest_vowel_distance_8 = 0;\n    $closest_vowel_distance_9\
    \ = 0;\n    $closest_vowel_distance_10 = 0;\n    $closest_vowel_distance_11 =\
    \ 0;\n    $closest_vowel_distance_12 = 0;\n    $closest_vowel_distance_13 = 0;\n\
    \    $closest_vowel_distance_14 = 0;\n    $closest_vowel_distance_15 = 0;\n  \
    \  $closest_vowel_distance_16 = 0;\n    $closest_vowel_distance_17 = 0;\n    $closest_vowel_distance_18\
    \ = 0;\n    $closest_vowel_distance_19 = 0;\n    $closest_vowel_distance_", " \
    \ $vowels = array('a', 'e', 'i', 'o', 'u');\n  $word = strtolower($word);\n  $word\
    \ = str_split($word);\n  $vowel_index = 0;\n  $vowel_distance = 0;\n  $vowel_distance_temp\
    \ = 0;\n  $vowel_index_temp = 0;\n  $vowel_found = false;\n  $vowel_found_temp\
    \ = false;\n  $vowel_found_final = false;\n  $vowel_index_final = 0;\n  $vowel_distance_final\
    \ = 0;\n  for ($i = 0; $i < count($word); $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_found_temp = true;\n      $vowel_index_temp = $i;\n\
    \      $vowel_distance_temp = $vowel_index_temp - $vowel_index;\n      if ($vowel_distance_temp\
    \ > $vowel_distance) {\n        $vowel_distance = $vowel_distance_temp;\n    \
    \    $vowel_index = $vowel_index_temp;\n        $vowel_found = $vowel_found_temp;\n\
    \      }\n    }\n  }\n  if ($vowel_found) {\n    $vowel_found_final = true;\n\
    \    $vowel_index_final = $vowel_index;\n    $vowel_distance_final = $vowel_distance;\n\
    \  }\n  if ($vowel_found_final) {\n    return $word[$vowel_index_final];\n  }\
    \ else {\n    return \"\";\n  }\n}\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split($word);\n    $result = '';\n    $distance\
    \ = 0;\n    $i = count($word) - 1;\n    while ($i >= 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($distance > 1) {\n                $result = $word[$i];\n\
    \                break;\n            }\n            $distance = 0;\n        }\
    \ else {\n            $distance++;\n        }\n        $i--;\n    }\n    return\
    \ $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n \
    \   $word = strrev($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            $consonant_index =\
    \ $i;\n            $consonant_found = true;\n            break;\n        }\n \
    \   }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array\
    \ = str_split($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_array\
    \ = [];\n    $consonant_array = [];\n    $result = '';\n    $vowel_index_array\
    \ = [];\n    $consonant_index_array = [];\n    $index_array = [];\n    $index_array_length\
    \ = 0;\n    $index_array_length_array = [];\n    $index_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array = [];\n    $index_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array = [];\n    $index_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array =\
    \ [];\n    $index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array\
    \ = [];\n    $index_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array\
    \ = [];\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array_",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    $consonant_index = -1;\n    $closest_vowel\
    \ = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                $closest_vowel = $word[$vowel_index];\n          \
    \      break;\n            }\n        } else {\n            $consonant_index =\
    \ $i;\n            if ($vowel_index != -1) {\n                $closest_vowel =\
    \ $word[$vowel_index];\n                break;\n            }\n        }\n   \
    \ }\n    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $word_array = str_split($word);\n    $vowel_position = 0;\n    $vowel_array\
    \ = array();\n    $vowel_position_array = array();\n    $vowel_position_array_length\
    \ = 0;\n    $vowel_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $vowel_index = -1;\n\
    \    $consonant_index = -1;\n    $last_consonant_index = -1;\n    $last_vowel_index\
    \ = -1;\n    for ($i = count($word_array) - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                if ($last_vowel_index < $last_consonant_index) {\n\
    \                    return $word_array[$vowel_index];\n                }\n  \
    \          }\n            $last_vowel_index = $vowel_index;\n        } else {\n\
    \            $consonant_index = $i;\n            if ($vowel_index != -1) {\n \
    \               if ($last_vowel_index < $last_consonant_index) {\n           \
    \         return $word_array[$vowel_index];\n                }\n            }\n\
    \            $last_consonant_index = $consonant_index;\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $closest_vowel_index = $i;\n            break;\n \
    \       }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n\
    \    }\n    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $closest_vowel;\n        }\n    }\n    return\
    \ \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word =\
    \ strtolower($word);\n    $word_len = strlen($word);\n    $i = $word_len - 1;\n\
    \    $vowel_pos = -1;\n    $consonant_pos = -1;\n    $found = false;\n    while\
    \ ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos\
    \ = $i;\n            if ($consonant_pos != -1) {\n                $found = true;\n\
    \                break;\n            }\n        } else {\n            $consonant_pos\
    \ = $i;\n            if ($vowel_pos != -1) {\n                $found = true;\n\
    \                break;\n            }\n        }\n        $i--;\n    }\n    if\
    \ ($found) {\n        return $word[$vowel_pos];\n    } else {\n        return\
    \ \"\";\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word =\
    \ str_split($word);\n    $result = '';\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $result\
    \ = $word[$i];\n            break;\n        }\n    }\n    if ($result == '') {\n\
    \        return $result;\n    }\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $consonants)) {\n            if ($i == 0)\
    \ {\n                return $result;\n            }\n            if (in_array($word[$i\
    \ - 1], $consonants)) {\n                return $result;\n            }\n    \
    \    }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index > $consonant_index)\
    \ {\n        $closest_vowel = $word[$vowel_index];\n    }\n    return $closest_vowel;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

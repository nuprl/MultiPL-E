name: HumanEval_118_get_closest_vowel
language: php
prompt: "<?php\n// You are given a word. Your task is to find the closest vowel that\
  \ stands between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel($word)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Above\") !== \"\
  o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $length = strlen($word);\n    $vowel_index = 0;\n\
    \    $vowel_distance = 0;\n    for ($i = $length - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n    \
    \        break;\n        }\n    }\n    for ($i = $vowel_index; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $vowel_index - $i;\n            break;\n        }\n    }\n    if ($vowel_distance\
    \ > 0) {\n        return $word[$vowel_index];\n    } else {\n        return \"\
    \";\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_len;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      return $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $i = $word_length - 1;\n    $vowel_index = -1;\n    while\
    \ ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n        $i--;\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    $i = $vowel_index - 1;\n    while\
    \ ($i >= 0) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n        $i--;\n    }\n    return \"\";\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_array = array_reverse($word_array);\n    $vowel_index\
    \ = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word_array); $i++)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    if (!$vowel_found) {\n        return \"\";\n    }\n    for ($i = $vowel_index\
    \ + 1; $i < count($word_array); $i++) {\n        if (!in_array($word_array[$i],\
    \ $vowels)) {\n            return $word_array[$vowel_index];\n        }\n    }\n\
    \    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_pos = -1;\n\
    \    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos = $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_pos == -1) {\n        return '';\n    }\n    $left_consonant_pos\
    \ = -1;\n    for ($i = $vowel_pos - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_pos = $i;\n            break;\n   \
    \     }\n    }\n    if ($left_consonant_pos == -1) {\n        return '';\n   \
    \ }\n    $right_consonant_pos = -1;\n    for ($i = $vowel_pos + 1; $i < $word_len;\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $right_consonant_pos\
    \ = $i;\n            break;\n        }\n    }\n    if ($right_consonant_pos ==\
    \ -1) {\n        return '';\n    }\n    if ($right_consonant_pos - $vowel_pos\
    \ < $vowel_pos - $left_consonant_pos) {\n        return $word[$vowel_pos];\n \
    \   }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $closest_vowel = '';\n    $closest_vowel_index =\
    \ 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_vowel_distance_temp_index = 0;\n    $closest_vowel_distance_temp_index_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_temp_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    $closest_vowel_distance_", "    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\");\n    $word = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    $vowel_index_array_index = 0;\n    $consonant_index_array_index = 0;\n  \
    \  $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_index_array_index\
    \ = 0;\n    $closest_vowel_index_array = array();\n    $closest_vowel_index_array_index\
    \ = 0;\n    $closest_vowel_index_array_index_index = 0;\n    $closest_vowel_index_array_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index = 0;\n    $closest_vowel_index_array_index_index_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index_index_index = 0;\n\
    \    $closest_vowel_index_array_index_index_index_index_index_index_index = 0;\n\
    \    $closest_vowel_index_array_index_index_index_index_index_index_index_index\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index_index_index_index_index_index\
    \ = 0;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    $closest_consonant_index_2 = 0;\n    $closest_vowel_distance = 0;\n\
    \    $closest_vowel_distance_2 = 0;\n    $closest_vowel_distance_3 = 0;\n    $closest_vowel_distance_4\
    \ = 0;\n    $closest_vowel_distance_5 = 0;\n    $closest_vowel_distance_6 = 0;\n\
    \    $closest_vowel_distance_7 = 0;\n    $closest_vowel_distance_8 = 0;\n    $closest_vowel_distance_9\
    \ = 0;\n    $closest_vowel_distance_10 = 0;\n    $closest_vowel_distance_11 =\
    \ 0;\n    $closest_vowel_distance_12 = 0;\n    $closest_vowel_distance_13 = 0;\n\
    \    $closest_vowel_distance_14 = 0;\n    $closest_vowel_distance_15 = 0;\n  \
    \  $closest_vowel_distance_16 = 0;\n    $closest_vowel_distance_17 = 0;\n    $closest_vowel_distance_18\
    \ = 0;\n    $closest_vowel_distance_19 = 0;\n    $closest_vowel_distance_", " \
    \ $vowels = array('a', 'e', 'i', 'o', 'u');\n  $word = strtolower($word);\n  $word\
    \ = str_split($word);\n  $vowel_index = 0;\n  $vowel_distance = 0;\n  $vowel_distance_temp\
    \ = 0;\n  $vowel_index_temp = 0;\n  $vowel_found = false;\n  $vowel_found_temp\
    \ = false;\n  $vowel_found_final = false;\n  $vowel_index_final = 0;\n  $vowel_distance_final\
    \ = 0;\n  for ($i = 0; $i < count($word); $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_found_temp = true;\n      $vowel_index_temp = $i;\n\
    \      $vowel_distance_temp = $vowel_index_temp - $vowel_index;\n      if ($vowel_distance_temp\
    \ > $vowel_distance) {\n        $vowel_distance = $vowel_distance_temp;\n    \
    \    $vowel_index = $vowel_index_temp;\n        $vowel_found = $vowel_found_temp;\n\
    \      }\n    }\n  }\n  if ($vowel_found) {\n    $vowel_found_final = true;\n\
    \    $vowel_index_final = $vowel_index;\n    $vowel_distance_final = $vowel_distance;\n\
    \  }\n  if ($vowel_found_final) {\n    return $word[$vowel_index_final];\n  }\
    \ else {\n    return \"\";\n  }\n}\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split($word);\n    $result = '';\n    $distance\
    \ = 0;\n    $i = count($word) - 1;\n    while ($i >= 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($distance > 1) {\n                $result = $word[$i];\n\
    \                break;\n            }\n            $distance = 0;\n        }\
    \ else {\n            $distance++;\n        }\n        $i--;\n    }\n    return\
    \ $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n \
    \   $word = strrev($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            $consonant_index =\
    \ $i;\n            $consonant_found = true;\n            break;\n        }\n \
    \   }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array\
    \ = str_split($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_array\
    \ = [];\n    $consonant_array = [];\n    $result = '';\n    $vowel_index_array\
    \ = [];\n    $consonant_index_array = [];\n    $index_array = [];\n    $index_array_length\
    \ = 0;\n    $index_array_length_array = [];\n    $index_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array = [];\n    $index_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array = [];\n    $index_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array =\
    \ [];\n    $index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array\
    \ = [];\n    $index_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array\
    \ = [];\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $index_array_length_array_length_array_length_array_length_array_length_array_length_array_",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    $consonant_index = -1;\n    $closest_vowel\
    \ = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                $closest_vowel = $word[$vowel_index];\n          \
    \      break;\n            }\n        } else {\n            $consonant_index =\
    \ $i;\n            if ($vowel_index != -1) {\n                $closest_vowel =\
    \ $word[$vowel_index];\n                break;\n            }\n        }\n   \
    \ }\n    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $word_array = str_split($word);\n    $vowel_position = 0;\n    $vowel_array\
    \ = array();\n    $vowel_position_array = array();\n    $vowel_position_array_length\
    \ = 0;\n    $vowel_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0;\n    $vowel_position_array_length = 0;\n\
    \    $vowel_position_array_length = 0", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $vowel_index = -1;\n\
    \    $consonant_index = -1;\n    $last_consonant_index = -1;\n    $last_vowel_index\
    \ = -1;\n    for ($i = count($word_array) - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                if ($last_vowel_index < $last_consonant_index) {\n\
    \                    return $word_array[$vowel_index];\n                }\n  \
    \          }\n            $last_vowel_index = $vowel_index;\n        } else {\n\
    \            $consonant_index = $i;\n            if ($vowel_index != -1) {\n \
    \               if ($last_vowel_index < $last_consonant_index) {\n           \
    \         return $word_array[$vowel_index];\n                }\n            }\n\
    \            $last_consonant_index = $consonant_index;\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $closest_vowel_index = $i;\n            break;\n \
    \       }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n\
    \    }\n    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $closest_vowel;\n        }\n    }\n    return\
    \ \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word =\
    \ strtolower($word);\n    $word_len = strlen($word);\n    $i = $word_len - 1;\n\
    \    $vowel_pos = -1;\n    $consonant_pos = -1;\n    $found = false;\n    while\
    \ ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos\
    \ = $i;\n            if ($consonant_pos != -1) {\n                $found = true;\n\
    \                break;\n            }\n        } else {\n            $consonant_pos\
    \ = $i;\n            if ($vowel_pos != -1) {\n                $found = true;\n\
    \                break;\n            }\n        }\n        $i--;\n    }\n    if\
    \ ($found) {\n        return $word[$vowel_pos];\n    } else {\n        return\
    \ \"\";\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word =\
    \ str_split($word);\n    $result = '';\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $result\
    \ = $word[$i];\n            break;\n        }\n    }\n    if ($result == '') {\n\
    \        return $result;\n    }\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $consonants)) {\n            if ($i == 0)\
    \ {\n                return $result;\n            }\n            if (in_array($word[$i\
    \ - 1], $consonants)) {\n                return $result;\n            }\n    \
    \    }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index > $consonant_index)\
    \ {\n        $closest_vowel = $word[$vowel_index];\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $vowel_index_array\
    \ = array();\n    for ($i = 0; $i < $word_array_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index_array[] = $i;\n        }\n    }\n    $vowel_index_array_length\
    \ = count($vowel_index_array);\n    if ($vowel_index_array_length == 0) {\n  \
    \      return '';\n    }\n    $vowel_index = $vowel_index_array[$vowel_index_array_length\
    \ - 1];\n    if ($vowel_index == 0 || $vowel_index == $word_array_length - 1)\
    \ {\n        return '';\n    }\n    if (in_array($word_array[$vowel_index - 1],\
    \ $vowels) || in_array($word_array[$vowel_index + 1], $vowels)) {\n        return\
    \ '';\n    }\n    return $word_array[$vowel_index];\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word =\
    \ str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_min\
    \ = strlen($word);\n    $vowel_index_min = 0;\n    $vowel_found = false;\n   \
    \ for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            $vowel_distance = count($word)\
    \ - $vowel_index;\n            if ($vowel_distance < $vowel_distance_min) {\n\
    \                $vowel_distance_min = $vowel_distance;\n                $vowel_index_min\
    \ = $vowel_index;\n                $vowel_found = true;\n            }\n     \
    \   }\n    }\n    if ($vowel_found) {\n        return $word[$vowel_index_min];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = strtolower($word);\n    $word_len = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n    \
    \        break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0\
    \ && $i < $word_length - 1) {\n                if (!in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                    if ($i < $closest_vowel_index)\
    \ {\n                        $closest_vowel_index = $i;\n                    \
    \    $closest_vowel = $word[$i];\n                    }\n                }\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $word = strtolower($word);\n    $word = str_split($word);\n    $result\
    \ = '';\n    $last_vowel = '';\n    $last_consonant = '';\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $last_vowel = $word[$i];\n            if ($last_consonant != '') {\n   \
    \             $result = $last_vowel;\n                break;\n            }\n\
    \        } elseif (in_array($word[$i], $consonants)) {\n            $last_consonant\
    \ = $word[$i];\n            if ($last_vowel != '') {\n                $result\
    \ = $last_vowel;\n                break;\n            }\n        }\n    }\n  \
    \  return $result;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = \"aeiou\";\n    $word = strrev($word);\n    $vowel_pos = strlen($word);\n\
    \    for ($i = 0; $i < strlen($word); $i++) {\n        if (strpos($vowels, $word[$i])\
    \ !== false) {\n            $vowel_pos = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_pos == strlen($word)) {\n        return \"\";\n    }\n\
    \    for ($i = $vowel_pos + 1; $i < strlen($word); $i++) {\n        if (strpos($vowels,\
    \ $word[$i]) === false) {\n            return $word[$vowel_pos];\n        }\n\
    \    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n  \
    \  $word = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_position = 0;\n    $vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0 || $i == $word_length - 1) {\n        \
    \        continue;\n            }\n            if ($word[$i - 1] == $word[$i +\
    \ 1]) {\n                continue;\n            }\n            if ($vowel_distance\
    \ == 0) {\n                $vowel_distance = $i;\n                $vowel_position\
    \ = $i;\n            } else {\n                if ($i < $vowel_distance) {\n \
    \                   $vowel_distance = $i;\n                    $vowel_position\
    \ = $i;\n                }\n            }\n        }\n    }\n    if ($vowel_distance\
    \ == 0) {\n        return '';\n    }\n    return $word[$vowel_position];\n}\n",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    $closest_vowel = '';\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index > -1 && $consonant_index > -1) {\n     \
    \   $closest_vowel = $word[$vowel_index];\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $i = $word_length - 1;\n    while ($i\
    \ >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i ==\
    \ 0) {\n                return '';\n            }\n            if (!in_array($word[$i\
    \ - 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n        $i--;\n    }\n    return '';\n}\n", "    $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        if ($vowel_index\
    \ == 1) {\n            return \"\";\n        } else {\n            return $word[$vowel_index\
    \ - 1];\n        }\n    } else {\n        return \"\";\n    }\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array\
    \ = str_split($word);\n    $word_length = count($word_array);\n    $result = \"\
    \";\n    for ($i = $word_length - 1; $i > 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            if (in_array($word_array[$i - 1], $consonants)) {\n\
    \                $result = $word_array[$i];\n                break;\n        \
    \    }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return \"\";\n    }\n    for ($i = $vowel_index + 1; $i < $word_length;\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return \"\";\n}\n", "  $vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"];\n  $word = str_split($word);\n  $result = \"\";\n  for ($i =\
    \ count($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n\
    \      if ($i == count($word) - 1) {\n        $result = \"\";\n        break;\n\
    \      } else {\n        $result = $word[$i];\n        break;\n      }\n    }\
    \ else {\n      if ($i == 0) {\n        $result = \"\";\n        break;\n    \
    \  }\n    }\n  }\n  return $result;\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_array = str_split($word);\n    $word_array = array_reverse($word_array);\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_position = 0;\n\
    \    $consonant_position = 0;\n    $vowel_position_array = array();\n    $consonant_position_array\
    \ = array();\n    for ($i = 0; $i < count($word_array); $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_count++;\n            $vowel_position = $i;\n\
    \            array_push($vowel_position_array, $vowel_position);\n        } else\
    \ {\n            $consonant_count++;\n            $consonant_position = $i;\n\
    \            array_push($consonant_position_array, $consonant_position);\n   \
    \     }\n    }\n    if ($vowel_count == 0 || $consonant_count == 0) {\n      \
    \  return \"\";\n    }\n    $vowel_position_array = array_reverse($vowel_position_array);\n\
    \    $consonant_position_array = array_reverse($consonant_position_array);\n \
    \   $vowel_position_array_count = count($vowel_position_array);\n    $consonant_position_array_count\
    \ = count($consonant_position_array);\n    $vowel_position_array_count--;\n  \
    \  $consonant_position_array_count--;\n    $vowel_position_array_count_2 = $vowel_position_array_count;\n\
    \    $consonant_position_array_count_2 = $consonant_position_array_count;\n  \
    \  $vowel_position_array_count_3 = $vowel_position_array_count;\n    $consonant_position_array_count_3",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $vowel_pos = -1;\n    for ($i = $word_len\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_pos = $i;\n            break;\n        }\n    }\n    if ($vowel_pos\
    \ == -1) {\n        return \"\";\n    }\n    for ($i = $vowel_pos - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_pos];\n\
    \        }\n    }\n    return \"\";\n}\n", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$word = strtolower($word);\n\t$word_length = strlen($word);\n\t$vowel_index\
    \ = 0;\n\t$vowel_distance = 0;\n\tfor ($i = $word_length - 1; $i >= 0; $i--) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\tfor ($i = $vowel_index + 1; $i < $word_length; $i++) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_distance = $i - $vowel_index;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\tif ($vowel_distance == 0) {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = strtolower($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n   \
    \ $closest_vowel = \"\";\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index > $consonant_index)\
    \ {\n        $closest_vowel = $word[$vowel_index];\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    $left_consonant_index = -1;\n   \
    \ for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_index = $i;\n            break;\n \
    \       }\n    }\n    if ($left_consonant_index == -1) {\n        return \"\"\
    ;\n    }\n    $right_consonant_index = -1;\n    for ($i = $vowel_index + 1; $i\
    \ < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n    \
    \        $right_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($right_consonant_index == -1) {\n        return \"\";\n    }\n    if\
    \ ($vowel_index - $left_consonant_index <= $right_consonant_index - $vowel_index)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return \"\";\n\
    \    }\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                $closest_vowel = \"\
    \";\n                break;\n            }\n            if ($i == $word_length\
    \ - 1) {\n                $closest_vowel = \"\";\n                break;\n   \
    \         }\n            if (in_array($word[$i - 1], $vowels)) {\n           \
    \     $closest_vowel = \"\";\n                break;\n            }\n        \
    \    if (in_array($word[$i + 1], $vowels)) {\n                $closest_vowel =\
    \ \"\";\n                break;\n            }\n            $closest_vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\n", "   \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return '';\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_distance = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $word_length - $i;\n            if ($vowel_distance < $closest_vowel_distance)\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array\
    \ = str_split($word);\n    $word_array_length = count($word_array);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n \
    \   for ($i = 0; $i < $word_array_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($vowel_index ==\
    \ 0) {\n                $vowel_distance = $word_array_length;\n            } else\
    \ {\n                $vowel_distance = $word_array_length - $vowel_index;\n  \
    \          }\n            if ($vowel_distance > $closest_vowel_distance) {\n \
    \               $closest_vowel_distance = $vowel_distance;\n                $closest_vowel_index\
    \ = $vowel_index;\n                $closest_vowel = $word_array[$vowel_index];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_array = str_split($word);\n    $word_array_reversed\
    \ = array_reverse($word_array);\n    $vowel_index = 0;\n    $consonant_index =\
    \ 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    foreach ($word_array_reversed\
    \ as $index => $letter) {\n        if (!$vowel_found && in_array($letter, $vowels))\
    \ {\n            $vowel_index = $index;\n            $vowel_found = true;\n  \
    \      }\n        if (!$consonant_found && in_array($letter, $consonants)) {\n\
    \            $consonant_index = $index;\n            $consonant_found = true;\n\
    \        }\n        if ($vowel_found && $consonant_found) {\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found && $vowel_index <\
    \ $consonant_index) {\n        return $word_array_reversed[$vowel_index];\n  \
    \  }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $result = \"\";\n    $last_vowel = \"\";\n    $last_consonant = \"\";\n \
    \   $last_vowel_index = 0;\n    $last_consonant_index = 0;\n    $i = 0;\n    foreach\
    \ ($word as $letter) {\n        if (in_array($letter, $vowels)) {\n          \
    \  $last_vowel = $letter;\n            $last_vowel_index = $i;\n        } else\
    \ {\n            $last_consonant = $letter;\n            $last_consonant_index\
    \ = $i;\n        }\n        $i++;\n    }\n    if ($last_vowel_index > $last_consonant_index)\
    \ {\n        $result = $last_vowel;\n    }\n    return $result;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ strtolower($word);\n    $word_array = str_split($word);\n    $result = \"\"\
    ;\n    $vowel_position = 0;\n    $consonant_position = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $vowel_position_array = array();\n    $consonant_position_array\
    \ = array();\n    $vowel_position_array_count = 0;\n    $consonant_position_array_count\
    \ = 0;\n    $vowel_position_array_count_array = array();\n    $consonant_position_array_count_array\
    \ = array();\n    $vowel_position_array_count_array_count = 0;\n    $consonant_position_array_count_array_count\
    \ = 0;\n    $vowel_position_array_count_array_count_array = array();\n    $consonant_position_array_count_array_count_array\
    \ = array();\n    $vowel_position_array_count_array_count_array_count = 0;\n \
    \   $consonant_position_array_count_array_count_array_count = 0;\n    $vowel_position_array_count_array_count_array_count_array\
    \ = array();\n    $consonant_position_array_count_array_count_array_count_array\
    \ = array();\n    $vowel_position_array_count_array_count_array_count_array_count\
    \ = 0;\n    $consonant_position_array_count_array_count_array_count_array_count\
    \ = 0;\n    $vowel_position_array_count_array_count_array_count_array", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    for ($i =\
    \ $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $closest_vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $word = strtolower($word);\n    $length = strlen($word);\n \
    \   for ($i = $length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i == $length - 1) {\n                return '';\n      \
    \      }\n            if (in_array($word[$i + 1], $vowels)) {\n              \
    \  continue;\n            }\n            return $word[$i];\n        }\n    }\n\
    \    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word_arr\
    \ = str_split($word);\n    $word_arr_rev = array_reverse($word_arr);\n    $vowel_pos\
    \ = [];\n    $consonant_pos = [];\n    for ($i = 0; $i < count($word_arr_rev);\
    \ $i++) {\n        if (in_array($word_arr_rev[$i], $vowels)) {\n            $vowel_pos[]\
    \ = $i;\n        } else {\n            $consonant_pos[] = $i;\n        }\n   \
    \ }\n    $vowel_pos_rev = array_reverse($vowel_pos);\n    $consonant_pos_rev =\
    \ array_reverse($consonant_pos);\n    $result = [];\n    for ($i = 0; $i < count($vowel_pos_rev);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_pos_rev); $j++) {\n    \
    \        if ($vowel_pos_rev[$i] < $consonant_pos_rev[$j]) {\n                $result[]\
    \ = $vowel_pos_rev[$i];\n            }\n        }\n    }\n    if (count($result)\
    \ == 0) {\n        return '';\n    } else {\n        $result_rev = array_reverse($result);\n\
    \        $result_rev_min = min($result_rev);\n        $result_rev_min_pos = array_search($result_rev_min,\
    \ $result_rev);\n        $result_rev_min_pos_rev = count($result_rev) - $result_rev_min_pos\
    \ - 1;\n        $result_rev_min_pos_rev_rev = count($result) - $result_rev_min_pos_rev\
    \ - 1;\n        $result_rev_min_pos_rev_rev_rev = count($word_arr) - $result_rev_min_pos_rev_rev\
    \ - 1;\n        return $word_arr[$result_rev_min_pos_rev_rev_rev];", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n \
    \   $result = \"\";\n    for ($i = count($word_array) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word_array[$i], $vowels)) {\n            if ($i == count($word_array)\
    \ - 1) {\n                return \"\";\n            } else {\n               \
    \ if (in_array($word_array[$i + 1], $consonants)) {\n                    $result\
    \ = $word_array[$i];\n                    return $result;\n                }\n\
    \            }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $letters = str_split($word);\n    $letters\
    \ = array_reverse($letters);\n    $vowel_index = -1;\n    $consonant_index = -1;\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    for ($i = 0; $i\
    \ < count($letters); $i++) {\n        if (in_array($letters[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n        } else\
    \ {\n            $consonant_index = $i;\n            $consonant_found = true;\n\
    \        }\n        if ($vowel_found && $consonant_found) {\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        return\
    \ $letters[$vowel_index];\n    } else {\n        return \"\";\n    }\n}\n", " \
    \   $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n           \
    \ $consonant_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null || $consonant_index === null) {\n        return '';\n    }\n    return\
    \ $word[$vowel_index];\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = str_split($word);\n    $vowel = '';\n    $index = 0;\n    $i = count($word)\
    \ - 1;\n    while ($i > 0) {\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $vowel = $word[$i];\n            $index = $i;\n            break;\n\
    \        }\n        $i--;\n    }\n    if ($vowel == '') {\n        return '';\n\
    \    }\n    $i = $index - 1;\n    while ($i > 0) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $vowel;\n        }\n        $i--;\n    }\n \
    \   return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel = '';\n    $index = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            $index = $i;\n            break;\n        }\n    }\n    if ($index\
    \ == 0) {\n        return '';\n    }\n    for ($i = $index - 1; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            return $vowel;\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $vowel_index = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n    \
    \    if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n   \
    \         break;\n        }\n    }\n    if ($vowel_index == 0) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"\
    FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\");\necho \"\\n\";\necho\
    \ get_closest_vowel(\"ab\");\necho \"\\n\";", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $word = strtolower($word);\n    $word_len = strlen($word);\n\
    \    $i = $word_len - 1;\n    while ($i > 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (!in_array($word[$i-1], $vowels)) {\n          \
    \      return $word[$i];\n            }\n        }\n        $i--;\n    }\n   \
    \ return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t\
    $word = strtolower($word);\n\t$word_length = strlen($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_distance = 0;\n\tfor ($i = $word_length - 1; $i >= 0; $i--) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn \"\";\n\t}\n\tfor ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance\
    \ = $vowel_index - $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_distance == 0)\
    \ {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            if ($i == 0 || $i ==\
    \ $word_length - 1) {\n                continue;\n            }\n            $distance\
    \ = $word_length - $i;\n            if ($distance > $closest_vowel_distance) {\n\
    \                $closest_vowel_distance = $distance;\n                $closest_vowel_index\
    \ = $i;\n            }\n        }\n    }\n    if ($closest_vowel_distance > 0)\
    \ {\n        $closest_vowel = $word[$closest_vowel_index];\n    }\n    return\
    \ $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants\
    \ = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    $closest_distance = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (!$vowel_found) {\n            if (in_array($word[$i], $vowels))\
    \ {\n                $vowel_found = true;\n                $vowel_index = $i;\n\
    \            }\n        } else {\n            if (in_array($word[$i], $consonants))\
    \ {\n                $consonant_found = true;\n                $consonant_index\
    \ = $i;\n                break;\n            }\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        $closest_vowel = $word[$vowel_index];\n    \
    \    $closest_vowel_index = $vowel_index;\n        $closest_distance = $vowel_index\
    \ - $consonant_index;\n        for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \            if (in_array($word[$i], $vowels)) {\n                if ($i - $consonant_index\
    \ < $closest_distance) {\n                    $closest_vowel = $word[$i];\n  \
    \                  $closest_", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n\
    \    $vowel_index_temp = 0;\n    $vowel_found = false;\n    for ($i = $word_array_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $vowel_index_temp = $i;\n            $vowel_distance_temp = $word_array_length\
    \ - $i;\n            if ($vowel_distance_temp > $vowel_distance) {\n         \
    \       $vowel_distance = $vowel_distance_temp;\n                $vowel_index\
    \ = $vowel_index_temp;\n                $vowel_found = true;\n            }\n\
    \        }\n    }\n    if ($vowel_found) {\n        return $word_array[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index > $consonant_index) {\n        $closest_vowel\
    \ = $word[$vowel_index];\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n    $result\
    \ = \"\";\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            break;\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_index_temp =\
    \ 0;\n    $closest_vowel_temp = \"\";\n    for ($i = $word_array_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n         \
    \   $vowel_index = $i;\n            $closest_vowel_temp = $word_array[$i];\n \
    \           $closest_vowel_index_temp = $i;\n            for ($j = $i - 1; $j\
    \ >= 0; $j--) {\n                if (in_array($word_array[$j], $consonants)) {\n\
    \                    $consonant_index = $j;\n                    $closest_vowel_distance_temp\
    \ = $vowel_index - $consonant_index;\n                    if ($closest_vowel_distance_temp\
    \ > $closest_vowel_distance) {\n                        $closest_vowel_distance\
    \ = $closest_vowel_distance_temp;\n                        $closest_vowel = $closest_vowel_temp;\n\
    \                        $closest_v", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    for ($i = $word_array_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $closest_vowel = $word_array[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (!in_array($word_array[$i], $vowels)) {\n        \
    \    return $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    for ($i = count($word_array)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $vowel_index = $i;\n            break;\n        }\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word_array[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n       \
    \ return \"\";\n    }\n    return $word_array[$vowel_index];\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel =\
    \ \"\";\n    $closest_vowel_index = -1;\n    $closest_consonant_index = -1;\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ -1) {\n        return \"\";\n    }\n    for ($i = $closest_vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n        \
    \    $closest_consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($closest_consonant_index == -1) {\n        return \"\";\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_count\
    \ = 0;\n    $vowel_index = 0;\n    for ($i = 0; $i < count($word); $i++) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $vowel_count++;\n   \
    \         $vowel_index = $i;\n        }\n    }\n    if ($vowel_count == 0) {\n\
    \        return \"\";\n    }\n    if ($vowel_count == 1) {\n        return strtoupper($word[$vowel_index]);\n\
    \    }\n    if ($vowel_count > 1) {\n        $vowel_index = 0;\n        for ($i\
    \ = 0; $i < count($word); $i++) {\n            if (in_array($word[$i], $vowels))\
    \ {\n                $vowel_index = $i;\n                break;\n            }\n\
    \        }\n        return strtoupper($word[$vowel_index]);\n    }\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    $closest_vowel_distance = 0;\n    $previous_char = '';\n    $next_char =\
    \ '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $previous_char = $word[$i - 1];\n            $next_char\
    \ = $word[$i + 1];\n            if ($previous_char && $next_char && !in_array($previous_char,\
    \ $vowels) && !in_array($next_char, $vowels)) {\n                $distance = $word_length\
    \ - $i;\n                if ($closest_vowel_distance == 0 || $distance < $closest_vowel_distance)\
    \ {\n                    $closest_vowel_distance = $distance;\n              \
    \      $closest_vowel_index = $i;\n                }\n            }\n        }\n\
    \    }\n    if ($closest_vowel_index) {\n        $closest_vowel = $word[$closest_vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $vowel_index = 0;\n    $vowel_distance = $word_length;\n    for ($i = 0; $i\
    \ < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n     \
    \       $distance = $word_length - $i;\n            if ($distance < $vowel_distance)\
    \ {\n                $vowel_distance = $distance;\n                $vowel_index\
    \ = $i;\n            }\n        }\n    }\n    if ($vowel_distance == $word_length)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strrev($word);\n  \
    \  $vowel_index = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n         \
    \   break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return \"\
    \";\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n    \
    \    if (!in_array($word[$i], $vowels)) {\n            return strrev($word[$vowel_index]);\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n   \
    \ $word = str_split($word);\n    $word_length = count($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index_array[] = $i;\n            $vowel_found\
    \ = true;\n        }\n        if (in_array($word[$i], $consonants)) {\n      \
    \      $consonant_index_array[] = $i;\n            $consonant_found = true;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        $vowel_index\
    \ = $vowel_index_array[count($vowel_index_array) - 1];\n        $consonant_index\
    \ = $consonant_index_array[count($consonant_index_array) - 1];\n        if ($vowel_index\
    \ > $consonant_index) {\n            return $word[$vowel_index];\n        }\n\
    \    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n  \
    \  $word = strtolower($word);\n    $word_length = strlen($word);\n    $result\
    \ = '';\n    $last_vowel_index = -1;\n    $last_consonant_index = -1;\n    for\
    \ ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $last_vowel_index = $i;\n            if ($last_consonant_index\
    \ > -1) {\n                $result = $word[$last_vowel_index];\n             \
    \   break;\n            }\n        } else {\n            $last_consonant_index\
    \ = $i;\n            if ($last_vowel_index > -1) {\n                $result =\
    \ $word[$last_vowel_index];\n                break;\n            }\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split($word);\n    $result = '';\n    $count = 0;\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $result = $word[$i];\n            $count++;\n        } else {\n\
    \            if ($count == 1) {\n                return $result;\n           \
    \ }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            break;\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $vowel_index = null;\n    for ($i\
    \ = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === null) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word_array[$i],\
    \ $vowels)) {\n            return $word_array[$vowel_index];\n        }\n    }\n\
    \    return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if (!$vowel_found) {\n        return '';\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = $word_length;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == 0) {\n\
    \        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance = $vowel_index\
    \ - $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index + 1;\
    \ $i < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n \
    \           if ($i - $vowel_index < $vowel_distance) {\n                $vowel_distance\
    \ = $i - $vowel_index;\n            }\n            break;\n        }\n    }\n\
    \    if ($vowel_distance == $word_length) {\n        return \"\";\n    }\n   \
    \ return $word[$vowel_index];\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $vowel_index = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n  \
    \          break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "  $vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\");\n  $word\
    \ = strtolower($word);\n  $word_length = strlen($word);\n  $vowel_index = 0;\n\
    \  $vowel_distance = $word_length;\n  for ($i = 0; $i < $word_length; $i++) {\n\
    \    if (in_array($word[$i], $vowels)) {\n      $vowel_distance = $word_length\
    \ - $i;\n      $vowel_index = $i;\n      break;\n    }\n  }\n  for ($i = $vowel_index\
    \ + 1; $i < $word_length; $i++) {\n    if (in_array($word[$i], $vowels)) {\n \
    \     if ($word_length - $i < $vowel_distance) {\n        $vowel_distance = $word_length\
    \ - $i;\n        $vowel_index = $i;\n      }\n    }\n  }\n  if ($vowel_distance\
    \ == $word_length) {\n    return \"\";\n  }\n  return $word[$vowel_index];\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i < $closest_vowel_index) {\n                $closest_vowel_index\
    \ = $i;\n                $closest_vowel = $word[$i];\n            }\n        }\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"];\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $vowel_index = 0;\n    $consonant_index = 0;\n  \
    \  $result = \"\";\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word_array[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n           \
    \ $consonant_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ > $consonant_index) {\n        $result = $word_array[$vowel_index];\n    }\n\
    \    return $result;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && in_array($word[$i - 1], $consonants))\
    \ {\n                if ($i < $word_length - 1 && in_array($word[$i + 1], $consonants))\
    \ {\n                    if ($i < $closest_vowel_distance) {\n               \
    \         $closest_vowel_distance = $i;\n                        $closest_vowel_index\
    \ = $i;\n                    }\n                }\n            }\n        }\n\
    \    }\n    if ($closest_vowel_index > 0) {\n        $closest_vowel = $word[$closest_vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_length = count($word_array);\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    for ($i = $word_length - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word_array[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index == -1)\
    \ {\n        return \"\";\n    }\n    return $word_array[$vowel_index];\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $closest_vowel_index = $i;\n            break;\n \
    \       }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n\
    \    }\n    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $closest_vowel;\n        }\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $closest_vowel_index = $i;\n            break;\n \
    \       }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n\
    \    }\n    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $closest_vowel;\n        }\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_found\
    \ = false;\n    $vowel_index = 0;\n    $consonant_found = false;\n    $consonant_index\
    \ = 0;\n    $result = \"\";\n    for ($i = 0; $i < count($word); $i++) {\n   \
    \     if ($vowel_found && $consonant_found) {\n            break;\n        }\n\
    \        if (!$vowel_found && in_array($word[$i], $vowels)) {\n            $vowel_found\
    \ = true;\n            $vowel_index = $i;\n        }\n        if (!$consonant_found\
    \ && !in_array($word[$i], $vowels)) {\n            $consonant_found = true;\n\
    \            $consonant_index = $i;\n        }\n    }\n    if ($vowel_found &&\
    \ $consonant_found) {\n        $result = $word[$vowel_index];\n    }\n    return\
    \ $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $last_vowel_index = -1;\n    $last_consonant_index\
    \ = -1;\n    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $last_vowel_index\
    \ = $i;\n            if ($last_consonant_index != -1) {\n                $closest_vowel\
    \ = $word[$last_vowel_index];\n                break;\n            }\n       \
    \ } else {\n            $last_consonant_index = $i;\n            if ($last_vowel_index\
    \ != -1) {\n                $closest_vowel = $word[$last_vowel_index];\n     \
    \           break;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $closest_vowel = $word[$i];\n            break;\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_distance = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $word_length - $i;\n            if ($vowel_distance < $closest_vowel_distance)\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word =\
    \ strtolower($word);\n    $word_len = strlen($word);\n    $i = $word_len - 1;\n\
    \    $prev_is_vowel = false;\n    $prev_is_consonant = false;\n    $closest_vowel\
    \ = '';\n    while ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            if ($prev_is_consonant) {\n                $closest_vowel = $word[$i];\n\
    \                break;\n            }\n            $prev_is_vowel = true;\n \
    \       } else {\n            if ($prev_is_vowel) {\n                $prev_is_consonant\
    \ = true;\n            }\n        }\n        $i--;\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $vowel_pos = array();\n\
    \    $consonant_pos = array();\n    for ($i = 0; $i < strlen($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_pos[] = $i;\n\
    \        } else {\n            $consonant_pos[] = $i;\n        }\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($vowel_pos); $i++) {\n        $vowel_pos_left\
    \ = $vowel_pos[$i] - 1;\n        $vowel_pos_right = $vowel_pos[$i] + 1;\n    \
    \    if (in_array($vowel_pos_left, $consonant_pos) && in_array($vowel_pos_right,\
    \ $consonant_pos)) {\n            $result[] = $word[$vowel_pos[$i]];\n       \
    \ }\n    }\n    if (count($result) == 0) {\n        return \"\";\n    } else {\n\
    \        return $result[0];\n    }\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    for ($i = $word_length - 1; $i > 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $length = strlen($word);\n\
    \    $i = $length - 1;\n    $vowel_pos = -1;\n    $consonant_pos = -1;\n    $consonant_pos_prev\
    \ = -1;\n    while ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_pos = $i;\n            if ($consonant_pos_prev != -1) {\n\
    \                $consonant_pos = $consonant_pos_prev;\n                break;\n\
    \            }\n        } else {\n            $consonant_pos_prev = $i;\n    \
    \    }\n        $i--;\n    }\n    if ($vowel_pos == -1 || $consonant_pos == -1)\
    \ {\n        return \"\";\n    }\n    return $word[$vowel_pos];\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $vowel_index = 0;\n    $word_length =\
    \ strlen($word);\n    $word_array = str_split($word);\n    for ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n  \
    \          $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == 0) {\n        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i > 0;\
    \ $i--) {\n        if (!in_array($word_array[$i], $vowels)) {\n            return\
    \ $word_array[$vowel_index];\n        }\n    }\n    return \"\";\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word\
    \ = str_split($word);\n    $word = array_reverse($word);\n    $vowel_found = false;\n\
    \    $vowel_index = 0;\n    $consonant_found = false;\n    $consonant_index =\
    \ 0;\n    $result = \"\";\n    for ($i = 0; $i < count($word); $i++) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_found = true;\n  \
    \          $vowel_index = $i;\n        }\n        if (!in_array($word[$i], $vowels)\
    \ && $vowel_found) {\n            $consonant_found = true;\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n        $result = $word[$vowel_index];\n    }\n    return $result;\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array\
    \ = str_split($word);\n    $word_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_consonant_index = 0;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n         \
    \   $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n\
    \            $consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($vowel_index > $consonant_index) {\n        $closest_vowel = $word_array[$vowel_index];\n\
    \        $closest_vowel_index = $vowel_index;\n        $closest_consonant_index\
    \ = $consonant_index;\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index =\
    \ $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word_array[$i], $", "    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return \"\";\n    }\n    $consonant_index = -1;\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      $consonant_index = $i;\n            break;\n        }\n    }\n    if ($consonant_index\
    \ == -1) {\n        return \"\";\n    }\n    $consonant_index = -1;\n    for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($consonant_index == -1) {\n        return \"\";\n    }\n\
    \    return $word[$vowel_index];\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"];\n    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $vowel_index = -1;\n    $vowel_index_array = [];\n    for ($i = 0; $i < $word_array_length;\
    \ $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            array_push($vowel_index_array, $vowel_index);\n        }\n\
    \    }\n    $vowel_index_array_length = count($vowel_index_array);\n    if ($vowel_index_array_length\
    \ == 0) {\n        return \"\";\n    }\n    for ($i = 0; $i < $vowel_index_array_length;\
    \ $i++) {\n        if ($vowel_index_array[$i] == 0) {\n            unset($vowel_index_array[$i]);\n\
    \        }\n        if ($vowel_index_array[$i] == $word_array_length - 1) {\n\
    \            unset($vowel_index_array[$i]);\n        }\n    }\n    $vowel_index_array\
    \ = array_values($vowel_index_array);\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    if ($vowel_index_array_length == 0) {\n        return \"\";\n    }\n    $vowel_index_array_length\
    \ = count($vowel_index_array);\n    for ($i = 0; $i < $vowel_index_array_length;\
    \ $i++) {\n        if (in_array($word_array[$vowel_index_array[$i] - 1], $vowels))\
    \ {\n            unset($vowel_index_array[$i]);\n        }\n        if (in_array($word_array[$vowel_index_array[$i",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $result\
    \ = '';\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found =\
    \ false;\n    $consonant_found = false;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n        }\n        if (!in_array($word[$i],\
    \ $vowels) && $vowel_found) {\n            $consonant_index = $i;\n          \
    \  $consonant_found = true;\n        }\n        if ($vowel_found && $consonant_found)\
    \ {\n            $result = $word[$vowel_index];\n            break;\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n\
    \    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $vowel_index = -1;\n    $vowel_index_array = array();\n    for ($i = 0; $i\
    \ < $word_array_length; $i++) {\n        if (in_array($word_array[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            array_push($vowel_index_array,\
    \ $vowel_index);\n        }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $vowel_index_array_length--;\n    $vowel_index_array_length_minus_one = $vowel_index_array_length\
    \ - 1;\n    $vowel_index_array_length_minus_two = $vowel_index_array_length -\
    \ 2;\n    $vowel_index_array_length_minus_three = $vowel_index_array_length -\
    \ 3;\n    $vowel_index_array_length_minus_four = $vowel_index_array_length - 4;\n\
    \    $vowel_index_array_length_minus_five = $vowel_index_array_length - 5;\n \
    \   $vowel_index_array_length_minus_six = $vowel_index_array_length - 6;\n   \
    \ $vowel_index_array_length_minus_seven = $vowel_index_array_length - 7;\n   \
    \ $vowel_index_array_length_minus_eight = $vowel_index_", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $vowel_distance = $i - $vowel_index;\n        \
    \        break;\n            }\n        }\n    }\n    if ($vowel_distance > 0)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return '';\n \
    \   }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $vowel_index_arr = [];\n    $consonant_index_arr\
    \ = [];\n    $vowel_index_arr_len = 0;\n    $consonant_index_arr_len = 0;\n  \
    \  $result = '';\n    $result_index = 0;\n    $result_arr = [];\n    $result_arr_len\
    \ = 0;\n    $result_arr_index = 0;\n    $result_arr_index_len = 0;\n    $result_arr_index_len_arr\
    \ = [];\n    $result_arr_index_len_arr_len = 0;\n    $result_arr_index_len_arr_len_arr\
    \ = [];\n    $result_arr_index_len_arr_len_arr_len = 0;\n    $result_arr_index_len_arr_len_arr_len_arr\
    \ = [];\n    $result_arr_index_len_arr_len_arr_len_arr_len = 0;\n    $result_arr_index_len_arr_len_arr_len_arr_len_arr\
    \ = [];\n    $result_arr_index_len_arr_len_arr_len_arr_len_arr_len = 0;\n    $result_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr\
    \ = [];\n    $result_arr_index_len_arr_len_arr_len_arr_len_arr_len_arr_len = 0;\n\
    \    $", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    $vowel_index_left = -1;\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $vowel_index_left = $i;\n            break;\n        }\n    }\n\
    \    $vowel_index_right = -1;\n    for ($i = $vowel_index + 1; $i < $word_length;\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_index_right\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index_left == -1\
    \ || $vowel_index_right == -1) {\n        return \"\";\n    }\n    if ($vowel_index\
    \ - $vowel_index_left < $vowel_index_right - $vowel_index) {\n        return $word[$vowel_index];\n\
    \    }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $closest_vowel = \"\";\n  \
    \  for ($i = $word_array_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            if ($i == $word_array_length - 1) {\n             \
    \   continue;\n            } else {\n                if (in_array($word_array[$i\
    \ + 1], $consonants)) {\n                    $closest_vowel = $word_array[$i];\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word_array\
    \ = str_split($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    $vowel_count = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_array = array();\n    $consonant_array = array();\n    $vowel_array_index\
    \ = 0;\n    $consonant_array_index = 0;\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n    $consonant_distance\
    \ = 0;\n    $consonant_distance_temp = 0;\n    $vowel_distance_array = array();\n\
    \    $vowel_distance_array_index = 0;\n    $vowel_distance_array_index_temp =\
    \ 0;\n    $vowel_distance_array_index_temp_2 = 0;\n    $vowel_distance_array_index_temp_3\
    \ = 0;\n    $vowel_distance_array_index_temp_4 = 0;\n    $vowel_distance_array_index_temp_5\
    \ = 0;\n    $vowel_distance_array_index_temp_6 = 0;\n    $vowel_distance_array_index_temp_7\
    \ = 0;\n    $vowel_distance_array_index_temp_8 = 0;\n    $vow", "    $vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $i = $word_array_length - 1;\n\
    \    while ($i >= 0) {\n        if (in_array($word_array[$i], $vowels)) {\n  \
    \          if ($i == 0) {\n                return \"\";\n            } else if\
    \ (in_array($word_array[$i - 1], $vowels)) {\n                return \"\";\n \
    \           } else {\n                return $word_array[$i];\n            }\n\
    \        }\n        $i--;\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n            if ($i\
    \ == 0) {\n                if (in_array($word_array[$i + 1], $consonants)) {\n\
    \                    $closest_vowel = $word_array[$i];\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel_distance = 1;\n                }\n\
    \            } elseif ($i == $word_length - 1) {\n                if (in_array($word_array[$i\
    \ - 1], $consonants)) {\n                    $closest_vowel = $word_array[$i];\n\
    \                    $closest_vowel_index = $i;\n                    $closest_vowel_distance\
    \ = 1;\n                }\n            } else {\n                if (in_array($word_array[$i\
    \ - 1], $consonants) && in_array($word_array[$i + 1], $consonants)) {\n      \
    \              $closest_vowel = $word_array[$i];\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel_distance = 1;\n                }\n\
    \            }\n        }\n    }\n    for ($i = $closest_vowel_index + 1; $i <",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    $result = '';\n \
    \   for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === null) {\n        return $result;\n    }\n   \
    \ for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($consonant_index === null) {\n        return $result;\n\
    \    }\n    for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n        if\
    \ (in_array($word[$i], $consonants)) {\n            $result = $word[$vowel_index];\n\
    \            break;\n        }\n    }\n    return $result;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $vowel_index = 0;\n    $word_length =\
    \ strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n         \
    \   break;\n        }\n    }\n    if ($vowel_index == 0) {\n        return '';\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    $closest_consonant_index_2 = 0;\n    $closest_vowel_distance = 0;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel_index = $i;\n            for ($j = $i;\
    \ $j >= 0; $j--) {\n                if (in_array($word[$j], $consonants)) {\n\
    \                    $closest_consonant_index = $j;\n                    break;\n\
    \                }\n            }\n            for ($k = $i; $k < $word_length;\
    \ $k++) {\n                if (in_array($word[$k], $consonants)) {\n         \
    \           $closest_consonant_index_2 = $k;\n                    break;\n   \
    \             }\n            }\n            if ($closest_consonant_index_2 - $closest_vowel_index\
    \ > $closest_vowel_index - $closest_consonant_index) {\n                $closest_vowel_distance\
    \ = $closest_vowel_index - $closest_consonant_index;\n                $closest_vowel\
    \ = $word[$closest_vowel_index];\n            } else {\n                $closest_vowel_distance\
    \ = $closest", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = 0;\n            for ($j = $i + 1; $j < $word_length; $j++) {\n           \
    \     if (!in_array($word[$j], $vowels)) {\n                    $vowel_distance++;\n\
    \                } else {\n                    break;\n                }\n   \
    \         }\n            if ($vowel_distance > 0 && ($closest_vowel_distance ==\
    \ 0 || $vowel_distance < $closest_vowel_distance)) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_len\
    \ = strlen($word);\n    $vowel_pos = [];\n    for ($i = 0; $i < $word_len; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos[] = $i;\n\
    \        }\n    }\n    $vowel_pos_len = count($vowel_pos);\n    if ($vowel_pos_len\
    \ == 0) {\n        return '';\n    }\n    $closest_vowel = '';\n    $closest_vowel_pos\
    \ = $word_len;\n    for ($i = 0; $i < $vowel_pos_len; $i++) {\n        if ($vowel_pos[$i]\
    \ > 0 && $vowel_pos[$i] < $word_len - 1) {\n            if ($word[$vowel_pos[$i]\
    \ - 1] != $word[$vowel_pos[$i] + 1]) {\n                if ($vowel_pos[$i] < $closest_vowel_pos)\
    \ {\n                    $closest_vowel_pos = $vowel_pos[$i];\n              \
    \      $closest_vowel = $word[$vowel_pos[$i]];\n                }\n          \
    \  }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $vowel_index = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    if ($vowel_found) {\n        for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                return\
    \ $word[$vowel_index];\n            }\n        }\n    }\n    return \"\";\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $i = $word_length - 1;\n    $prev_char\
    \ = \"\";\n    $next_char = \"\";\n    while ($i >= 0) {\n        $char = $word[$i];\n\
    \        if (in_array($char, $vowels)) {\n            if ($prev_char != \"\" &&\
    \ $next_char != \"\") {\n                return $char;\n            }\n      \
    \  } else {\n            $prev_char = $char;\n        }\n        $i--;\n    }\n\
    \    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0\
    \ && $i < $word_length - 1) {\n                if ($word[$i - 1] != $word[$i +\
    \ 1]) {\n                    if ($i < $closest_vowel_index) {\n              \
    \          $closest_vowel_index = $i;\n                        $closest_vowel\
    \ = $word[$i];\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $vowel_distance_array = array();\n    $vowel_index_array\
    \ = array();\n    $vowel_distance_array_index = 0;\n    $vowel_index_array_index\
    \ = 0;\n    $vowel_distance_array_index_max = 0;\n    $vowel_index_array_index_max\
    \ = 0;\n    $vowel_distance_max = 0;\n    $vowel_index_max = 0;\n    $vowel_index_max_index\
    \ = 0;\n    $vowel_index_max_index_array = array();\n    $vowel_index_max_index_array_index\
    \ = 0;\n    $vowel_index_max_index_array_index_max = 0;\n    $vowel_index_max_index_array_index_max_index\
    \ = 0;\n    $vowel_index_max_index_array_index_max_index_array = array();\n  \
    \  $vowel_index_max_index_array_index_max_index_array_index = 0;\n    $vowel_index_max_index_array_index_max_index_array_index_max\
    \ = 0;\n    $vowel_index_max_index_array_index_max_index_array_index_max_index\
    \ = 0;\n    $vowel_index_max_index_array_index_max_index_array_index_max_index_array\
    \ = array();\n    $vowel_index_max_index_array_index_max_index_array_index_max_index_array_index\
    \ = 0;\n    $vowel_index_max_index_array_index_max_index_array_index_max_index_array_index_max\
    \ = 0;\n    $vowel_index_max_index_array_index_max_index_array_index_max", " \
    \   $vowels = \"aeiou\";\n    $word = strrev($word);\n    $word_len = strlen($word);\n\
    \    $vowel_pos = -1;\n    for ($i = 0; $i < $word_len; $i++) {\n        if (strpos($vowels,\
    \ $word[$i]) !== false) {\n            $vowel_pos = $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_pos == -1) {\n        return \"\";\n    }\n\
    \    $consonant_pos = -1;\n    for ($i = $vowel_pos + 1; $i < $word_len; $i++)\
    \ {\n        if (strpos($vowels, $word[$i]) === false) {\n            $consonant_pos\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_pos == -1) {\n\
    \        return \"\";\n    }\n    return $word[$vowel_pos];\n}\n", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && in_array($word[$i - 1], $consonants)\
    \ && $i < $word_length - 1 && in_array($word[$i + 1], $consonants)) {\n      \
    \          if ($i < $closest_vowel_index) {\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel = $word[$i];\n                }\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $word = strtolower($word);\n    $word = str_split($word);\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    $result = '';\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($vowel_index != -1 && $consonant_index != -1) {\n        $result = $word[$vowel_index];\n\
    \    }\n    return $result;\n}\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = $word_length;\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ $word_length) {\n        return '';\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      return $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return '';\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $letters = str_split($word);\n    $letters = array_reverse($letters);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    for ($i = 0; $i < count($letters);\
    \ $i++) {\n        if (in_array($letters[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = 0; $i < count($letters);\
    \ $i++) {\n        if (!in_array($letters[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1 || $consonant_index\
    \ == -1) {\n        return \"\";\n    }\n    if ($vowel_index < $consonant_index)\
    \ {\n        return $letters[$vowel_index];\n    }\n    return \"\";\n}\n", " \
    \   $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word\
    \ = strtolower($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $result = \"\";\n    for ($i = count($word_array) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n            break;\n        }\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n        $result = $word_array[$vowel_index];\n    }\n    return $result;\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_index = -1;\n            $right_consonant_index\
    \ = -1;\n            for ($j = $i - 1; $j >= 0; $j--) {\n                if (in_array($word[$j],\
    \ $consonants)) {\n                    $left_consonant_index = $j;\n         \
    \           break;\n                }\n            }\n            for ($j = $i\
    \ + 1; $j < $word_length; $j++) {\n                if (in_array($word[$j], $consonants))\
    \ {\n                    $right_consonant_index = $j;\n                    break;\n\
    \                }\n            }\n            if ($left_consonant_index != -1\
    \ && $right_consonant_index != -1) {\n                $distance = $right_consonant_index\
    \ - $left_consonant_index - 1;\n                if ($distance < $closest_vowel_distance)\
    \ {\n                    $closest_vowel_distance = $distance;\n              \
    \      $closest_vowel_index = $i;\n                }\n            }\n        }\n\
    \    }\n    if ($closest_vowel_index != -1) {\n        $closest_vowel = $word[$clos",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $len = strlen($word);\n    $result = \"\";\n    for ($i = $len - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i\
    \ == $len - 1) {\n                $result = \"\";\n                break;\n  \
    \          } else {\n                $result = $word[$i];\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    $consonant_index\
    \ = -1;\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($consonant_index == -1) {\n        return '';\n    }\n  \
    \  $consonant_index = -1;\n    for ($i = $vowel_index + 1; $i < $word_length;\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index == -1)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    for ($i = count($word) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            if ($consonant_index != -1) {\n                break;\n \
    \           }\n        } else {\n            $consonant_index = $i;\n        \
    \    if ($vowel_index != -1) {\n                break;\n            }\n      \
    \  }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n       \
    \ return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n   \
    \ $word = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    $left_consonant_index\
    \ = -1;\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $left_consonant_index = $i;\n            break;\n\
    \        }\n    }\n    if ($left_consonant_index == -1) {\n        return '';\n\
    \    }\n    $right_consonant_index = -1;\n    for ($i = $vowel_index + 1; $i <\
    \ $word_len; $i++) {\n        if (in_array($word[$i], $consonants)) {\n      \
    \      $right_consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($right_consonant_index == -1) {\n        return '';\n    }\n    return\
    \ $word[$vowel_index];\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array =\
    \ str_split($word);\n    $word_length = count($word_array);\n    $closest_vowel\
    \ = \"\";\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $closest_vowel = $word_array[$i];\n            if ($i\
    \ < $word_length - 1 && in_array($word_array[$i + 1], $consonants)) {\n      \
    \          break;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            break;\n \
    \       }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array =\
    \ str_split($word);\n    $word_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $vowel_index = $i;\n            break;\n        }\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index - $consonant_index > 1) {\n        $closest_vowel\
    \ = $word_array[$vowel_index];\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    for ($i = $word_array_length\
    \ - 1; $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels) && in_array($word_array[$i\
    \ - 1], $consonants)) {\n            return $word_array[$i];\n        }\n    }\n\
    \    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\");\n    $word_array = str_split($word);\n    $word_length = count($word_array);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_consonant_index = 0;\n    $closest_consonant_distance = 0;\n\
    \    $closest_consonant_index_2 = 0;\n    $closest_consonant_distance_2 = 0;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $closest_vowel = $word_array[$i];\n            $closest_vowel_index\
    \ = $i;\n            $closest_vowel_distance = $word_length - $i;\n          \
    \  break;\n        }\n    }\n    for ($i = $closest_vowel_index; $i < $word_length;\
    \ $i++) {\n        if (in_array($word_array[$i], $consonants)) {\n           \
    \ $closest_consonant_index = $i;\n            $closest_consonant_distance = $word_length\
    \ - $i;\n            break;\n        }\n    }\n    for ($i = $closest_consonant_index;\
    \ $i < $word_length; $i++) {\n        if (in_array($word_array[$i], $consonants))\
    \ {\n            $closest_consonant_index_2 = $i;\n            $closest_consonant_distance_",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $vowel_pos\
    \ = [];\n    $consonant_pos = [];\n    $result = '';\n    $vowel_count = 0;\n\
    \    $consonant_count = 0;\n    for ($i = 0; $i < count($word); $i++) {\n    \
    \    if (in_array($word[$i], $vowels)) {\n            $vowel_pos[] = $i;\n   \
    \         $vowel_count++;\n        } else {\n            $consonant_pos[] = $i;\n\
    \            $consonant_count++;\n        }\n    }\n    if ($vowel_count == 0\
    \ || $consonant_count == 0) {\n        return $result;\n    }\n    for ($i = 0;\
    \ $i < count($vowel_pos); $i++) {\n        for ($j = 0; $j < count($consonant_pos);\
    \ $j++) {\n            if ($vowel_pos[$i] > $consonant_pos[$j]) {\n          \
    \      $result = $word[$vowel_pos[$i]];\n                break;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $i = $word_length - 1;\n    while ($i >= 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \        $i--;\n    }\n    if (isset($vowel_index)) {\n        $i = $vowel_index\
    \ - 1;\n        while ($i >= 0) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $consonant_index = $i;\n                break;\n        \
    \    }\n            $i--;\n        }\n        if (isset($consonant_index)) {\n\
    \            $i = $vowel_index + 1;\n            while ($i < $word_length) {\n\
    \                if (!in_array($word[$i], $vowels)) {\n                    return\
    \ $word[$vowel_index];\n                }\n                $i++;\n           \
    \ }\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_position\
    \ = [];\n    $consonant_position = [];\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_position[]\
    \ = $i;\n        } elseif (in_array($word[$i], $consonants)) {\n            $consonant_position[]\
    \ = $i;\n        }\n    }\n    $vowel_position_length = count($vowel_position);\n\
    \    $consonant_position_length = count($consonant_position);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_position = 0;\n    for ($i = 0; $i < $vowel_position_length;\
    \ $i++) {\n        for ($j = 0; $j < $consonant_position_length; $j++) {\n   \
    \         if ($vowel_position[$i] > $consonant_position[$j]) {\n             \
    \   if ($closest_vowel_position == 0) {\n                    $closest_vowel_position\
    \ = $vowel_position[$i];\n                    $closest_vowel = $word[$vowel_position[$i]];\n\
    \                } elseif ($vowel_position[$i] < $closest_vowel_position) {\n\
    \                    $closest_vowel_position = $vowel_position[$i];\n        \
    \            $closest_vowel = $word[$vowel_position[$i]];\n               ", " \
    \   $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word =\
    \ strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index = 0;\n\
    \    $consonant_index = 0;\n    $closest_vowel = \"\";\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($vowel_index > $consonant_index) {\n        $closest_vowel = $word[$vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if (!$vowel_found) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($consonant_index == 0) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$word_array = str_split($word);\n\t$word_array = array_reverse($word_array);\n\
    \t$vowel_index = 0;\n\t$vowel_found = false;\n\tfor ($i = 0; $i < count($word_array);\
    \ $i++) {\n\t\tif (in_array($word_array[$i], $vowels)) {\n\t\t\t$vowel_index =\
    \ $i;\n\t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found)\
    \ {\n\t\tfor ($i = $vowel_index; $i < count($word_array); $i++) {\n\t\t\tif (!in_array($word_array[$i],\
    \ $vowels)) {\n\t\t\t\treturn $word_array[$vowel_index];\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_index_array\
    \ = [];\n    $consonant_index_array = [];\n    for ($i = 0; $i < $word_array_length;\
    \ $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index_array[]\
    \ = $i;\n            $vowel_found = true;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index_array[] = $i;\n            $consonant_found\
    \ = true;\n        }\n    }\n    if ($vowel_found && $consonant_found) {\n   \
    \     $vowel_index = end($vowel_index_array);\n        $consonant_index = end($consonant_index_array);\n\
    \        if ($vowel_index > $consonant_index) {\n            return $word_array[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && in_array($word[$i - 1], $consonants))\
    \ {\n                if ($i < $word_length - 1 && in_array($word[$i + 1], $consonants))\
    \ {\n                    if ($i < $closest_vowel_distance) {\n               \
    \         $closest_vowel = $word[$i];\n                        $closest_vowel_distance\
    \ = $i;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "\t$vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$word_array_length = count($word_array);\n\
    \t$closest_vowel = \"\";\n\t$closest_vowel_index = 0;\n\t$closest_vowel_distance\
    \ = 0;\n\tfor ($i = 0; $i < $word_array_length; $i++) {\n\t\tif (in_array($word_array[$i],\
    \ $vowels)) {\n\t\t\tif ($i == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (in_array($word_array[$i\
    \ - 1], $consonants)) {\n\t\t\t\tif ($i == $word_array_length - 1) {\n\t\t\t\t\
    \tcontinue;\n\t\t\t\t}\n\t\t\t\tif (in_array($word_array[$i + 1], $consonants))\
    \ {\n\t\t\t\t\tif ($closest_vowel_distance == 0) {\n\t\t\t\t\t\t$closest_vowel_distance\
    \ = $i;\n\t\t\t\t\t\t$closest_vowel = $word_array[$i];\n\t\t\t\t\t} else {\n\t\
    \t\t\t\t\tif ($i < $closest_vowel_distance) {\n\t\t\t\t\t\t\t$closest_vowel_distance\
    \ = $i;\n\t\t\t\t\t\t\t$closest_vowel = $word_array[$i];\n\t\t\t\t\t\t}\n\t\t\t\
    \t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $clos", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n \
    \   $current_vowel_index = 0;\n    $current_vowel_distance = 0;\n    for ($i =\
    \ 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $current_vowel_index = $i;\n            $current_vowel_distance =\
    \ $word_length - $i;\n            if ($current_vowel_distance > $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $current_vowel_distance;\n    \
    \            $closest_vowel_index = $current_vowel_index;\n            }\n   \
    \     }\n    }\n    if ($closest_vowel_index == 0) {\n        return \"\";\n \
    \   }\n    else {\n        return $word[$closest_vowel_index];\n    }\n}\n\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $result = \"\";\n    $vowel_found = false;\n    $consonant_found = false;\n\
    \    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            $result = $word[$i];\n\
    \        } else {\n            if ($vowel_found) {\n                $consonant_found\
    \ = true;\n                break;\n            }\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $result;\n    } else {\n        return\
    \ \"\";\n    }\n}\n\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\"\
    );\necho \"\\n\";\necho get_closest_vowel(\"ab\");\necho \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            break;\n \
    \       }\n    }\n    if ($closest_vowel === '') {\n        return '';\n    }\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            if (in_array($word[$i - 1], $consonants)) {\n \
    \               return $closest_vowel;\n            }\n        }\n    }\n    return\
    \ '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $len = strlen($word);\n    for ($i = $len - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $len - 1) {\n   \
    \             return '';\n            }\n            if (!in_array($word[$i +\
    \ 1], $vowels)) {\n                return $word[$i];\n            }\n        }\n\
    \    }\n    return '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_distance = 0;\n    $consonant_distance = 0;\n    $closest_vowel\
    \ = '';\n    $closest_vowel_distance = 0;\n    $closest_vowel_index = 0;\n   \
    \ $closest_consonant_index = 0;\n    $closest_consonant_distance = 0;\n    $closest_consonant\
    \ = '';\n    $closest_vowel_index_found = false;\n    $closest_consonant_index_found\
    \ = false;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($closest_vowel_index_found === false) {\n \
    \               $closest_vowel_index = $vowel_index;\n                $closest_vowel_distance\
    \ = $vowel_distance;\n                $closest_vowel = $word[$i];\n          \
    \      $closest_vowel_index_found = true;\n            } else {\n            \
    \    if ($vowel_distance < $closest_vowel_distance) {\n                    $closest_vowel_index\
    \ = $vowel_index;\n                    $closest_vowel_distance = $vowel_", " \
    \   $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word =\
    \ strtolower($word);\n    $word_array = str_split($word);\n    $word_array_length\
    \ = count($word_array);\n    $vowel_index = 0;\n    $consonant_index = 0;\n  \
    \  $vowel_index_array = [];\n    $consonant_index_array = [];\n    $result = [];\n\
    \    for ($i = 0; $i < $word_array_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            array_push($vowel_index_array,\
    \ $vowel_index);\n        }\n        if (in_array($word_array[$i], $consonants))\
    \ {\n            $consonant_index = $i;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $consonant_index_array_length = count($consonant_index_array);\n    for ($i\
    \ = 0; $i < $vowel_index_array_length; $i++) {\n        for ($j = 0; $j < $consonant_index_array_length;\
    \ $j++) {\n            if ($vowel_index_array[$i] > $consonant_index_array[$j])\
    \ {\n                if ($vowel_index_array[$i] < $consonant_index_array[$j +\
    \ 1]) {\n                    array_push($result, $word_array[$vowel_index_array[$i]]);\n\
    \                }", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0\
    \ && $i < $word_length - 1) {\n                if (!in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                    if ($i < $closest_vowel_index)\
    \ {\n                        $closest_vowel_index = $i;\n                    \
    \    $closest_vowel = $word[$i];\n                    }\n                }\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $closest_vowel = $word[$i];\n\
    \            $closest_vowel_index = $i;\n            break;\n        }\n    }\n\
    \    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $closest_vowel;\n        }\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_consonant_index = 0;\n    $closest_distance = 0;\n    $distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            for ($j = $vowel_index;\
    \ $j < $word_length; $j++) {\n                if (in_array($word[$j], $consonants))\
    \ {\n                    $consonant_index = $j;\n                    $distance\
    \ = $consonant_index - $vowel_index;\n                    if ($distance > $closest_distance)\
    \ {\n                        $closest_distance = $distance;\n                \
    \        $closest_vowel = $word[$vowel_index];\n                        $closest_vowel_index\
    \ = $vowel_index;\n                        $closest_consonant_index = $consonant_index;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_distance = $word_length;\n    for\
    \ ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_distance = $word_length - $i;\n            if ($vowel_distance\
    \ < $closest_vowel_distance) {\n                $closest_vowel = $word[$i];\n\
    \                $closest_vowel_distance = $vowel_distance;\n            }\n \
    \       }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel\
    \ = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $vowel_index - $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_distance > 0) {\n        $closest_vowel = $word[$vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance > $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $vowel_distance;\n            \
    \    $closest_vowel_index = $vowel_index;\n                $closest_vowel = $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"FULL\");\necho \"\\n\";\n\
    echo get_closest_vowel(\"quick\");\necho \"\\n\";\necho get_closest_vowel(\"ab\"\
    );\necho \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_index = $i - 1;\n            $right_consonant_index\
    \ = $i + 1;\n            while ($left_consonant_index >= 0 && !in_array($word[$left_consonant_index],\
    \ $consonants)) {\n                $left_consonant_index--;\n            }\n \
    \           while ($right_consonant_index < $word_length && !in_array($word[$right_consonant_index],\
    \ $consonants)) {\n                $right_consonant_index++;\n            }\n\
    \            if ($left_consonant_index >= 0 && $right_consonant_index < $word_length)\
    \ {\n                $distance = $right_consonant_index - $left_consonant_index\
    \ - 1;\n                if ($distance < $closest_vowel_distance) {\n         \
    \           $closest_vowel_distance = $distance;\n                    $closest_vowel_index\
    \ = $i;\n                }\n            }\n        }\n    }\n    if ($closest_vowel_index\
    \ > 0) {\n        $closest_vowel = $word[$closest_vowel_index];\n    }\n    return\
    \ $closest_vowel;", "    $vowels = \"aeiouAEIOU\";\n    $word = strrev($word);\n\
    \    $vowel_index = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n      \
    \  if (strpos($vowels, $word[$i]) !== false) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index == -1) {\n       \
    \ return \"\";\n    }\n    $consonant_index = -1;\n    for ($i = $vowel_index\
    \ + 1; $i < strlen($word); $i++) {\n        if (strpos($vowels, $word[$i]) ===\
    \ false) {\n            $consonant_index = $i;\n            break;\n        }\n\
    \    }\n    if ($consonant_index == -1) {\n        return \"\";\n    }\n    return\
    \ $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_array_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_index_array = [];\n    $consonant_index_array\
    \ = [];\n    for ($i = 0; $i < $word_array_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index_array[] = $i;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index_array[] = $i;\n        }\n   \
    \ }\n    $vowel_index_array_length = count($vowel_index_array);\n    $consonant_index_array_length\
    \ = count($consonant_index_array);\n    $vowel_index = $vowel_index_array[$vowel_index_array_length\
    \ - 1];\n    $consonant_index = $consonant_index_array[$consonant_index_array_length\
    \ - 1];\n    if ($vowel_index > $consonant_index) {\n        return $word_array[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n\
    \    $closest_vowel_distance = $word_length;\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $closest_vowel_index = $i;\n            break;\n \
    \       }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n\
    \    }\n    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel_distance = $closest_vowel_index - $i;\n\
    \            break;\n        }\n    }\n    for ($i = $closest_vowel_index + 1;\
    \ $i < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n \
    \           $closest_vowel_distance = min($closest_vowel_distance, $i - $closest_vowel_index);\n\
    \            break;\n        }\n    }\n    if ($closest_vowel_distance == $word_length)\
    \ {\n        return \"\";\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length\
    \ - 1) {\n                return \"\";\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split($word);\n    $vowel_index = [];\n    $consonant_index =\
    \ [];\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index[] = $i;\n        } else {\n          \
    \  $consonant_index[] = $i;\n        }\n    }\n    $result = [];\n    for ($i\
    \ = 0; $i < count($vowel_index); $i++) {\n        for ($j = 0; $j < count($consonant_index);\
    \ $j++) {\n            if ($vowel_index[$i] > $consonant_index[$j]) {\n      \
    \          $result[] = $vowel_index[$i] - $consonant_index[$j];\n            }\n\
    \        }\n    }\n    if (count($result) == 0) {\n        return \"\";\n    }\n\
    \    $min = min($result);\n    $index = array_search($min, $result);\n    return\
    \ $word[$vowel_index[$index]];\n}\n", "    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word\
    \ = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index = 0;\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_found = false;\n\
    \    foreach ($word as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $vowel_count++;\n            if ($vowel_count == 2) {\n     \
    \           $vowel_found = true;\n                break;\n            }\n    \
    \    } else {\n            $consonant_count++;\n        }\n    }\n    if ($vowel_found)\
    \ {\n        $vowel_index = $key;\n    }\n    $vowel_index = $consonant_count\
    \ - $vowel_index;\n    if ($vowel_index < 0) {\n        return '';\n    }\n  \
    \  return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\");\necho\
    \ get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $result = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == 0) {\n          \
    \      $result = '';\n                break;\n            }\n            if (in_array($word[$i\
    \ - 1], $consonants)) {\n                $result = $word[$i];\n              \
    \  break;\n            }\n        }\n    }\n    return $result;\n}\n", "    $vowels\
    \ = \"aeiouAEIOU\";\n    $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        $char = $word[$i];\n\
    \        if (strpos($vowels, $char) !== false) {\n            $closest_vowel =\
    \ $char;\n            $closest_vowel_index = $i;\n            break;\n       \
    \ }\n    }\n    if ($closest_vowel_index == -1) {\n        return \"\";\n    }\n\
    \    for ($i = $closest_vowel_index - 1; $i >= 0; $i--) {\n        $char = $word[$i];\n\
    \        if (strpos($consonants, $char) !== false) {\n            return $closest_vowel;\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    $closest_consonant_index = 0;\n    $closest_consonant_index_2 = 0;\n\
    \    for ($i = 0; $i < $word_len; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $closest_vowel_index = $i;\n            break;\n        }\n \
    \   }\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $closest_consonant_index = $i;\n            break;\n\
    \        }\n    }\n    for ($i = $closest_vowel_index; $i < $word_len; $i++) {\n\
    \        if (in_array($word[$i], $consonants)) {\n            $closest_consonant_index_2\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_consonant_index_2\
    \ > $closest_consonant_index) {\n        $closest_vowel = $word[$closest_vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") .", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants =\
    \ array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $result = '';\n    $last_vowel_index = 0;\n    $last_consonant_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $last_vowel_index = $i;\n            break;\n     \
    \   }\n    }\n    for ($i = $last_vowel_index - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $consonants)) {\n            $last_consonant_index = $i;\n\
    \            break;\n        }\n    }\n    if ($last_vowel_index > $last_consonant_index)\
    \ {\n        $result = $word[$last_vowel_index];\n    }\n    return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n        }\n        if ($vowel_found && $consonant_found) {\n      \
    \      if ($vowel_index < $consonant_index) {\n                return $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $vowel_index = -1;\n    $consonant_index\
    \ = -1;\n    $closest_vowel = \"\";\n    for ($i = $word_length - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n  \
    \          $consonant_index = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_index != -1 && $consonant_index != -1) {\n        $closest_vowel = $word_array[$vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $closest_vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\n", "   \
    \ $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $word = strtolower($word);\n    $length = strlen($word);\n \
    \   $i = $length - 1;\n    $vowel = \"\";\n    while ($i > 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (!in_array($word[$i - 1], $vowels)) {\n        \
    \        $vowel = $word[$i];\n                break;\n            }\n        }\n\
    \        $i--;\n    }\n    return $vowel;\n}\n", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance > $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $vowel_distance;\n            \
    \    $closest_vowel_index = $vowel_index;\n                $closest_vowel = $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n   \
    \ for ($i = 0; $i < $word_length; $i++) {\n        $current_letter = $word[$i];\n\
    \        if (in_array($current_letter, $vowels)) {\n            $closest_vowel\
    \ = $current_letter;\n            $closest_vowel_index = $i;\n            $closest_vowel_distance\
    \ = 0;\n            for ($j = $i - 1; $j >= 0; $j--) {\n                $previous_letter\
    \ = $word[$j];\n                if (in_array($previous_letter, $consonants)) {\n\
    \                    $closest_vowel_distance = $i - $j;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    if ($closest_vowel_distance\
    \ == 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index + 1;\
    \ $i < $word_length; $i++) {\n        $current_letter = $word[$i];\n        if\
    \ (in_array($current_letter, $vowels)) {\n            $current_vowel_distance\
    \ = $i - $closest_vowel_index;\n            if ($current_vowel_distance < $closest_vowel_distance)\
    \ {\n                $closest_vowel = $current_letter;\n                $closest_vowel_distance",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if ($i > 0 && !in_array($word[$i\
    \ - 1], $vowels)) {\n                if ($i < $closest_vowel_index) {\n      \
    \              $closest_vowel_index = $i;\n                    $closest_vowel\
    \ = $word[$i];\n                }\n            }\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $result\
    \ = \"\";\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            break;\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $result = \"\";\n    $count = 0;\n    $i = count($word) - 1;\n    while ($i\
    \ >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            if ($count\
    \ == 2) {\n                $result = $word[$i];\n                break;\n    \
    \        }\n            $count = 0;\n        } else {\n            $count++;\n\
    \        }\n        $i--;\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = array();\n    $consonant_index\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            array_push($vowel_index, $i);\n        } else {\n \
    \           array_push($consonant_index, $i);\n        }\n    }\n    if (count($vowel_index)\
    \ == 0 || count($consonant_index) == 0) {\n        return \"\";\n    }\n    $closest_vowel\
    \ = \"\";\n    $closest_distance = 0;\n    for ($i = 0; $i < count($vowel_index);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_index); $j++) {\n      \
    \      if ($vowel_index[$i] > $consonant_index[$j]) {\n                $distance\
    \ = $vowel_index[$i] - $consonant_index[$j];\n                if ($closest_distance\
    \ == 0 || $distance < $closest_distance) {\n                    $closest_distance\
    \ = $distance;\n                    $closest_vowel = $word[$vowel_index[$i]];\n\
    \                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n\
    \    $vowel_index_temp = 0;\n    $vowel_found = false;\n    $vowel_found_temp\
    \ = false;\n    $word_length = strlen($word);\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_found_temp\
    \ = true;\n            $vowel_index_temp = $i;\n            $vowel_distance_temp\
    \ = $word_length - $i;\n        }\n        if ($vowel_found_temp && !in_array($word[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            if ($vowel_distance_temp\
    \ > $vowel_distance) {\n                $vowel_distance = $vowel_distance_temp;\n\
    \                $vowel_index = $vowel_index_temp;\n            }\n          \
    \  $vowel_found_temp = false;\n        }\n    }\n    if ($vowel_found) {\n   \
    \     return $word[$vowel_index];\n    } else {\n        return '';\n    }\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word\
    \ = str_split($word);\n    $word = array_reverse($word);\n    $result = '';\n\
    \    $count = 0;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $count++;\n            if ($count == 2) {\n       \
    \         $result = $word[$i];\n                break;\n            }\n      \
    \  } else {\n            $count = 0;\n        }\n    }\n    return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\"\
    ;\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = 0;\n            for ($j = $i; $j\
    \ < $word_length; $j++) {\n                if (in_array($word[$j], $consonants))\
    \ {\n                    $vowel_distance++;\n                } else {\n      \
    \              break;\n                }\n            }\n            if ($vowel_distance\
    \ > 0 && ($closest_vowel_distance == 0 || $vowel_distance < $closest_vowel_distance))\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                return $word[$vowel_index];\n            }\n        }\n \
    \   }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index = 0;\n\
    \    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found =\
    \ false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        if ($vowel_index\
    \ > $consonant_index) {\n            return $word[$vowel_index];\n        }\n\
    \    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_array_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           if ($i == $word_array_length - 1) {\n                if (in_array($word_array[$i\
    \ - 1], $vowels)) {\n                    continue;\n                } else {\n\
    \                    $closest_vowel = $word_array[$i];\n                    $closest_vowel_index\
    \ = $i;\n                    break;\n                }\n            } else {\n\
    \                if (in_array($word_array[$i - 1], $vowels)) {\n             \
    \       continue;\n                } else {\n                    $closest_vowel\
    \ = $word_array[$i];\n                    $closest_vowel_index = $i;\n       \
    \             break;\n                }\n            }\n        }\n    }\n   \
    \ return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\t$word_length\
    \ = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$closest_vowel\
    \ = \"\";\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\tfor ($i = $vowel_index - 1; $i > 0; $i--)\
    \ {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance = $vowel_index\
    \ - $i;\n\t\t\t$closest_vowel = $word[$vowel_index];\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\tif ($closest_vowel == \"\") {\n\t\treturn \"\";\n\t}\n\tfor ($i = $vowel_index\
    \ - 1; $i > 0; $i--) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\tif ($vowel_index\
    \ - $i < $vowel_distance) {\n\t\t\t\t$vowel_distance = $vowel_index - $i;\n\t\t\
    \t\t$closest_vowel = $word[$vowel_index];\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\")", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $vowel_pos = 0;\n    $consonant_pos = 0;\n\
    \    $closest_vowel = '';\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_pos = $i;\n    \
    \        break;\n        }\n    }\n    for ($i = $vowel_pos - 1; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_pos\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_pos > $consonant_pos)\
    \ {\n        $closest_vowel = $word[$vowel_pos];\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $closest_vowel = \"\";\n    for ($i\
    \ = $word_length - 1; $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels))\
    \ {\n            if (!in_array($word_array[$i - 1], $vowels)) {\n            \
    \    $closest_vowel = $word_array[$i];\n                break;\n            }\n\
    \        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    $vowel_distance = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            if ($i - $vowel_index < $vowel_distance) {\n      \
    \          $vowel_distance = $i - $vowel_index;\n                $vowel_index\
    \ = $i - 1;\n            }\n        }\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word_array = str_split($word);\n\
    \    $word_array_reverse = array_reverse($word_array);\n    $vowel_index = 0;\n\
    \    $vowel_found = false;\n    for ($i = 0; $i < count($word_array_reverse);\
    \ $i++) {\n        if (in_array($word_array_reverse[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index + 1;\
    \ $i < count($word_array_reverse); $i++) {\n            if (!in_array($word_array_reverse[$i],\
    \ $vowels)) {\n                return $word_array_reverse[$vowel_index];\n   \
    \         }\n        }\n    }\n    return \"\";\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n   \
    \ $word_length = strlen($word);\n    $vowel_position = 0;\n    $vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $vowel_distance) {\n                       \
    \ $vowel_distance = $i;\n                        $vowel_position = $i;\n     \
    \               }\n                }\n            }\n        }\n    }\n    if\
    \ ($vowel_position > 0) {\n        return $word[$vowel_position];\n    } else\
    \ {\n        return \"\";\n    }\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $closest_vowel = $word[$i];\n            $closest_vowel_index = $i;\n  \
    \          break;\n        }\n    }\n    if ($closest_vowel_index == -1) {\n \
    \       return \"\";\n    }\n    for ($i = $closest_vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $closest_vowel;\n\
    \        }\n    }\n    return \"\";\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

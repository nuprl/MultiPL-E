language: php
name: HumanEval_65_circular_shift
results:
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $first_part = substr($x_str, $shift);\n\
    \    $second_part = substr($x_str, 0, $shift);\n    return $first_part . $second_part;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t32kcju.php:25\n\
    Stack trace:\n#0 /tmp/tmp4t32kcju.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4t32kcju.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $a = substr($x, 0, $len - $shift);\n  $b = substr($x, $len\
    \ - $shift);\n  return $b . $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $a = substr($x, 0, $len - $shift);\n  $b = substr($x, $len\
    \ - $shift);\n  return $b . $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpin7dy5wf.php:26\n\
    Stack trace:\n#0 /tmp/tmpin7dy5wf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpin7dy5wf.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift >= $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcge2rfgc.php:24\n\
    Stack trace:\n#0 /tmp/tmpcge2rfgc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcge2rfgc.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift,\
    \ $x_len - $shift);\n    $x_shift .= substr($x_str, 0, $shift);\n    return $x_shift;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7a3btg_.php:25\n\
    Stack trace:\n#0 /tmp/tmpr7a3btg_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr7a3btg_.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqw2nbr7.php:24\n\
    Stack trace:\n#0 /tmp/tmpjqw2nbr7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjqw2nbr7.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcfpkur8.php:24\n\
    Stack trace:\n#0 /tmp/tmppcfpkur8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppcfpkur8.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xu3l96v.php:23\n\
    Stack trace:\n#0 /tmp/tmp8xu3l96v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8xu3l96v.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $left = array_slice($digits, 0, $shift);\n    $right = array_slice($digits,\
    \ $shift);\n    return implode('', array_merge($right, $left));\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsklyvdgd.php:25\n\
    Stack trace:\n#0 /tmp/tmpsklyvdgd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsklyvdgd.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_shift;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2er05gkg.php:24\n\
    Stack trace:\n#0 /tmp/tmp2er05gkg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2er05gkg.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    $result = array_slice($digits,\
    \ $shift);\n    $result = array_merge($result, array_slice($digits, 0, $shift));\n\
    \    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9v8kurz.php:26\n\
    Stack trace:\n#0 /tmp/tmpt9v8kurz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt9v8kurz.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    } else {\n        return substr($x_str,\
    \ $shift) . substr($x_str, 0, $shift);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sknx9nb.php:24\n\
    Stack trace:\n#0 /tmp/tmp4sknx9nb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4sknx9nb.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $y .=\
    \ substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr_shifted = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr_shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd95xzls.php:25\n\
    Stack trace:\n#0 /tmp/tmpmd95xzls.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmd95xzls.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s6it25d.php:24\n\
    Stack trace:\n#0 /tmp/tmp8s6it25d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8s6it25d.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $left = array_slice($digits, $shift);\n    $right = array_slice($digits,\
    \ 0, $shift);\n    return implode($left) . implode($right);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpren7yrka.php:25\n\
    Stack trace:\n#0 /tmp/tmpren7yrka.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpren7yrka.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrkpy1x9.php:25\n\
    Stack trace:\n#0 /tmp/tmpnrkpy1x9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnrkpy1x9.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotsv2x7s.php:22\n\
    Stack trace:\n#0 /tmp/tmpotsv2x7s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpotsv2x7s.php\
    \ on line 22\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $right = substr($x, 0, $len - $shift);\n\
    \    $left = substr($x, $len - $shift);\n    return $left . $right;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $result = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($result);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl42qmcg.php:24\n\
    Stack trace:\n#0 /tmp/tmpfl42qmcg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfl42qmcg.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv81lafa8.php:24\n\
    Stack trace:\n#0 /tmp/tmpv81lafa8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv81lafa8.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $n = count($digits);\n  if ($shift > $n) {\n  \
    \  return implode('', array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8zng25e.php:25\n\
    Stack trace:\n#0 /tmp/tmpr8zng25e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr8zng25e.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8cg3kbi.php:25\n\
    Stack trace:\n#0 /tmp/tmpu8cg3kbi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu8cg3kbi.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $y = substr($x, $len - $shift);\n  $y .= substr($x, 0, $len\
    \ - $shift);\n  return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_shift;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu0e7z05.php:24\n\
    Stack trace:\n#0 /tmp/tmpgu0e7z05.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgu0e7z05.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift === 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uaid5zr.php:24\n\
    Stack trace:\n#0 /tmp/tmp2uaid5zr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2uaid5zr.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cxv323l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0cxv323l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0cxv323l.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_shifted = substr($x_str,\
    \ $shift) . substr($x_str, 0, $shift);\n    return $x_str_shifted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_z7537pt.php:24\n\
    Stack trace:\n#0 /tmp/tmp_z7537pt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_z7537pt.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    $x = substr($x, $shift)\
    \ . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam_d1aer.php:25\n\
    Stack trace:\n#0 /tmp/tmpam_d1aer.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpam_d1aer.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift >= $len)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $left = array_slice($digits,\
    \ $shift);\n    $right = array_slice($digits, 0, $shift);\n    return implode($left)\
    \ . implode($right);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75kjze4.php:25\n\
    Stack trace:\n#0 /tmp/tmpw75kjze4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw75kjze4.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        $digits = array_reverse($digits);\n    } else {\n\
    \        for ($i = 0; $i < $shift; $i++) {\n            $last = array_pop($digits);\n\
    \            array_unshift($digits, $last);\n        }\n    }\n    return implode('',\
    \ $digits);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $a = substr($x, $shift);\n  $b = substr($x, 0, $shift);\n\
    \  return $a . $b;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp942_3edx.php:25\n\
    Stack trace:\n#0 /tmp/tmp942_3edx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp942_3edx.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cxv323l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0cxv323l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0cxv323l.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrkpy1x9.php:25\n\
    Stack trace:\n#0 /tmp/tmpnrkpy1x9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnrkpy1x9.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $s = strval($x);\n    $n = strlen($s);\n    $shift = $shift % $n;\n    if\
    \ ($shift == 0) {\n        return $s;\n    }\n    return substr($s, $shift) .\
    \ substr($s, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxd3bsjn2.php:24\n\
    Stack trace:\n#0 /tmp/tmpxd3bsjn2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxd3bsjn2.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string) $x;\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $right = substr($x_str, $len -\
    \ $shift);\n    $left = substr($x_str, 0, $len - $shift);\n    return $right .\
    \ $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    if ($shift > strlen($x))\
    \ {\n        return strrev($x);\n    }\n    return substr($x, $shift) . substr($x,\
    \ 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtnrr5z0.php:23\n\
    Stack trace:\n#0 /tmp/tmpdtnrr5z0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdtnrr5z0.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, $shift);\n    $b = substr($x,\
    \ 0, $shift);\n    return $a . $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7nsarpl.php:25\n\
    Stack trace:\n#0 /tmp/tmpi7nsarpl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi7nsarpl.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9fs2ih1.php:24\n\
    Stack trace:\n#0 /tmp/tmpp9fs2ih1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp9fs2ih1.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb2z7bd9.php:25\n\
    Stack trace:\n#0 /tmp/tmpxb2z7bd9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxb2z7bd9.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $num_digits = count($digits);\n  if ($shift > $num_digits)\
    \ {\n    return implode('', array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48v2nhfe.php:25\n\
    Stack trace:\n#0 /tmp/tmp48v2nhfe.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp48v2nhfe.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixdn6omg.php:26\n\
    Stack trace:\n#0 /tmp/tmpixdn6omg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpixdn6omg.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $s = (string)$x;\n    $n = strlen($s);\n    if ($shift >= $n) {\n       \
    \ return strrev($s);\n    }\n    $s1 = substr($s, 0, $shift);\n    $s2 = substr($s,\
    \ $shift);\n    return $s2 . $s1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgk2bo6bn.php:25\n\
    Stack trace:\n#0 /tmp/tmpgk2bo6bn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgk2bo6bn.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = (string)$x;\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cegwkos.php:24\n\
    Stack trace:\n#0 /tmp/tmp7cegwkos.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7cegwkos.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08k6vs58.php:24\n\
    Stack trace:\n#0 /tmp/tmp08k6vs58.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp08k6vs58.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8cg3kbi.php:25\n\
    Stack trace:\n#0 /tmp/tmpu8cg3kbi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu8cg3kbi.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift, $len - $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8w2ws2o9.php:26\n\
    Stack trace:\n#0 /tmp/tmp8w2ws2o9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8w2ws2o9.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, $shift);\n    $b = substr($x,\
    \ 0, $shift);\n    return $a . $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7nsarpl.php:25\n\
    Stack trace:\n#0 /tmp/tmpi7nsarpl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi7nsarpl.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv81lafa8.php:24\n\
    Stack trace:\n#0 /tmp/tmpv81lafa8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv81lafa8.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $len\
    \ - $shift);\n    $x_str = substr($x_str, 0, $len - $shift);\n    return $shift_str\
    \ . $x_str;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift, $len);\n    $z = substr($x, 0, $shift);\n    return $y . $z;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzpcl5d9.php:26\n\
    Stack trace:\n#0 /tmp/tmpfzpcl5d9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfzpcl5d9.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $left = substr($x, 0, $len - $shift);\n  $right = substr($x,\
    \ $len - $shift);\n  return $right . $left;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpduzo6p.php:26\n\
    Stack trace:\n#0 /tmp/tmpkpduzo6p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkpduzo6p.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    } else {\n        return substr($x_str,\
    \ $shift) . substr($x_str, 0, $shift);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqe37rlse.php:24\n\
    Stack trace:\n#0 /tmp/tmpqe37rlse.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqe37rlse.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  return substr($x, $shift) . substr($x, 0, $shift);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g310iqe.php:23\n\
    Stack trace:\n#0 /tmp/tmp2g310iqe.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2g310iqe.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $digits = array_reverse($digits);\n  $digits =\
    \ array_pad($digits, $shift, 0);\n  $digits = array_reverse($digits);\n  $digits\
    \ = array_slice($digits, 0, $shift);\n  return implode('', $digits);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkg03l214.php:23\n\
    Stack trace:\n#0 /tmp/tmpkg03l214.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkg03l214.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $first = substr($x, 0, $len - $shift);\n  $second = substr($x,\
    \ $len - $shift);\n  return $second . $first;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_str_len = strlen($x_str);\n    if ($shift >=\
    \ $x_str_len) {\n        return strrev($x_str);\n    }\n    $x_str_left = substr($x_str,\
    \ 0, $shift);\n    $x_str_right = substr($x_str, $shift);\n    return $x_str_right\
    \ . $x_str_left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrdnlvzc.php:25\n\
    Stack trace:\n#0 /tmp/tmphrdnlvzc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphrdnlvzc.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = strval($x);\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $first = substr($x, 0, $len - $shift);\n  $last = substr($x,\
    \ $len - $shift);\n  return $last . $first;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpployfoms.php:26\n\
    Stack trace:\n#0 /tmp/tmpployfoms.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpployfoms.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn55v6wz.php:24\n\
    Stack trace:\n#0 /tmp/tmprn55v6wz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprn55v6wz.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a9bq42e.php:24\n\
    Stack trace:\n#0 /tmp/tmp1a9bq42e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1a9bq42e.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $last = substr($x, $len - $shift);\n    return $last . $first;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqy42_51w.php:25\n\
    Stack trace:\n#0 /tmp/tmpqy42_51w.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqy42_51w.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $digits = strlen($x);\n\
    \    if ($shift > $digits) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift, $digits - $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7mc9msc.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7mc9msc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo7mc9msc.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $count = count($digits);\n    if ($shift >\
    \ $count) {\n        return implode('', array_reverse($digits));\n    }\n    $result\
    \ = array_slice($digits, $shift);\n    $result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcstxdu9.php:25\n\
    Stack trace:\n#0 /tmp/tmpkcstxdu9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkcstxdu9.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $result = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($result);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl42qmcg.php:24\n\
    Stack trace:\n#0 /tmp/tmpfl42qmcg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfl42qmcg.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift > $len)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmqan8qy.php:25\n\
    Stack trace:\n#0 /tmp/tmpsmqan8qy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsmqan8qy.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $len = count($digits);\n  $shift = $shift % $len;\n\
    \  if ($shift == 0) {\n    return $x;\n  }\n  $left = array_slice($digits, $shift);\n\
    \  $right = array_slice($digits, 0, $shift);\n  return implode('', array_merge($left,\
    \ $right));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7a47b9b.php:26\n\
    Stack trace:\n#0 /tmp/tmpt7a47b9b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt7a47b9b.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  return substr($x, $len - $shift) . substr($x, 0, $len -\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc70jt9k3.php:24\n\
    Stack trace:\n#0 /tmp/tmpc70jt9k3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc70jt9k3.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x_str = strval($x);\n  $x_len = strlen($x_str);\n  if ($shift > $x_len) {\n\
    \    return strrev($x_str);\n  }\n  $x_str_rev = strrev($x_str);\n  $x_str_rev_shifted\
    \ = substr($x_str_rev, 0, $shift);\n  $x_str_rev_unshifted = substr($x_str_rev,\
    \ $shift);\n  return strrev($x_str_rev_unshifted . $x_str_rev_shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqch6rat.php:25\n\
    Stack trace:\n#0 /tmp/tmpsqch6rat.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsqch6rat.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a9bq42e.php:24\n\
    Stack trace:\n#0 /tmp/tmp1a9bq42e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1a9bq42e.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqw2nbr7.php:24\n\
    Stack trace:\n#0 /tmp/tmpjqw2nbr7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjqw2nbr7.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  $digits = array_slice($digits, 0, $shift);\n    return implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagqotyt1.php:23\n\
    Stack trace:\n#0 /tmp/tmpagqotyt1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpagqotyt1.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg275smds.php:24\n\
    Stack trace:\n#0 /tmp/tmpg275smds.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg275smds.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $right = substr($x, 0, $len - $shift);\n\
    \    $left = substr($x, $len - $shift);\n    return $left . $right;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbyi2ozeg.php:26\n\
    Stack trace:\n#0 /tmp/tmpbyi2ozeg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbyi2ozeg.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $num_digits = count($digits);\n  if ($shift > $num_digits)\
    \ {\n    return implode(array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmez7zms.php:25\n\
    Stack trace:\n#0 /tmp/tmpqmez7zms.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqmez7zms.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   $shift = $shift % $len;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $x = substr($x, $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtrgg0p_.php:26\n\
    Stack trace:\n#0 /tmp/tmpdtrgg0p_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdtrgg0p_.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_len = count($digits);\n    if ($shift\
    \ >= $digits_len) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $right = array_slice($digits, $shift);\n    $left = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($right, $left));\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dkl_glg.php:25\n\
    Stack trace:\n#0 /tmp/tmp8dkl_glg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8dkl_glg.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_shift;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk10s92p.php:24\n\
    Stack trace:\n#0 /tmp/tmpkk10s92p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkk10s92p.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8cg3kbi.php:25\n\
    Stack trace:\n#0 /tmp/tmpu8cg3kbi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu8cg3kbi.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $result = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($result);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhd2odeu.php:24\n\
    Stack trace:\n#0 /tmp/tmphhd2odeu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphhd2odeu.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted_digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q5a_low.php:25\n\
    Stack trace:\n#0 /tmp/tmp7q5a_low.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7q5a_low.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_first = substr($x_str,\
    \ 0, $shift);\n    $x_str_last = substr($x_str, $shift);\n    return $x_str_last\
    \ . $x_str_first;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw5yje1r.php:25\n\
    Stack trace:\n#0 /tmp/tmphw5yje1r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphw5yje1r.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpls1e5_b7.php:24\n\
    Stack trace:\n#0 /tmp/tmpls1e5_b7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpls1e5_b7.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $len = strlen($x_str);\n    if ($shift >= $len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $shift);\n\
    \    $shift_str .= substr($x_str, 0, $shift);\n    return $shift_str;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6802ekuq.php:25\n\
    Stack trace:\n#0 /tmp/tmp6802ekuq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6802ekuq.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    $x = substr($x, $len - $shift) . substr($x, 0, $len - $shift);\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplywvk_lu.php:24\n\
    Stack trace:\n#0 /tmp/tmplywvk_lu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplywvk_lu.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a9bq42e.php:24\n\
    Stack trace:\n#0 /tmp/tmp1a9bq42e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1a9bq42e.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rnaivze.php:24\n\
    Stack trace:\n#0 /tmp/tmp8rnaivze.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8rnaivze.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrn67d_2.php:25\n\
    Stack trace:\n#0 /tmp/tmpjrn67d_2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjrn67d_2.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $n = count($digits);\n  if ($shift >= $n) {\n \
    \   return implode(array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwbxz1y_.php:25\n\
    Stack trace:\n#0 /tmp/tmphwbxz1y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphwbxz1y_.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift >= $len)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q3gzq1c.php:25\n\
    Stack trace:\n#0 /tmp/tmp2q3gzq1c.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2q3gzq1c.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $shift);\n\
    \    $shift_str .= substr($x_str, 0, $shift);\n    return $shift_str;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni6bnl2y.php:25\n\
    Stack trace:\n#0 /tmp/tmpni6bnl2y.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpni6bnl2y.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = strval($x);\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $x = substr($x, $shift) . substr($x, 0, $shift);\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug84atem.php:24\n\
    Stack trace:\n#0 /tmp/tmpug84atem.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpug84atem.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $y .=\
    \ substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $right = substr($x,\
    \ 0, $len - $shift);\n    $left = substr($x, $len - $shift);\n    return $left\
    \ . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $right =\
    \ array_slice($digits, $shift);\n    $left = array_slice($digits, 0, $shift);\n\
    \    return implode('', array_merge($right, $left));\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpep3ka544.php:25\n\
    Stack trace:\n#0 /tmp/tmpep3ka544.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpep3ka544.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cxv323l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0cxv323l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0cxv323l.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift);\n    $y .= substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5lig5ws.php:25\n\
    Stack trace:\n#0 /tmp/tmpb5lig5ws.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb5lig5ws.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaft0slga.php:27\n\
    Stack trace:\n#0 /tmp/tmpaft0slga.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaft0slga.php\
    \ on line 27\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqch6rat.php:25\n\
    Stack trace:\n#0 /tmp/tmpsqch6rat.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsqch6rat.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $x = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvosrzumr.php:25\n\
    Stack trace:\n#0 /tmp/tmpvosrzumr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvosrzumr.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xu3l96v.php:23\n\
    Stack trace:\n#0 /tmp/tmp8xu3l96v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8xu3l96v.php\
    \ on line 23\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp862jaazm.php:24\n\
    Stack trace:\n#0 /tmp/tmp862jaazm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp862jaazm.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $y .=\
    \ substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8cg3kbi.php:25\n\
    Stack trace:\n#0 /tmp/tmpu8cg3kbi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu8cg3kbi.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbvixued.php:26\n\
    Stack trace:\n#0 /tmp/tmpqbvixued.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbvixued.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_shift;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu0e7z05.php:24\n\
    Stack trace:\n#0 /tmp/tmpgu0e7z05.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgu0e7z05.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg2m_13e.php:24\n\
    Stack trace:\n#0 /tmp/tmplg2m_13e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplg2m_13e.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $y = substr($x, $shift);\n  $y .= substr($x, 0, $shift);\n\
    \  return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqs9y5ak.php:25\n\
    Stack trace:\n#0 /tmp/tmpuqs9y5ak.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuqs9y5ak.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_len = count($digits);\n    if ($shift\
    \ > $digits_len) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkhi1siu.php:25\n\
    Stack trace:\n#0 /tmp/tmpkkhi1siu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkkhi1siu.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqw2nbr7.php:24\n\
    Stack trace:\n#0 /tmp/tmpjqw2nbr7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjqw2nbr7.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_len = count($digits);\n    if ($shift\
    \ >= $digits_len) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wx4vaol.php:25\n\
    Stack trace:\n#0 /tmp/tmp_wx4vaol.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_wx4vaol.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsxuzfa3.php:26\n\
    Stack trace:\n#0 /tmp/tmpqsxuzfa3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqsxuzfa3.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode(array_reverse($digits));\n    }\n \
    \   $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wq0rlyu.php:25\n\
    Stack trace:\n#0 /tmp/tmp3wq0rlyu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3wq0rlyu.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9cf3dta.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9cf3dta.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj9cf3dta.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg275smds.php:24\n\
    Stack trace:\n#0 /tmp/tmpg275smds.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg275smds.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_len = count($digits);\n    $shift =\
    \ $shift % $digits_len;\n    if ($shift == 0) {\n        return $x;\n    }\n \
    \   $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhk_fa89.php:26\n\
    Stack trace:\n#0 /tmp/tmpjhk_fa89.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjhk_fa89.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn55v6wz.php:24\n\
    Stack trace:\n#0 /tmp/tmprn55v6wz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprn55v6wz.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    $digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3s9doryc.php:22\n\
    Stack trace:\n#0 /tmp/tmp3s9doryc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3s9doryc.php\
    \ on line 22\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjsorpw1.php:25\n\
    Stack trace:\n#0 /tmp/tmptjsorpw1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptjsorpw1.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $digits_len = count($digits);\n  if ($shift > $digits_len)\
    \ {\n    return implode('', array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugh7t2fi.php:25\n\
    Stack trace:\n#0 /tmp/tmpugh7t2fi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpugh7t2fi.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    } else {\n        return substr($x_str,\
    \ $shift) . substr($x_str, 0, $shift);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqe37rlse.php:24\n\
    Stack trace:\n#0 /tmp/tmpqe37rlse.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqe37rlse.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10ibvle3.php:25\n\
    Stack trace:\n#0 /tmp/tmp10ibvle3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp10ibvle3.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift);\n    $z = substr($x, 0, $shift);\n    return $y . $z;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnues83y.php:26\n\
    Stack trace:\n#0 /tmp/tmpfnues83y.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfnues83y.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cxv323l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0cxv323l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0cxv323l.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted_digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14zmr9df.php:25\n\
    Stack trace:\n#0 /tmp/tmp14zmr9df.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp14zmr9df.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode('', array_reverse($digits));\n  \
    \  }\n    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits\
    \ = array_merge($shifted_digits, array_slice($digits, 0, $shift));\n    return\
    \ implode('', $shifted_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdix05xu.php:25\n\
    Stack trace:\n#0 /tmp/tmpbdix05xu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbdix05xu.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a9bq42e.php:24\n\
    Stack trace:\n#0 /tmp/tmp1a9bq42e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1a9bq42e.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $length = strlen($x);\n    if ($shift >= $length)\
    \ {\n        return strrev($x);\n    }\n    $left = substr($x, 0, $shift);\n \
    \   $right = substr($x, $shift);\n    return $right . $left;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgyw46m49.php:25\n\
    Stack trace:\n#0 /tmp/tmpgyw46m49.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgyw46m49.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    $shift\
    \ = $shift % $digits_count;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxeot9o2.php:25\n\
    Stack trace:\n#0 /tmp/tmphxeot9o2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphxeot9o2.php\
    \ on line 25\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqw2nbr7.php:24\n\
    Stack trace:\n#0 /tmp/tmpjqw2nbr7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjqw2nbr7.php\
    \ on line 24\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    for ($i = 0; $i < $shift; $i++) {\n        $x_str_arr[] = array_shift($x_str_arr);\n\
    \    }\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_87yp7lb.php:27\n\
    Stack trace:\n#0 /tmp/tmp_87yp7lb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_87yp7lb.php\
    \ on line 27\n"
  timestamp: 1659730748

language: php
name: HumanEval_125_split_words
results:
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphw_ya0_v.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', '', $txt);\n    $txt = strtolower($txt);\n    $txt = preg_replace('/\\s+/',\
    \ ',', $txt);\n    $txt = preg_replace('/[^a-zA-Z0-9,]/', '', $txt);\n    $txt\
    \ = preg_replace('/[^a-zA-Z0-9]/', '', $txt);\n    $txt = preg_replace('/[^a-zA-Z]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a-z]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '', $txt);\n    $txt = preg_replace('/[^a]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a]/', '',\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm5s7hxdu.php on line 36

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3cljyuc.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(',', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n \
    \   $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9xkxgzd3.php on line 46

    '
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5s4imug.php:40\n\
    Stack trace:\n#0 /tmp/tmph5s4imug.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph5s4imug.php\
    \ on line 40\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = explode(',',\
    \ $txt);\n    $odd = 0;\n    foreach ($txt as $word) {\n        if (strlen($word)\
    \ % 2 != 0) {\n            $odd++;\n        }\n    }\n    return $odd;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoblo670.php:30\n\
    Stack trace:\n#0 /tmp/tmppoblo670.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppoblo670.php\
    \ on line 30\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', '', $txt);\n    $txt = strtolower($txt);\n    $txt = explode(' ', $txt);\n\
    \    $count = 0;\n    foreach ($txt as $key => $value) {\n        if (strlen($value)\
    \ % 2 != 0) {\n            $count++;\n        }\n    }\n    if ($count == 0) {\n\
    \        return $count;\n    } else {\n        return $txt;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dydtwu3.php:36\n\
    Stack trace:\n#0 /tmp/tmp3dydtwu3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3dydtwu3.php\
    \ on line 36\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qoykf8j.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qoykf8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2qoykf8j.php\
    \ on line 38\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n \
    \   $txt = explode(' ', $txt);\n    if (count($txt) == 1) {\n        $txt = str_split($txt[0]);\n\
    \        $count = 0;\n        foreach ($txt as $key => $value) {\n           \
    \ if ($key % 2 == 0) {\n                $count++;\n            }\n        }\n\
    \        return $count;\n    }\n    return $txt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5x5d6qp.php:37\n\
    Stack trace:\n#0 /tmp/tmpp5x5d6qp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp5x5d6qp.php\
    \ on line 37\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n \
    \   $arr = explode(' ', $txt);\n    if (count($arr) > 1) {\n        return $arr;\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n  \
    \          }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9m7a10a.php:37\n\
    Stack trace:\n#0 /tmp/tmpo9m7a10a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo9m7a10a.php\
    \ on line 37\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n\
    \    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n        if\
    \ (count($arr) == 1) {\n            $count = 0;\n            for ($i = 0; $i <\
    \ strlen($txt); $i++) {\n                if ((ord($txt[$i]) - ord('a')) % 2 ==\
    \ 1) {\n                    $count++;\n                }\n            }\n    \
    \        return $count;\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_ojwgnt.php:33\n\
    Stack trace:\n#0 /tmp/tmpn_ojwgnt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn_ojwgnt.php\
    \ on line 33\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3cljyuc.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } else if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        $count =\
    \ 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2\
    \ == 0 && ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrm7s25c.php:39\n\
    Stack trace:\n#0 /tmp/tmpsrm7s25c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsrm7s25c.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n\
    \    if (count($arr) > 1) {\n        return $arr;\n    }\n    $arr = explode(\"\
    ,\", $txt);\n    if (count($arr) > 1) {\n        return $arr;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww9m7109.php:40\n\
    Stack trace:\n#0 /tmp/tmpww9m7109.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpww9m7109.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qmlwjo0.php:39\n\
    Stack trace:\n#0 /tmp/tmp5qmlwjo0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5qmlwjo0.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) == 1) {\n        $words = explode(\",\", $txt);\n     \
    \   if (count($words) == 1) {\n            $count = 0;\n            for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n                if ($i % 2 == 0) {\n        \
    \            $count++;\n                }\n            }\n            return $count;\n\
    \        }\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu5iokkp.php:39\n\
    Stack trace:\n#0 /tmp/tmppu5iokkp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppu5iokkp.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bj707cd.php:40\n\
    Stack trace:\n#0 /tmp/tmp1bj707cd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1bj707cd.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyote_m3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpyote_m3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyote_m3b.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphom833ui.php:38\n\
    Stack trace:\n#0 /tmp/tmphom833ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphom833ui.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', '', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8r40tu7.php:34\n\
    Stack trace:\n#0 /tmp/tmpu8r40tu7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpu8r40tu7.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $chars\
    \ = str_split($txt);\n    $odds = 0;\n    foreach ($chars as $char) {\n      \
    \  if (ord($char) % 2 == 1) {\n            $odds++;\n        }\n    }\n    return\
    \ $odds;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy019tw42.php:34\n\
    Stack trace:\n#0 /tmp/tmpy019tw42.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy019tw42.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } else if (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8h_hpke0.php:40\n\
    Stack trace:\n#0 /tmp/tmp8h_hpke0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8h_hpke0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxked8k8t.php:39\n\
    Stack trace:\n#0 /tmp/tmpxked8k8t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxked8k8t.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk286ig62.php:38\n\
    Stack trace:\n#0 /tmp/tmpk286ig62.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk286ig62.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $arr\
    \ = explode(\" \", $txt);\n    if (count($arr) > 1) {\n        return $arr;\n\
    \    }\n    $arr = explode(\",\", $txt);\n    if (count($arr) > 1) {\n       \
    \ return $arr;\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n        if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap8oxiim.php:41\n\
    Stack trace:\n#0 /tmp/tmpap8oxiim.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpap8oxiim.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $arr\
    \ = explode(' ', $txt);\n    if (count($arr) > 1) {\n        return $arr;\n  \
    \  } else {\n        $arr = explode(',', $txt);\n        if (count($arr) > 1)\
    \ {\n            return $arr;\n        } else {\n            $count = 0;\n   \
    \         for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 == 1) {\n                    $count++;\n                }\n            }\n\
    \            return $count;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncg7hptk.php:43\n\
    Stack trace:\n#0 /tmp/tmpncg7hptk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpncg7hptk.php\
    \ on line 43\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n \
    \   $arr_words = [];\n    $arr_letters = [];\n    $arr_letters_odd = [];\n   \
    \ $arr_letters_even = [];\n    $arr_letters_odd_count = 0;\n    $arr_letters_even_count\
    \ = 0;\n    $arr_letters_count = 0;\n    $arr_words_count = 0;\n    $arr_words_count_odd\
    \ = 0;\n    $arr_words_count_even = 0;\n    $arr_words_count_odd_count = 0;\n\
    \    $arr_words_count_even_count = 0;\n    $arr_words_count_odd_count_count =\
    \ 0;\n    $arr_words_count_even_count_count = 0;\n    $arr_words_count_odd_count_count_count\
    \ = 0;\n    $arr_words_count_even_count_count_count = 0;\n    $arr_words_count_odd_count_count_count_count\
    \ = 0;\n    $arr_words_count_even_count_count_count_count = 0;\n    $arr_words_count_odd_count_count_count_count_count\
    \ = 0;\n    $arr_words_count_even_count_count_count_count_count = 0;\n    $arr_words_count_odd_count_count_count_count_count_count\
    \ = 0;\n    $arr_words_count_even_count_count_count_count_count_count = 0;\n \
    \   $arr_words_count_odd_count_count_count_count_count_count_count = 0;\n    $arr_words_count_even_count_count_count_count_count_count_count\
    \ = 0;\n    $arr_words_count_odd_count_count_count_count_count_count_count_count\
    \ = 0;\n    $arr_words_count_even_count_count_count_count_count_count_count_count\
    \ = 0;\n    $arr_words_count_odd_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    $arr_words_count\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkzks4dxo.php on line 42

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxked8k8t.php:39\n\
    Stack trace:\n#0 /tmp/tmpxked8k8t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxked8k8t.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxked8k8t.php:39\n\
    Stack trace:\n#0 /tmp/tmpxked8k8t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxked8k8t.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyote_m3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpyote_m3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyote_m3b.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 === 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcwka0qn.php:38\n\
    Stack trace:\n#0 /tmp/tmprcwka0qn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprcwka0qn.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n      \
    \  }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87k0xpyj.php:39\n\
    Stack trace:\n#0 /tmp/tmp87k0xpyj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp87k0xpyj.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/',\
    \ '', $txt);\n    if (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n\
    \        if ((ord($txt[$i]) - ord('a')) % 2 == 1) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboqiib4k.php:35\n\
    Stack trace:\n#0 /tmp/tmpboqiib4k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpboqiib4k.php\
    \ on line 35\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', '', $txt);\n    $txt = preg_replace('/\\s+/', ' ', $txt);\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n\
    \    } else if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n  \
    \          }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5g4l945o.php:36\n\
    Stack trace:\n#0 /tmp/tmp5g4l945o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5g4l945o.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64jff_z6.php:40\n\
    Stack trace:\n#0 /tmp/tmp64jff_z6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp64jff_z6.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphom833ui.php:38\n\
    Stack trace:\n#0 /tmp/tmphom833ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphom833ui.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^aeiou]/i', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwthyaxlb.php:33\n\
    Stack trace:\n#0 /tmp/tmpwthyaxlb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwthyaxlb.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n\
    \    if (count($arr) > 1) {\n        return $arr;\n    }\n    $arr = explode(',',\
    \ $txt);\n    if (count($arr) > 1) {\n        return $arr;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_144r4g.php:40\n\
    Stack trace:\n#0 /tmp/tmp6_144r4g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6_144r4g.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(' ', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n \
    \   $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n\
    \    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwr3va58u.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?',\
    \ ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzn0jw52h.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = [];\n            for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n                if ($i % 2 == 0) {\n      \
    \              $arr[] = $txt[$i];\n                }\n            }\n        \
    \    return count($arr);\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gr1axnc.php:40\n\
    Stack trace:\n#0 /tmp/tmp3gr1axnc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3gr1axnc.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = trim($txt);\n\
    \    $txt = explode(\" \", $txt);\n    if (count($txt) == 1) {\n        $txt =\
    \ str_split($txt[0]);\n        $count = 0;\n        foreach ($txt as $key => $value)\
    \ {\n            if (ord($value) % 2 == 1) {\n                $count++;\n    \
    \        }\n        }\n        return $count;\n    }\n    return $txt;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixry89kh.php:37\n\
    Stack trace:\n#0 /tmp/tmpixry89kh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpixry89kh.php\
    \ on line 37\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } else if (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8h_hpke0.php:40\n\
    Stack trace:\n#0 /tmp/tmp8h_hpke0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8h_hpke0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if ($i % 2\
    \ == 0 && ord($txt[$i]) >= ord('a') && ord($txt[$i]) <= ord('z')) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_i8vgq0k.php:40\n\
    Stack trace:\n#0 /tmp/tmp_i8vgq0k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_i8vgq0k.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        $count = 0;\n        for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmljduyi.php:33\n\
    Stack trace:\n#0 /tmp/tmpqmljduyi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqmljduyi.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    $txt = preg_replace('/\\s+/', ' ', $txt);\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen($txt);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwykqdsdg.php:35\n\
    Stack trace:\n#0 /tmp/tmpwykqdsdg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwykqdsdg.php\
    \ on line 35\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr8wg1xt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwr8wg1xt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwr8wg1xt.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $arr\
    \ = explode(' ', $txt);\n    if (count($arr) > 1) {\n        return $arr;\n  \
    \  }\n    $arr = explode(',', $txt);\n    if (count($arr) > 1) {\n        return\
    \ $arr;\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n\
    \        if (ord($txt[$i]) % 2 != 0) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppm57ofb8.php:41\n\
    Stack trace:\n#0 /tmp/tmppm57ofb8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppm57ofb8.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qmlwjo0.php:39\n\
    Stack trace:\n#0 /tmp/tmp5qmlwjo0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5qmlwjo0.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 !== 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7gma0u3.php:39\n\
    Stack trace:\n#0 /tmp/tmpg7gma0u3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg7gma0u3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphom833ui.php:38\n\
    Stack trace:\n#0 /tmp/tmphom833ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphom833ui.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $odd = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n    \
    \        if (ord($txt[$i]) % 2 == 1) {\n                $odd++;\n            }\n\
    \        }\n        return $odd;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jiaars1.php:39\n\
    Stack trace:\n#0 /tmp/tmp9jiaars1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9jiaars1.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(' ', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n \
    \   $txt = str_replace(',', ' ', $txt);\n    $txt = trim($txt);\n    $txt = explode('\
    \ ', $txt);\n    $count = 0;\n    foreach ($txt as $key => $value) {\n       \
    \ if (strlen($value) == 1) {\n            $count++;\n        }\n    }\n    if\
    \ ($count == count($txt)) {\n        return $count;\n    } else {\n        return\
    \ $txt;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26_f0j8f.php:39\n\
    Stack trace:\n#0 /tmp/tmp26_f0j8f.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp26_f0j8f.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $letters\
    \ = str_split($txt);\n    $odd_count = 0;\n    foreach ($letters as $letter) {\n\
    \        if (ord($letter) % 2 == 1) {\n            $odd_count++;\n        }\n\
    \    }\n    return $odd_count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yhi9teo.php:34\n\
    Stack trace:\n#0 /tmp/tmp9yhi9teo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9yhi9teo.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n       \
    \ if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobaj3772.php:39\n\
    Stack trace:\n#0 /tmp/tmpobaj3772.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpobaj3772.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        $odds = 0;\n        for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n \
    \               $odds++;\n            }\n        }\n        return $odds;\n  \
    \  }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqcxm0bw.php:33\n\
    Stack trace:\n#0 /tmp/tmpsqcxm0bw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsqcxm0bw.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n       \
    \ if (ord($txt[$i]) % 2 != 0) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6eoddpd.php:39\n\
    Stack trace:\n#0 /tmp/tmpe6eoddpd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe6eoddpd.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = trim($txt);\n\
    \    $arr = explode(\" \", $txt);\n    if (count($arr) == 1) {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbwfi_lf.php:36\n\
    Stack trace:\n#0 /tmp/tmpsbwfi_lf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsbwfi_lf.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftyg819g.php:33\n\
    Stack trace:\n#0 /tmp/tmpftyg819g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpftyg819g.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftyg819g.php:33\n\
    Stack trace:\n#0 /tmp/tmpftyg819g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpftyg819g.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen($txt);\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wtnsi0_.php:33\n\
    Stack trace:\n#0 /tmp/tmp4wtnsi0_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4wtnsi0_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?',\
    \ ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n    $txt = str_replace('\\\
    \\', ' ', $txt);\n    $txt = str_replace('|', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5umj_98h.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $letters\
    \ = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n    $odd_letters = 0;\n\
    \    foreach ($letters as $letter) {\n        if (ord($letter) % 2 == 1) {\n \
    \           $odd_letters++;\n        }\n    }\n    return $odd_letters;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv94ul594.php:34\n\
    Stack trace:\n#0 /tmp/tmpv94ul594.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpv94ul594.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphom833ui.php:38\n\
    Stack trace:\n#0 /tmp/tmphom833ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphom833ui.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/',\
    \ '', $txt);\n    $txt = preg_replace('/[^a-z]/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt\
    \ = preg_replace('/[^a-z,]/', '', $txt);\n    $txt = preg_replace('/[^a-z]/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s*,\\s*/', ',', $txt);\n    $txt =\
    \ preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/', '',\
    \ $txt);\n    $txt = preg_replace('/[^a-z]/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt\
    \ = preg_replace('/[^a-z,]/', '', $txt);\n    $txt = preg_replace('/[^a-z]/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s*,\\s*/', ',', $txt);\n    $txt =\
    \ preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/', '',\
    \ $txt);\n    $txt = preg_replace('/[^a-z]/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*,\\s*/\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp49p618ng.php on line 35

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n\
    \    if(count($arr) > 1) {\n        return $arr;\n    }\n    $arr = explode(',',\
    \ $txt);\n    if(count($arr) > 1) {\n        return $arr;\n    }\n    $count =\
    \ 0;\n    for($i = 0; $i < strlen($txt); $i++) {\n        if(ord($txt[$i]) % 2\
    \ == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqpxh7bj0.php:40\n\
    Stack trace:\n#0 /tmp/tmpqpxh7bj0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqpxh7bj0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    if (strpos($txt, ' ') !== false) {\n\
    \        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39qj92hp.php:40\n\
    Stack trace:\n#0 /tmp/tmp39qj92hp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp39qj92hp.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n \
    \   if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n \
    \   } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n \
    \           }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcyyw8hz.php:36\n\
    Stack trace:\n#0 /tmp/tmplcyyw8hz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplcyyw8hz.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $letters\
    \ = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n    $odd = 0;\n    foreach\
    \ ($letters as $letter) {\n        $ord = ord($letter);\n        if ($ord % 2\
    \ == 1) {\n            $odd++;\n        }\n    }\n    return $odd;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpld9b5xc6.php:35\n\
    Stack trace:\n#0 /tmp/tmpld9b5xc6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpld9b5xc6.php\
    \ on line 35\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qmlwjo0.php:39\n\
    Stack trace:\n#0 /tmp/tmp5qmlwjo0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5qmlwjo0.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = array();\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen($txt);\n    }\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7882p0o.php:32\n\
    Stack trace:\n#0 /tmp/tmpa7882p0o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa7882p0o.php\
    \ on line 32\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = array();\n    $arr =\
    \ explode(\" \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\"\
    ,\", $txt);\n        if (count($arr) == 1) {\n            $arr = strlen($txt);\n\
    \        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7bgiz01s.php:33\n\
    Stack trace:\n#0 /tmp/tmp7bgiz01s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7bgiz01s.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    } else {\n        $words\
    \ = explode(\",\", $txt);\n        if (count($words) > 1) {\n            return\
    \ $words;\n        } else {\n            $count = 0;\n            for ($i = 0;\
    \ $i < strlen($txt); $i++) {\n                if (ord($txt[$i]) % 2 == 1) {\n\
    \                    $count++;\n                }\n            }\n           \
    \ return $count;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v6iagiq.php:42\n\
    Stack trace:\n#0 /tmp/tmp8v6iagiq.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8v6iagiq.php\
    \ on line 42\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qoykf8j.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qoykf8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2qoykf8j.php\
    \ on line 38\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $arr = [];\n  if (strpos($txt,\
    \ ' ') !== false) {\n    $arr = explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    $arr = explode(',', $txt);\n  } else {\n    $arr = strlen($txt);\n\
    \  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw95ijn8.php:33\n\
    Stack trace:\n#0 /tmp/tmpaw95ijn8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpaw95ijn8.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyote_m3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpyote_m3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyote_m3b.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp521zj4td.php on line 46

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        $odd = 0;\n        for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n \
    \               $odd++;\n            }\n        }\n        return $odd;\n    }\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcbob8vf.php:33\n\
    Stack trace:\n#0 /tmp/tmpjcbob8vf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjcbob8vf.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $split_words = explode(\" \"\
    , $txt);\n    if (count($split_words) > 1) {\n        return $split_words;\n \
    \   } else {\n        $split_words = explode(\",\", $txt);\n        if (count($split_words)\
    \ > 1) {\n            return $split_words;\n        } else {\n            $split_words\
    \ = str_split($txt);\n            $odd_count = 0;\n            foreach ($split_words\
    \ as $letter) {\n                if (ord($letter) % 2 != 0) {\n              \
    \      $odd_count++;\n                }\n            }\n            return $odd_count;\n\
    \        }\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqlsxffn.php:43\n\
    Stack trace:\n#0 /tmp/tmpkqlsxffn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkqlsxffn.php\
    \ on line 43\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-zA-Z,]/',\
    \ '', $txt);\n    $txt = strtolower($txt);\n    $txt = preg_replace('/[a-z]/',\
    \ '$0,', $txt);\n    $txt = preg_replace('/,+/', ',', $txt);\n    $txt = preg_replace('/,$/',\
    \ '', $txt);\n    $txt = preg_replace('/^,/', '', $txt);\n    $txt = preg_replace('/[a-z]/',\
    \ '$0,', $txt);\n    $txt = preg_replace('/,+/', ',', $txt);\n    $txt = preg_replace('/,$/',\
    \ '', $txt);\n    $txt = preg_replace('/^,/', '', $txt);\n    $txt = preg_replace('/[a-z]/',\
    \ '$0,', $txt);\n    $txt = preg_replace('/,+/', ',', $txt);\n    $txt = preg_replace('/,$/',\
    \ '', $txt);\n    $txt = preg_replace('/^,/', '', $txt);\n    $txt = preg_replace('/[a-z]/',\
    \ '$0,', $txt);\n    $txt = preg_replace('/,+/', ',', $txt);\n    $txt = preg_replace('/,$/',\
    \ '', $txt);\n    $txt = preg_replace('/^,/', '', $txt);\n    $txt = preg_replace('/[a-z]/',\
    \ '$0,', $txt);\n    $txt = preg_replace('/,+/', ',', $txt);\n    $txt = preg_replace('/,$/',\
    \ '', $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfnru0d68.php on line 38

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(',',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66_r4391.php:40\n\
    Stack trace:\n#0 /tmp/tmp66_r4391.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp66_r4391.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qoykf8j.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qoykf8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2qoykf8j.php\
    \ on line 38\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyote_m3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpyote_m3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyote_m3b.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $count = 0;\n            for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n                if ($i % 2 == 0) {\n      \
    \              $count++;\n                }\n            }\n            return\
    \ $count;\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxtdhzap.php:40\n\
    Stack trace:\n#0 /tmp/tmpdxtdhzap.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdxtdhzap.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        $letters = str_split($txt);\n\
    \        $odd_letters = array_filter($letters, function($letter) {\n         \
    \   return ord($letter) % 2 == 1;\n        });\n        return count($odd_letters);\n\
    \    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxms65fj.php:31\n\
    Stack trace:\n#0 /tmp/tmpxxms65fj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxxms65fj.php\
    \ on line 31\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n\
    \    if (count($arr) > 1) {\n        return $arr;\n    }\n    $arr = explode(\"\
    ,\", $txt);\n    if (count($arr) > 1) {\n        return $arr;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp77n05e7y.php:40\n\
    Stack trace:\n#0 /tmp/tmp77n05e7y.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp77n05e7y.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('\\\
    '', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbj7dpvz6.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftyg819g.php:33\n\
    Stack trace:\n#0 /tmp/tmpftyg819g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpftyg819g.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnrevhrm3.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjo2z5by8.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    if\
    \ (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n   \
    \ } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',', $txt);\n\
    \    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $result++;\n \
    \           }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1p289vch.php:39\n\
    Stack trace:\n#0 /tmp/tmp1p289vch.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1p289vch.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n\
    \            }\n        }\n        $result = $count;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w74pa7o.php:41\n\
    Stack trace:\n#0 /tmp/tmp7w74pa7o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7w74pa7o.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3qx_j95.php:40\n\
    Stack trace:\n#0 /tmp/tmpw3qx_j95.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw3qx_j95.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/',\
    \ '', $txt);\n    $txt = preg_replace('/[a-z]/', '$0,', $txt);\n    $txt = preg_replace('/,+/',\
    \ ',', $txt);\n    $txt = preg_replace('/,$/', '', $txt);\n    $txt = preg_replace('/^,/',\
    \ '', $txt);\n    $txt = preg_replace('/,/', ' ', $txt);\n    $txt = preg_replace('/\\\
    s+/', ' ', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/,+/',\
    \ ',', $txt);\n    $txt = preg_replace('/,$/', '', $txt);\n    $txt = preg_replace('/^,/',\
    \ '', $txt);\n    $txt = preg_replace('/,/', ' ', $txt);\n    $txt = preg_replace('/\\\
    s+/', ' ', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/,+/',\
    \ ',', $txt);\n    $txt = preg_replace('/,$/', '', $txt);\n    $txt = preg_replace('/^,/',\
    \ '', $txt);\n    $txt = preg_replace('/,/', ' ', $txt);\n    $txt = preg_replace('/\\\
    s+/', ' ', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/,+/',\
    \ ',', $txt);\n    $txt = preg_replace('/,$/',\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9poddguz.php on line 39

    '
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 != 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n       \
    \ if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobaj3772.php:39\n\
    Stack trace:\n#0 /tmp/tmpobaj3772.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpobaj3772.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qoykf8j.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qoykf8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2qoykf8j.php\
    \ on line 38\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr72 = [];\n   \nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2u7p5c35.php on line 102

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), \"\", $txt);\n    $txt =\
    \ preg_replace('/\\s+/', ' ', $txt);\n    $txt = str_replace(',', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('+', ' ',\
    \ $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0wi_jw0k.php on line 45

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace(\"\
    '\", ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpws1ps4te.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s+/', ',', $txt);\n    $txt = preg_replace('/[^a-z,]/',\
    \ '', $txt);\n    if (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $cnt = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if ((ord($txt[$i]) - ord('a')) % 2 == 1) {\n          \
    \      $cnt++;\n            }\n        }\n        return $cnt;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9v2f9r7q.php:36\n\
    Stack trace:\n#0 /tmp/tmp9v2f9r7q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9v2f9r7q.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n \
    \   $arr = explode(' ', $txt);\n    if (count($arr) > 1) {\n        return $arr;\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n  \
    \          }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9m7a10a.php:37\n\
    Stack trace:\n#0 /tmp/tmpo9m7a10a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo9m7a10a.php\
    \ on line 37\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= ord('a') && ord($txt[$i]) <= ord('z')) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6tbl5qd.php:38\n\
    Stack trace:\n#0 /tmp/tmpc6tbl5qd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc6tbl5qd.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n \
    \   $result = [];\n    $str = '';\n    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] == ' ') {\n            array_push($result, $str);\n\
    \            $str = '';\n        } elseif ($arr[$i] == ',') {\n            array_push($result,\
    \ $str);\n            $str = '';\n        } else {\n            $str .= $arr[$i];\n\
    \        }\n    }\n    if (count($result) == 0) {\n        for ($i = 0; $i < count($arr);\
    \ $i++) {\n            if ($arr[$i] == ',') {\n                array_push($result,\
    \ $str);\n                $str = '';\n            } else {\n                $str\
    \ .= $arr[$i];\n            }\n        }\n    }\n    if (count($result) == 0)\
    \ {\n        for ($i = 0; $i < count($arr); $i++) {\n            if (ord($arr[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mcnl8cl.php:54\n\
    Stack trace:\n#0 /tmp/tmp6mcnl8cl.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp6mcnl8cl.php\
    \ on line 54\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjw03p_c.php:40\n\
    Stack trace:\n#0 /tmp/tmpwjw03p_c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwjw03p_c.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $arr = explode(\"\
    \ \", $txt);\n    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n\
    \        if (count($arr) == 1) {\n            $arr = strlen($txt);\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82a0iiw_.php:33\n\
    Stack trace:\n#0 /tmp/tmp82a0iiw_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp82a0iiw_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr8wg1xt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwr8wg1xt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwr8wg1xt.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if(ord($txt[$i]) % 2 == 1) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkpxlclq.php:38\n\
    Stack trace:\n#0 /tmp/tmpkkpxlclq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkkpxlclq.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/[^a-zA-Z0-9\\s]/', '', $txt);\n    $txt = preg_replace('/\\\
    s+/', ' ', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfni_69n.php:36\n\
    Stack trace:\n#0 /tmp/tmpkfni_69n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkfni_69n.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    $arr\
    \ = str_split($txt);\n    $tmp = \"\";\n    $odd = 0;\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value == \" \") {\n            if ($tmp != \"\")\
    \ {\n                array_push($result, $tmp);\n                $tmp = \"\";\n\
    \            }\n        } else if ($value == \",\") {\n            if ($tmp !=\
    \ \"\") {\n                array_push($result, $tmp);\n                $tmp =\
    \ \"\";\n            }\n        } else {\n            $tmp .= $value;\n      \
    \      if (ord($value) % 2 == 1) {\n                $odd++;\n            }\n \
    \       }\n    }\n    if ($tmp != \"\") {\n        array_push($result, $tmp);\n\
    \    }\n    if (count($result) == 0) {\n        return $odd;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz2s12v7.php:51\n\
    Stack trace:\n#0 /tmp/tmpaz2s12v7.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpaz2s12v7.php\
    \ on line 51\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3cljyuc.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qoykf8j.php:38\n\
    Stack trace:\n#0 /tmp/tmp2qoykf8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2qoykf8j.php\
    \ on line 38\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false)\
    \ {\n    return explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 == 1) {\n     \
    \   $count++;\n      }\n    }\n    return $count;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9sitczp.php:38\n\
    Stack trace:\n#0 /tmp/tmph9sitczp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph9sitczp.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    $txt = preg_replace('/\\s+/', ' ', $txt);\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = count_odd_letters($txt);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd_letters()\
    \ in /tmp/tmp81m4a14y.php:21\nStack trace:\n#0 /tmp/tmp81m4a14y.php(27): split_words('abcdef')\n\
    #1 /tmp/tmp81m4a14y.php(35): candidate('abcdef')\n#2 /tmp/tmp81m4a14y.php(41):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp81m4a14y.php on line 21\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^aeiou]/i', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwthyaxlb.php:33\n\
    Stack trace:\n#0 /tmp/tmpwthyaxlb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwthyaxlb.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $result = strlen($txt);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16l_z16n.php:34\n\
    Stack trace:\n#0 /tmp/tmp16l_z16n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp16l_z16n.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?',\
    \ ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxnq0bvu8.php on line 60

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3cljyuc.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxked8k8t.php:39\n\
    Stack trace:\n#0 /tmp/tmpxked8k8t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxked8k8t.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n      \
    \  }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqcqgwkr.php:39\n\
    Stack trace:\n#0 /tmp/tmpmqcqgwkr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmqcqgwkr.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n\
    \    if (count($arr) == 1) {\n        $arr = explode(',', $txt);\n        if (count($arr)\
    \ == 1) {\n            $count = 0;\n            for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n                if ($i % 2 == 0) {\n                    $count++;\n\
    \                }\n            }\n            return $count;\n        }\n   \
    \ }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_s3gm3h.php:39\n\
    Stack trace:\n#0 /tmp/tmpw_s3gm3h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpw_s3gm3h.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyote_m3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpyote_m3b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyote_m3b.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if(strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif(strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvujzeo_.php:39\n\
    Stack trace:\n#0 /tmp/tmpkvujzeo_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkvujzeo_.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5s4imug.php:40\n\
    Stack trace:\n#0 /tmp/tmph5s4imug.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph5s4imug.php\
    \ on line 40\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = 0;\n   \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) %\
    \ 2 == 1) {\n                $odd++;\n            }\n        }\n        return\
    \ $odd;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea76j3xu.php:38\n\
    Stack trace:\n#0 /tmp/tmpea76j3xu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpea76j3xu.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(\"\
    ,\", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = trim($txt);\n\
    \    $arr = explode(\" \", $txt);\n    if (count($arr) == 1) {\n        $result\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i %\
    \ 2 == 0) {\n                $result++;\n            }\n        }\n    } else\
    \ {\n        $result = $arr;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvtnvttf.php:38\n\
    Stack trace:\n#0 /tmp/tmpwvtnvttf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwvtnvttf.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $arr = str_split($txt);\n  $result\
    \ = [];\n  $temp = '';\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    if ($arr[$i] == ' ') {\n      array_push($result, $temp);\n      $temp\
    \ = '';\n    } else if ($arr[$i] == ',') {\n      array_push($result, $temp);\n\
    \      $temp = '';\n    } else {\n      $temp .= $arr[$i];\n    }\n  }\n  if (count($result)\
    \ == 0) {\n    for ($i = 0; $i < count($arr); $i++) {\n      if ($i % 2 == 0)\
    \ {\n        $count++;\n      }\n    }\n    return $count;\n  } else {\n    return\
    \ $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh6pfu8z.php:45\n\
    Stack trace:\n#0 /tmp/tmpwh6pfu8z.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpwh6pfu8z.php\
    \ on line 45\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(',',\
    \ ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n  \
    \          }\n        }\n        $result = $count;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xbbkot2.php:38\n\
    Stack trace:\n#0 /tmp/tmp_xbbkot2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_xbbkot2.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzpzjklv.php:41\n\
    Stack trace:\n#0 /tmp/tmpvzpzjklv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvzpzjklv.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    if\
    \ (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n   \
    \ } else if (strpos($txt, ',') !== false) {\n        $result = explode(',', $txt);\n\
    \    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $result++;\n \
    \           }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fk99r_p.php:39\n\
    Stack trace:\n#0 /tmp/tmp2fk99r_p.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2fk99r_p.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzpzjklv.php:41\n\
    Stack trace:\n#0 /tmp/tmpvzpzjklv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvzpzjklv.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $arr\
    \ = explode(\" \", $txt);\n    if (count($arr) > 1) {\n        return $arr;\n\
    \    }\n    $arr = explode(\",\", $txt);\n    if (count($arr) > 1) {\n       \
    \ return $arr;\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n        if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap8oxiim.php:41\n\
    Stack trace:\n#0 /tmp/tmpap8oxiim.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpap8oxiim.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7aemr3ho.php:40\n\
    Stack trace:\n#0 /tmp/tmp7aemr3ho.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7aemr3ho.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzpzjklv.php:41\n\
    Stack trace:\n#0 /tmp/tmpvzpzjklv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvzpzjklv.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp3iuq6a.php:33\n\
    Stack trace:\n#0 /tmp/tmpnp3iuq6a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnp3iuq6a.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    $txt\
    \ = trim($txt);\n    if (strpos($txt, ' ') !== false) {\n        $result = explode('\
    \ ', $txt);\n    } else if (strpos($txt, ',') !== false) {\n        $result =\
    \ explode(',', $txt);\n    } else {\n        $result = 0;\n        for ($i = 0;\
    \ $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n    \
    \            $result++;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmw3d3ez.php:40\n\
    Stack trace:\n#0 /tmp/tmpdmw3d3ez.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdmw3d3ez.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7aemr3ho.php:40\n\
    Stack trace:\n#0 /tmp/tmp7aemr3ho.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7aemr3ho.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n       \
    \     }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjddwx0ax.php:39\n\
    Stack trace:\n#0 /tmp/tmpjddwx0ax.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjddwx0ax.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen($txt);\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wtnsi0_.php:33\n\
    Stack trace:\n#0 /tmp/tmp4wtnsi0_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4wtnsi0_.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_5pfzf2.php:40\n\
    Stack trace:\n#0 /tmp/tmpp_5pfzf2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp_5pfzf2.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    if (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',',\
    \ $txt);\n    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3wkbc4k.php:40\n\
    Stack trace:\n#0 /tmp/tmpk3wkbc4k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpk3wkbc4k.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3cljyuc.php on line 44

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n\
    \    if (count($arr) > 1) {\n        return $arr;\n    }\n    $arr = explode(',',\
    \ $txt);\n    if (count($arr) > 1) {\n        return $arr;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_144r4g.php:40\n\
    Stack trace:\n#0 /tmp/tmp6_144r4g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6_144r4g.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphom833ui.php:38\n\
    Stack trace:\n#0 /tmp/tmphom833ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphom833ui.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n       \
    \ if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobaj3772.php:39\n\
    Stack trace:\n#0 /tmp/tmpobaj3772.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpobaj3772.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 === 1) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xya3wky.php:40\n\
    Stack trace:\n#0 /tmp/tmp6xya3wky.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6xya3wky.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 !== 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7gma0u3.php:39\n\
    Stack trace:\n#0 /tmp/tmpg7gma0u3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg7gma0u3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n \
    \   $txt = explode(' ', $txt);\n    if (count($txt) == 1) {\n        $txt = str_split($txt[0]);\n\
    \        $count = 0;\n        foreach ($txt as $key => $value) {\n           \
    \ if (ord($value) % 2 != 0) {\n                $count++;\n            }\n    \
    \    }\n        return $count;\n    }\n    return $txt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwirivvc.php:37\n\
    Stack trace:\n#0 /tmp/tmpzwirivvc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzwirivvc.php\
    \ on line 37\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr8wg1xt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwr8wg1xt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwr8wg1xt.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5s4imug.php:40\n\
    Stack trace:\n#0 /tmp/tmph5s4imug.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph5s4imug.php\
    \ on line 40\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = trim($txt);\n\
    \    $txt = preg_replace('/\\s+/', ' ', $txt);\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 !== 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg88rw48.php:41\n\
    Stack trace:\n#0 /tmp/tmpqg88rw48.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqg88rw48.php\
    \ on line 41\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $chars\
    \ = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n    $odd_count = 0;\n  \
    \  foreach ($chars as $char) {\n        if (ord($char) % 2 == 1) {\n         \
    \   $odd_count++;\n        }\n    }\n    return $odd_count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cknipp9.php:34\n\
    Stack trace:\n#0 /tmp/tmp3cknipp9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3cknipp9.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $letters\
    \ = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n    $odd_count = 0;\n  \
    \  foreach ($letters as $letter) {\n        if (ord($letter) % 2 == 1) {\n   \
    \         $odd_count++;\n        }\n    }\n    return $odd_count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypqyr2g6.php:34\n\
    Stack trace:\n#0 /tmp/tmpypqyr2g6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpypqyr2g6.php\
    \ on line 34\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n       \
    \ if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobaj3772.php:39\n\
    Stack trace:\n#0 /tmp/tmpobaj3772.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpobaj3772.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $arr = strlen($txt);\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1nl6afz.php:33\n\
    Stack trace:\n#0 /tmp/tmpb1nl6afz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb1nl6afz.php\
    \ on line 33\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 !== 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7gma0u3.php:39\n\
    Stack trace:\n#0 /tmp/tmpg7gma0u3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg7gma0u3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        $letters = str_split($txt);\n\
    \        $odd_letters = array_filter($letters, function($letter) {\n         \
    \   return ord($letter) % 2 == 1;\n        });\n        return count($odd_letters);\n\
    \    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxms65fj.php:31\n\
    Stack trace:\n#0 /tmp/tmpxxms65fj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxxms65fj.php\
    \ on line 31\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayig04n3.php:39\n\
    Stack trace:\n#0 /tmp/tmpayig04n3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpayig04n3.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = trim($txt);\n\
    \    $arr = explode(\" \", $txt);\n    if (count($arr) == 1) {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i %\
    \ 2 == 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkdc09ye.php:36\n\
    Stack trace:\n#0 /tmp/tmptkdc09ye.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptkdc09ye.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/[^a-zA-Z\\s]/',\
    \ '', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3786ksj.php:36\n\
    Stack trace:\n#0 /tmp/tmpr3786ksj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpr3786ksj.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = str_replace(',', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n \
    \   $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n\
    \    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9xkxgzd3.php on line 46

    '
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/[^a-zA-Z0-9\\\
    s]/', '', $txt);\n    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ctbmxnf.php:36\n\
    Stack trace:\n#0 /tmp/tmp2ctbmxnf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2ctbmxnf.php\
    \ on line 36\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    $odd_letters = 0;\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 ==\
    \ 1) {\n            $odd_letters++;\n        }\n    }\n    return $odd_letters;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpz7imrd.php:38\n\
    Stack trace:\n#0 /tmp/tmpbpz7imrd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbpz7imrd.php\
    \ on line 38\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    if\
    \ (strpos($txt, ' ') !== false) {\n        $result = explode(' ', $txt);\n   \
    \ } elseif (strpos($txt, ',') !== false) {\n        $result = explode(',', $txt);\n\
    \    } else {\n        $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $result++;\n \
    \           }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1p289vch.php:39\n\
    Stack trace:\n#0 /tmp/tmp1p289vch.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1p289vch.php\
    \ on line 39\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n\
    \    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n        if\
    \ (count($arr) == 1) {\n            $arr = str_split($txt);\n            $count\
    \ = 0;\n            foreach ($arr as $key => $value) {\n                if (ord($value)\
    \ % 2 == 1) {\n                    $count++;\n                }\n            }\n\
    \            return $count;\n        }\n    }\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtr7hy_n.php:40\n\
    Stack trace:\n#0 /tmp/tmpvtr7hy_n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpvtr7hy_n.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgbtx8j0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbgbtx8j0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgbtx8j0.php\
    \ on line 40\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/\\s+/', ' ', $txt);\n    $txt = preg_replace('/\\s*,\\s*/',\
    \ ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt\
    \ = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\\
    ,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n \
    \   $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n\
    \    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n\
    \    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n\
    \    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n\
    \    $txt = preg_replace('/\\s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace('/\\\
    s*\\,\\s*/', ',', $txt);\n    $txt = preg_replace\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0hgtj22y.php on line 35

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    .\", \" \", $txt);\n    $txt = str_replace(\"?\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    '\", \" \", $txt);\n    $txt = str_replace(\"\\\"\", \" \", $txt);\n    $txt =\
    \ str_replace(\"/\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n\
    \    $txt = str_replace(\"+\", \" \", $txt);\n    $txt = str_replace(\"=\", \"\
    \ \", $txt);\n    $txt = str_replace(\"*\", \" \", $txt);\n    $txt = str_replace(\"\
    &\", \" \", $txt);\n    $txt = str_replace(\"^\", \" \", $txt);\n    $txt = str_replace(\"\
    %\", \" \", $txt);\n    $txt = str_replace(\"$\", \" \", $txt);\n    $txt = str_replace(\"\
    #\", \" \", $txt);\n    $txt = str_replace(\"@\", \" \", $txt);\n    $txt = str_replace(\"\
    !\", \" \", $txt);\n    $txt = str_replace(\"~\", \" \", $txt);\n    $txt = str_replace(\"\
    `\", \" \", $txt);\n    $txt = str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb44657s_.php on line 46

    '
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = [];\n    $word = '';\n\
    \    $len = strlen($txt);\n    for ($i = 0; $i < $len; $i++) {\n        $char\
    \ = $txt[$i];\n        if ($char === ' ') {\n            if ($word !== '') {\n\
    \                $words[] = $word;\n                $word = '';\n            }\n\
    \        } else if ($char === ',') {\n            if ($word !== '') {\n      \
    \          $words[] = $word;\n                $word = '';\n            }\n   \
    \         $words[] = ',';\n        } else {\n            $word .= $char;\n   \
    \     }\n    }\n    if ($word !== '') {\n        $words[] = $word;\n    }\n  \
    \  if (count($words) === 0) {\n        $count = 0;\n        for ($i = 0; $i <\
    \ $len; $i++) {\n            $char = $txt[$i];\n            if (ord($char) % 2\
    \ === 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppd54n39f.php:55\n\
    Stack trace:\n#0 /tmp/tmppd54n39f.php(64): test()\n#1 {main}\n  thrown in /tmp/tmppd54n39f.php\
    \ on line 55\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif\
    \ (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n    } else\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxked8k8t.php:39\n\
    Stack trace:\n#0 /tmp/tmpxked8k8t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxked8k8t.php\
    \ on line 39\n"
  timestamp: 1659730811

language: php
name: HumanEval_76_is_simple_power
results:
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == round($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvcj26sw.php:35\n\
    Stack trace:\n#0 /tmp/tmpfvcj26sw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfvcj26sw.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return pow($n, round(log($x, $n))) == $x;\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    $i = 1;\n    while ($i <\
    \ $x) {\n        $i *= $n;\n        if ($i == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return $x == pow($n, round(log($x) / log($n)));\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Division by zero in /tmp/tmpra8ou5fz.php on line 19

    '
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    $i = 1;\n    while ($n **\
    \ $i <= $x) {\n        if ($n ** $i == $x) {\n            return true;\n     \
    \   }\n        $i++;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $int = log($x, $n);\n    return $int == floor($int);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh_u9q39.php:36\n\
    Stack trace:\n#0 /tmp/tmpmh_u9q39.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmh_u9q39.php\
    \ on line 36\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i <= $x) {\n    if ($i == $x) {\n      return true;\n   \
    \ }\n    $i *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i <= $x) {\n      if ($i == $x) {\n        $result = true;\n\
    \      }\n      $i *= $n;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i = $i * $n;\n  }\n  if ($i == $x) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return (floor($power) == $power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bs57lu5.php:35\n\
    Stack trace:\n#0 /tmp/tmp1bs57lu5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1bs57lu5.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  $result = $n;\n  while ($result < $x) {\n    $result = $result *\
    \ $n;\n    $i++;\n  }\n  if ($result == $x) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\necho is_simple_power(1, 4);\necho is_simple_power(2,\
    \ 2);\necho is_simple_power(8, 2);\necho is_simple_power(3, 2);\necho is_simple_power(3,\
    \ 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'11'
  timestamp: 1659730322
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = 0;\n  while (pow($n, $int) <= $x) {\n    if (pow($n, $int) == $x) {\n\
    \      return true;\n    }\n    $int++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, 1);\n  $i = 1;\n  while ($power <= $x) {\n    if ($power ==\
    \ $x) {\n      return true;\n    }\n    $i++;\n    $power = pow($n, $i);\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr23v1lgk.php:44\n\
    Stack trace:\n#0 /tmp/tmpr23v1lgk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpr23v1lgk.php\
    \ on line 44\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $power = log($x, $n);\n    return $power == (int)$power;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03cnyqu7.php:35\n\
    Stack trace:\n#0 /tmp/tmp03cnyqu7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp03cnyqu7.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $result = false;\n    if ($x == 1) {\n        $result = true;\n    } else\
    \ {\n        $i = 1;\n        while ($i <= $x) {\n            if ($n ** $i ==\
    \ $x) {\n                $result = true;\n                break;\n           \
    \ }\n            $i++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnf8ikmsl.php:42\n\
    Stack trace:\n#0 /tmp/tmpnf8ikmsl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnf8ikmsl.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z69c928.php:43\n\
    Stack trace:\n#0 /tmp/tmp1z69c928.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1z69c928.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = $n;\n  while ($pow < $x) {\n    $pow *= $n;\n  }\n  return $pow == $x;\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehn8hy8_.php:40\n\
    Stack trace:\n#0 /tmp/tmpehn8hy8_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpehn8hy8_.php\
    \ on line 40\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == (int)$int;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzebmnb1.php:35\n\
    Stack trace:\n#0 /tmp/tmppzebmnb1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppzebmnb1.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z69c928.php:43\n\
    Stack trace:\n#0 /tmp/tmp1z69c928.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1z69c928.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, 1);\n  if ($power == $x) {\n    return true;\n  }\n  $power\
    \ = pow($n, 2);\n  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n,\
    \ 3);\n  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n, 4);\n\
    \  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n, 5);\n  if ($power\
    \ == $x) {\n    return true;\n  }\n  $power = pow($n, 6);\n  if ($power == $x)\
    \ {\n    return true;\n  }\n  $power = pow($n, 7);\n  if ($power == $x) {\n  \
    \  return true;\n  }\n  $power = pow($n, 8);\n  if ($power == $x) {\n    return\
    \ true;\n  }\n  $power = pow($n, 9);\n  if ($power == $x) {\n    return true;\n\
    \  }\n  $power = pow($n, 10);\n  if ($power == $x) {\n    return true;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l7zipt_.php:75\n\
    Stack trace:\n#0 /tmp/tmp_l7zipt_.php(78): test()\n#1 {main}\n  thrown in /tmp/tmp_l7zipt_.php\
    \ on line 75\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if (pow($n, $i) == $x)\
    \ {\n      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiae8djsr.php:42\n\
    Stack trace:\n#0 /tmp/tmpiae8djsr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpiae8djsr.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $result = pow($n, intval(log($x, $n)));\n    return $result == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, intval(log($x, $n)));\n  return $result == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, floor(log($x, $n)));\n  return $result == $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\necho is_simple_power(1, 4)\
    \ . \"\\n\";\necho is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8, 2)\
    \ . \"\\n\";\necho is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3, 1)\
    \ . \"\\n\";\necho is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1


    '
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 0;\n  while ($i < $x) {\n    $i++;\n    if ($n ** $i\
    \ == $x) {\n      $result = true;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u4s_8zl.php:43\n\
    Stack trace:\n#0 /tmp/tmp5u4s_8zl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5u4s_8zl.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    for\
    \ ($i = 1; $i <= $x; $i++) {\n      if ($n ** $i == $x) {\n        $result = true;\n\
    \      }\n    }\n  }\n  return $result;\n}\n\necho is_simple_power(1, 4);\necho\
    \ is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i <= $x) {\n   \
    \ if ($i == $x) {\n      return true;\n    }\n    $i *= $n;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == floor($power);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadpoq8wx.php:36\n\
    Stack trace:\n#0 /tmp/tmpadpoq8wx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpadpoq8wx.php\
    \ on line 36\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) == round(log($x, $n));\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmtesjaq.php:34\n\
    Stack trace:\n#0 /tmp/tmpcmtesjaq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcmtesjaq.php\
    \ on line 34\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 1) {\n        return false;\n    }\n    if ($n\
    \ == 0) {\n        return false;\n    }\n    $i = 1;\n    while ($n ** $i < $x)\
    \ {\n        $i++;\n    }\n    if ($n ** $i == $x) {\n        return true;\n \
    \   }\n    return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 0;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\n\necho is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2,\
    \ 2) . \"\\n\";\necho is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3,\
    \ 2) . \"\\n\";\necho is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1\n1\n1\n\n'
  timestamp: 1659730322
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $num = log($x, $n);\n  return $num == floor($num);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdp_qx1s.php:35\n\
    Stack trace:\n#0 /tmp/tmpsdp_qx1s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsdp_qx1s.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if (pow($n, $i) == $x)\
    \ {\n      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiae8djsr.php:42\n\
    Stack trace:\n#0 /tmp/tmpiae8djsr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpiae8djsr.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = log($x, $n);\n  return is_int($result);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3_sa9v8.php:27\n\
    Stack trace:\n#0 /tmp/tmpk3_sa9v8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk3_sa9v8.php\
    \ on line 27\n"
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    echo is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2, 2) . \"\\n\";\n\
    echo is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3, 2) . \"\\n\";\n\
    echo is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5, 3) . \"\\n\";\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1\n1\n1\n\n'
  timestamp: 1659730322
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i <= $x) {\n        if ($i == $x) {\n            return\
    \ true;\n        }\n        $i *= $n;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, floor(log($x)/log($n)));\n  return $power == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Division by zero in /tmp/tmpmhql74dq.php on line 19

    '
  timestamp: 1659730317
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x == $n) {\n    return true;\n\
    \  }\n  if ($x % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x\
    \ / $n, $n);\n}\n\necho is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2,\
    \ 2) . \"\\n\";\necho is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3,\
    \ 2) . \"\\n\";\necho is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1


    '
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == intval($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dtvmrrx.php:35\n\
    Stack trace:\n#0 /tmp/tmp2dtvmrrx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2dtvmrrx.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 0;\n  while ($i < $x) {\n    if (pow($n, $i) == $x) {\n      return true;\n\
    \    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i <= $x) {\n    if ($i == $x) {\n      return true;\n   \
    \ }\n    $i *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x == $n) {\n    return true;\n\
    \  }\n  $i = 1;\n  while ($n ** $i < $x) {\n    $i++;\n  }\n  if ($n ** $i ==\
    \ $x) {\n    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    echo is_simple_power(1, 4);\necho is_simple_power(2, 2);\necho is_simple_power(8,\
    \ 2);\necho is_simple_power(3, 2);\necho is_simple_power(3, 1);\necho is_simple_power(5,\
    \ 3);\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'111'
  timestamp: 1659730322
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, 1);\n  $i = 1;\n  while ($power < $x) {\n    $i++;\n    $power\
    \ = pow($n, $i);\n  }\n  if ($power == $x) {\n    return true;\n  } else {\n \
    \   return false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9mglsx1.php:45\n\
    Stack trace:\n#0 /tmp/tmpg9mglsx1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpg9mglsx1.php\
    \ on line 45\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return is_int($power);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b111n30.php:28\n\
    Stack trace:\n#0 /tmp/tmp6b111n30.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6b111n30.php\
    \ on line 28\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $power = $n;\n  while ($power < $x)\
    \ {\n    $power *= $n;\n  }\n  return $power == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  $i = 1;\n  while ($power < $x) {\n    $power = pow($n, $i);\n\
    \    $i++;\n  }\n  if ($power == $x) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == round($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvcj26sw.php:35\n\
    Stack trace:\n#0 /tmp/tmpfvcj26sw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfvcj26sw.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 0;\n  while ($i < $x) {\n    $i++;\n    if ($n ** $i\
    \ == $x) {\n      $result = true;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u4s_8zl.php:43\n\
    Stack trace:\n#0 /tmp/tmp5u4s_8zl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5u4s_8zl.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    $i = 1;\n    while ($i <=\
    \ $x) {\n        if ($i == $x) {\n            return true;\n        }\n      \
    \  $i *= $n;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return $x == pow($n, round(log($x) / log($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Division by zero in /tmp/tmpcaluw6fj.php on line 19

    '
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power <= $x) {\n    if ($power == $x) {\n      return\
    \ true;\n    }\n    $power *= $n;\n  }\n  return false;\n}\n\necho is_simple_power(1,\
    \ 4) . PHP_EOL;\necho is_simple_power(2, 2) . PHP_EOL;\necho is_simple_power(8,\
    \ 2) . PHP_EOL;\necho is_simple_power(3, 2) . PHP_EOL;\necho is_simple_power(3,\
    \ 1) . PHP_EOL;\necho is_simple_power(5, 3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1\n1\n1\n\n'
  timestamp: 1659730322
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power <= $x) {\n    if ($power == $x) {\n      return\
    \ true;\n    }\n    $power *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while (pow($n, $i) <= $x) {\n    if (pow($n, $i) == $x) {\n     \
    \ return true;\n    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm23242z.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm23242z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjm23242z.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == intval($int);\n}\n\necho is_simple_power(1,\
    \ 4);\necho \"\\n\";\necho is_simple_power(2, 2);\necho \"\\n\";\necho is_simple_power(8,\
    \ 2);\necho \"\\n\";\necho is_simple_power(3, 2);\necho \"\\n\";\necho is_simple_power(3,\
    \ 1);\necho \"\\n\";\necho is_simple_power(5, 3);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18infv_i.php:48\n\
    Stack trace:\n#0 /tmp/tmp18infv_i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp18infv_i.php\
    \ on line 48\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i <= $x) {\n    if ($i == $x) {\n      return true;\n   \
    \ }\n    $i *= $n;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 0;\n  while ($i < $x) {\n    $i++;\n    if ($n ** $i\
    \ == $x) {\n      $result = true;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u4s_8zl.php:43\n\
    Stack trace:\n#0 /tmp/tmp5u4s_8zl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5u4s_8zl.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n\
    \  }\n  if ($power == $x) {\n    $result = true;\n  }\n  return $result;\n}\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  for ($i = 0; $i < $x; $i++) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n  }\n  return $result;\n}\n\necho is_simple_power(1,\
    \ 4);\necho is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $result = pow($n, floor(log($x, $n)));\n    return $result == $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\necho is_simple_power(1, 4)\
    \ . \"\\n\";\necho is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8, 2)\
    \ . \"\\n\";\necho is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3, 1)\
    \ . \"\\n\";\necho is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1


    '
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnf8ikmsl.php:42\n\
    Stack trace:\n#0 /tmp/tmpnf8ikmsl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnf8ikmsl.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == floor($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9p7skcl.php:35\n\
    Stack trace:\n#0 /tmp/tmpb9p7skcl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb9p7skcl.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x == $n) {\n    return true;\n\
    \  }\n  if ($x % $n != 0) {\n    return false;\n  }\n  return is_simple_power($x\
    \ / $n, $n);\n}\n\necho is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2,\
    \ 2) . \"\\n\";\necho is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3,\
    \ 2) . \"\\n\";\necho is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5,\
    \ 3) . \"\\n\";\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1


    '
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    echo is_simple_power(1, 4);\necho \"\\n\";\necho is_simple_power(2, 2);\necho\
    \ \"\\n\";\necho is_simple_power(8, 2);\necho \"\\n\";\necho is_simple_power(3,\
    \ 2);\necho \"\\n\";\necho is_simple_power(3, 1);\necho \"\\n\";\necho is_simple_power(5,\
    \ 3);\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1\n1\n1\n\n'
  timestamp: 1659730322
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $result = false;\n    $i = 1;\n    while ($i <= $x) {\n        if ($n ** $i\
    \ == $x) {\n            $result = true;\n        }\n        $i++;\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcyvisoq.php:43\n\
    Stack trace:\n#0 /tmp/tmpbcyvisoq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbcyvisoq.php\
    \ on line 43\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    $i = 1;\n    while ($i <\
    \ $x) {\n        $i *= $n;\n        if ($i == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i <= $x) {\n        if ($n ** $i == $x) {\n         \
    \   return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\necho\
    \ is_simple_power(1, 4);\necho is_simple_power(2, 2);\necho is_simple_power(8,\
    \ 2);\necho is_simple_power(3, 2);\necho is_simple_power(3, 1);\necho is_simple_power(5,\
    \ 3);\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrpvoz0b.php:49\n\
    Stack trace:\n#0 /tmp/tmpgrpvoz0b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgrpvoz0b.php\
    \ on line 49\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == intval($power);\n}\n\necho is_simple_power(1,\
    \ 4);\necho \"\\n\";\necho is_simple_power(2, 2);\necho \"\\n\";\necho is_simple_power(8,\
    \ 2);\necho \"\\n\";\necho is_simple_power(3, 2);\necho \"\\n\";\necho is_simple_power(3,\
    \ 1);\necho \"\\n\";\necho is_simple_power(5, 3);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgw6nl3oa.php:48\n\
    Stack trace:\n#0 /tmp/tmpgw6nl3oa.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgw6nl3oa.php\
    \ on line 48\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == (int)$power;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mgqri_e.php:35\n\
    Stack trace:\n#0 /tmp/tmp5mgqri_e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5mgqri_e.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = pow($n, floor(log($x, $n)));\n  return $pow == $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i < $x) {\n      $i *= $n;\n      if ($i == $x) {\n      \
    \  $result = true;\n      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $power\
    \ = 1;\n    while ($power < $x) {\n      $power *= $n;\n    }\n    if ($power\
    \ == $x) {\n      $result = true;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, 1);\n  if ($power == $x) {\n    return true;\n  }\n  $power\
    \ = pow($n, 2);\n  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n,\
    \ 3);\n  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n, 4);\n\
    \  if ($power == $x) {\n    return true;\n  }\n  $power = pow($n, 5);\n  if ($power\
    \ == $x) {\n    return true;\n  }\n  $power = pow($n, 6);\n  if ($power == $x)\
    \ {\n    return true;\n  }\n  $power = pow($n, 7);\n  if ($power == $x) {\n  \
    \  return true;\n  }\n  $power = pow($n, 8);\n  if ($power == $x) {\n    return\
    \ true;\n  }\n  $power = pow($n, 9);\n  if ($power == $x) {\n    return true;\n\
    \  }\n  $power = pow($n, 10);\n  if ($power == $x) {\n    return true;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l7zipt_.php:75\n\
    Stack trace:\n#0 /tmp/tmp_l7zipt_.php(78): test()\n#1 {main}\n  thrown in /tmp/tmp_l7zipt_.php\
    \ on line 75\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $power = log($x, $n);\n    if (is_int($power)) {\n        return true;\n \
    \   } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35qr9qpv.php:31\n\
    Stack trace:\n#0 /tmp/tmp35qr9qpv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp35qr9qpv.php\
    \ on line 31\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) == round(log($x, $n));\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmtesjaq.php:34\n\
    Stack trace:\n#0 /tmp/tmpcmtesjaq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcmtesjaq.php\
    \ on line 34\n"
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  $result = $n;\n  while ($result <= $x) {\n    if ($result == $x)\
    \ {\n      return true;\n    }\n    $result = $result * $n;\n  }\n  return false;\n\
    }\n\necho is_simple_power(1, 4) . \"\\n\";\necho is_simple_power(2, 2) . \"\\\
    n\";\necho is_simple_power(8, 2) . \"\\n\";\necho is_simple_power(3, 2) . \"\\\
    n\";\necho is_simple_power(3, 1) . \"\\n\";\necho is_simple_power(5, 3) . \"\\\
    n\";\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'\n1\n1\n\n'
  timestamp: 1659730322
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return is_int($power);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b111n30.php:28\n\
    Stack trace:\n#0 /tmp/tmp6b111n30.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6b111n30.php\
    \ on line 28\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i < $x) {\n      $i *= $n;\n      if ($i == $x) {\n      \
    \  $result = true;\n      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\necho is_simple_power(1, 4)\
    \ . \"\\n\";\necho is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8, 2)\
    \ . \"\\n\";\necho is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3, 1)\
    \ . \"\\n\";\necho is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '1

    1

    1


    '
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $power = log($x, $n);\n    return $power == intval($power);\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wci5s_x.php:36\n\
    Stack trace:\n#0 /tmp/tmp5wci5s_x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5wci5s_x.php\
    \ on line 36\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) == intval(log($x, $n));\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j6jemzo.php:34\n\
    Stack trace:\n#0 /tmp/tmp7j6jemzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7j6jemzo.php\
    \ on line 34\n"
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  $result = $n;\n  while ($result <= $x) {\n    if ($result == $x)\
    \ {\n      return true;\n    }\n    $result = $result * $n;\n    $i++;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1vglkip.php:44\n\
    Stack trace:\n#0 /tmp/tmpn1vglkip.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpn1vglkip.php\
    \ on line 44\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i <= $x) {\n    if ($i == $x) {\n      return true;\n   \
    \ }\n    $i *= $n;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = pow($n, intval(log($x, $n)));\n  return $pow == $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) == round(log($x, $n));\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmtesjaq.php:34\n\
    Stack trace:\n#0 /tmp/tmpcmtesjaq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcmtesjaq.php\
    \ on line 34\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x == $n) {\n    return true;\n\
    \  }\n  if ($x % $n == 0) {\n    return is_simple_power($x / $n, $n);\n  }\n \
    \ return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i <= $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74qtm1p_.php:43\n\
    Stack trace:\n#0 /tmp/tmp74qtm1p_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp74qtm1p_.php\
    \ on line 43\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    $i = 1;\n    while ($i <\
    \ $x) {\n        $i *= $n;\n        if ($i == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == floor($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9p7skcl.php:35\n\
    Stack trace:\n#0 /tmp/tmpb9p7skcl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb9p7skcl.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if (pow($n, $i) == $x)\
    \ {\n      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiae8djsr.php:42\n\
    Stack trace:\n#0 /tmp/tmpiae8djsr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpiae8djsr.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i <= $x) {\n        if ($i == $x) {\n            return\
    \ true;\n        }\n        $i *= $n;\n    }\n    return false;\n}\n\necho is_simple_power(1,\
    \ 4) . \"\\n\";\necho is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8,\
    \ 2) . \"\\n\";\necho is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3,\
    \ 1) . \"\\n\";\necho is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1\n1\n1\n\n'
  timestamp: 1659730323
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = log($x, $n);\n  if (is_int($result)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\n\necho is_simple_power(1, 4) . \"\\n\";\necho\
    \ is_simple_power(2, 2) . \"\\n\";\necho is_simple_power(8, 2) . \"\\n\";\necho\
    \ is_simple_power(3, 2) . \"\\n\";\necho is_simple_power(3, 1) . \"\\n\";\necho\
    \ is_simple_power(5, 3) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0obp3fg4.php:38\n\
    Stack trace:\n#0 /tmp/tmp0obp3fg4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp0obp3fg4.php\
    \ on line 38\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i < $x) {\n      $i *= $n;\n      if ($i == $x) {\n      \
    \  $result = true;\n      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = $n;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4a4pcs6.php:39\n\
    Stack trace:\n#0 /tmp/tmpy4a4pcs6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy4a4pcs6.php\
    \ on line 39\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i < $x) {\n      $i *= $n;\n      if ($i == $x) {\n      \
    \  $result = true;\n      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = pow($n, 1);\n  $i = 1;\n  while ($pow <= $x) {\n    if ($pow == $x) {\n\
    \      return true;\n    }\n    $i++;\n    $pow = pow($n, $i);\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8390uxb4.php:44\n\
    Stack trace:\n#0 /tmp/tmp8390uxb4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8390uxb4.php\
    \ on line 44\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return is_int($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pegn8ce.php:27\n\
    Stack trace:\n#0 /tmp/tmp4pegn8ce.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4pegn8ce.php\
    \ on line 27\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = pow($n, floor(log($x, $n)));\n  return $power == $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $power = log($x, $n);\n    return $power == floor($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rwjsc6s.php:35\n\
    Stack trace:\n#0 /tmp/tmp8rwjsc6s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8rwjsc6s.php\
    \ on line 35\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = $n ** intval(log($x, $n));\n  return $result == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 0;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n      return true;\n\
    \    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power <= $x) {\n    if ($power == $x) {\n      return\
    \ true;\n    }\n    $power *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = pow($n, intval(log($x, $n)));\n  return $pow == $x;\n}\n\necho is_simple_power(1,\
    \ 4);\necho is_simple_power(2, 2);\necho is_simple_power(8, 2);\necho is_simple_power(3,\
    \ 2);\necho is_simple_power(3, 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = 1;\n  while ($power <= $x) {\n    if ($power == $x) {\n      return\
    \ true;\n    }\n    $power *= $n;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($n ** $i < $x) {\n    $i++;\n  }\n  return $n ** $i == $x;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cilo6fv.php:39\n\
    Stack trace:\n#0 /tmp/tmp8cilo6fv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8cilo6fv.php\
    \ on line 39\n"
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i <= $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74qtm1p_.php:43\n\
    Stack trace:\n#0 /tmp/tmp74qtm1p_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp74qtm1p_.php\
    \ on line 43\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, floor(log($x, $n)));\n  return $result == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, floor(log($x, $n)));\n  return $result == $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i <= $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74qtm1p_.php:43\n\
    Stack trace:\n#0 /tmp/tmp74qtm1p_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp74qtm1p_.php\
    \ on line 43\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = $n;\n  while ($power < $x) {\n    $power *= $n;\n  }\n  return $power\
    \ == $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4a4pcs6.php:39\n\
    Stack trace:\n#0 /tmp/tmpy4a4pcs6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy4a4pcs6.php\
    \ on line 39\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $i = 1;\n    while ($i < $x) {\n        $i *= $n;\n    }\n    return $i ==\
    \ $x;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = 1;\n  while ($n**$int < $x) {\n    $int++;\n  }\n  if ($n**$int == $x)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5i0rk0_.php:43\n\
    Stack trace:\n#0 /tmp/tmpz5i0rk0_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpz5i0rk0_.php\
    \ on line 43\n"
  timestamp: 1659730318
- exit_code: -11
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n == 0) {\n    return is_simple_power($x\
    \ / $n, $n);\n  }\n  return false;\n}\n\necho is_simple_power(1, 4);\necho is_simple_power(2,\
    \ 2);\necho is_simple_power(8, 2);\necho is_simple_power(3, 2);\necho is_simple_power(3,\
    \ 1);\necho is_simple_power(5, 3);\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '111'
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return pow($n, round(log($x)/log($n))) == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Division by zero in /tmp/tmpoie47yrx.php on line 19

    '
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 0;\n  while ($i < $x) {\n    $i++;\n    if ($n ** $i\
    \ == $x) {\n      $result = true;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u4s_8zl.php:43\n\
    Stack trace:\n#0 /tmp/tmp5u4s_8zl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5u4s_8zl.php\
    \ on line 43\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  if ($x == 1) {\n    $result = true;\n  } else {\n    $i\
    \ = 1;\n    while ($i <= $x) {\n      if ($n ** $i == $x) {\n        $result =\
    \ true;\n        break;\n      }\n      $i++;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x == $n) {\n    return true;\n\
    \  }\n  $i = 1;\n  while ($n ** $i < $x) {\n    $i++;\n  }\n  if ($n ** $i ==\
    \ $x) {\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  if ($x % $n != 0) {\n    return false;\n\
    \  }\n  return is_simple_power($x / $n, $n);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) == intval(log($x, $n));\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j6jemzo.php:34\n\
    Stack trace:\n#0 /tmp/tmp7j6jemzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7j6jemzo.php\
    \ on line 34\n"
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while (pow($n, $i) <= $x)\
    \ {\n    if (pow($n, $i) == $x) {\n      return true;\n    }\n    $i++;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, round(log($x, $n)));\n  if ($result == $x) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $i = 1;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n\
    \      $result = true;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnf8ikmsl.php:42\n\
    Stack trace:\n#0 /tmp/tmpnf8ikmsl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnf8ikmsl.php\
    \ on line 42\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\n\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  $power = 1;\n  while ($power <= $x) {\n    if ($power ==\
    \ $x) {\n      $result = true;\n    }\n    $power *= $n;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730323
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 0;\n  while ($i < $x) {\n    if ($n ** $i == $x) {\n      return true;\n\
    \    }\n    $i++;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1) {\n    return true;\n  }\n  $i = 1;\n  while ($i < $x) {\n    $i\
    \ *= $n;\n  }\n  return $i == $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730318
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return pow($n, round(log($x, $n))) == $x;\n}\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $power = log($x, $n);\n  return $power == floor($power);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9p7skcl.php:35\n\
    Stack trace:\n#0 /tmp/tmpb9p7skcl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb9p7skcl.php\
    \ on line 35\n"
  timestamp: 1659730317
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $i = 1;\n  while ($i < $x) {\n    $i *= $n;\n  }\n  return $i == $x;\n}\nfunction\
    \ candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730317
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $int = log($x, $n);\n  return $int == floor($int);\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1agjy2cz.php:35\n\
    Stack trace:\n#0 /tmp/tmp1agjy2cz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1agjy2cz.php\
    \ on line 35\n"
  timestamp: 1659730317

language: php
name: HumanEval_147_get_max_triples
results:
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $triples++;\n                }\n            }\n        }\n    }\n\
    \    return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $triples++;\n                }\n            }\n        }\n  \
    \  }\n    return $triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezhymq0f.php:32\n\
    Stack trace:\n#0 /tmp/tmpezhymq0f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpezhymq0f.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626

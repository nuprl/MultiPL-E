language: php
name: HumanEval_117_select_words
results:
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (!in_array($word[$i], ['a', 'e', 'i', 'o', 'u'])) {\n              \
    \  $consonants++;\n            }\n        }\n        if ($consonants == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2xsu557j.php:49\nStack trace:\n#0 /tmp/tmp2xsu557j.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2xsu557j.php on line 49\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (consonants_count($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpm3759c39.php:22\nStack trace:\n#0 /tmp/tmpm3759c39.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpm3759c39.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpm3759c39.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpm3759c39.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $words = [];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    for ($i = 0; $i < strlen($s); $i++) {\n        $word =\
    \ '';\n        $consonantCount = 0;\n        while (in_array($s[$i], $consonants))\
    \ {\n            $word .= $s[$i];\n            $consonantCount++;\n          \
    \  $i++;\n        }\n        if ($consonantCount === $n) {\n            $words[]\
    \ = $word;\n        }\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysjmv1u7.php:42\n\
    Stack trace:\n#0 /tmp/tmpysjmv1u7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpysjmv1u7.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result\
    \ = [];\n    $word = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (!in_array($s[$i], $vowels)) {\n            $word .= $s[$i];\n        } else\
    \ {\n            if (strlen($word) == $n) {\n                $result[] = $word;\n\
    \            }\n            $word = '';\n        }\n    }\n    if (strlen($word)\
    \ == $n) {\n        $result[] = $word;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthqcyrdi.php:44\n\
    Stack trace:\n#0 /tmp/tmpthqcyrdi.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpthqcyrdi.php\
    \ on line 44\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        $vowels = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (in_array($word[$i], ['a', 'e', 'i', 'o', 'u'])) {\n\
    \                $vowels++;\n            } else {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpolyi073c.php:52\nStack trace:\n#0 /tmp/tmpolyi073c.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpolyi073c.php on line 52\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $result = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if (!in_array($s[$i], $vowels)) {\n            $consonants[] = $s[$i];\n  \
    \      }\n    }\n    $consonants = array_count_values($consonants);\n    foreach\
    \ ($consonants as $key => $value) {\n        if ($value == $n) {\n           \
    \ $result[] = $key;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n    [0] => l\n)\nArray\n(\n    [0] => s\n    [1]\
    \ => p\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpowu_r9_0.php:47\nStack trace:\n#0 /tmp/tmpowu_r9_0.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmpowu_r9_0.php on line 47\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (strlen($word) == $n) {\n            $result[] = $word;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxes96e7.php:34\n\
    Stack trace:\n#0 /tmp/tmpcxes96e7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcxes96e7.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $s = count($s);\n\
    \    if ($s == $n) {\n        return $s;\n    }\n}\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 4;\necho select_words($s, $n);\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvavjzob.php:47\n\
    Stack trace:\n#0 /tmp/tmpxvavjzob.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpxvavjzob.php\
    \ on line 47\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        $count = 0;\n        foreach\
    \ (str_split($word) as $char) {\n            if (in_array($char, $consonants))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ===\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu330v6mg.php:42\n\
    Stack trace:\n#0 /tmp/tmpu330v6mg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpu330v6mg.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (consonants_count($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmp0o0m1y_l.php:22\nStack trace:\n#0 /tmp/tmp0o0m1y_l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp0o0m1y_l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp0o0m1y_l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp0o0m1y_l.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpdw_uypl4.php:39\nStack trace:\n#0 /tmp/tmpdw_uypl4.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdw_uypl4.php on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $array\
    \ = explode(\" \", $s);\n    $result = [];\n    foreach ($array as $word) {\n\
    \        if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpb5_fhljt.php:22\nStack trace:\n#0 /tmp/tmpb5_fhljt.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpb5_fhljt.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpb5_fhljt.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpb5_fhljt.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word, 'i')\
    \ + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0vhdkqst.php:39\nStack trace:\n#0 /tmp/tmp0vhdkqst.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0vhdkqst.php on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  $result\
    \ = [];\n  foreach ($words as $word) {\n    $count = 0;\n    for ($i = 0; $i <\
    \ strlen($word); $i++) {\n      if (in_array(strtolower($word[$i]), $consonants))\
    \ {\n        $count++;\n      }\n    }\n    if ($count === $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $s = count($s);\n\
    \    $s = $s / $n;\n    $s = round($s);\n    $s = str_repeat(\"a\", $s);\n   \
    \ $s = str_split($s);\n    $s = implode(\" \", $s);\n    return $s;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "a a a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02niadkj.php:47\n\
    Stack trace:\n#0 /tmp/tmp02niadkj.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp02niadkj.php\
    \ on line 47\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ if (!in_array($s[$i], $vowels)) {\n            $consonants[] = $s[$i];\n   \
    \     }\n    }\n    $consonants = array_count_values($consonants);\n    foreach\
    \ ($consonants as $key => $value) {\n        if ($value == $n) {\n           \
    \ $words[] = $key;\n        }\n    }\n    return $words;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n    [0] => l\n)\nArray\n(\n    [0] => s\n    [1]\
    \ => p\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgpuzthax.php:46\nStack trace:\n#0 /tmp/tmpgpuzthax.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgpuzthax.php on line 46\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpd4068vpx.php:22\nStack trace:\n#0 /tmp/tmpd4068vpx.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpd4068vpx.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpd4068vpx.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpd4068vpx.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpd4068vpx.php:22\nStack trace:\n#0 /tmp/tmpd4068vpx.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpd4068vpx.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpd4068vpx.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpd4068vpx.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i],\
    \ $vowels)) {\n            $consonants[] = $s[$i];\n        }\n    }\n    $result\
    \ = [];\n    if (count($consonants) === $n) {\n        $result[] = $s;\n    }\n\
    \    return $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lmus1es.php:42\n\
    Stack trace:\n#0 /tmp/tmp8lmus1es.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp8lmus1es.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvad7l9c5.php:39\nStack trace:\n#0 /tmp/tmpvad7l9c5.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvad7l9c5.php on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpd4068vpx.php:22\nStack trace:\n#0 /tmp/tmpd4068vpx.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpd4068vpx.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpd4068vpx.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpd4068vpx.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $result = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if (!in_array($s[$i], $vowels)) {\n            $consonants[] = $s[$i];\n  \
    \      }\n    }\n    $consonants = array_count_values($consonants);\n    foreach\
    \ ($consonants as $key => $value) {\n        if ($value == $n) {\n           \
    \ $result[] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4q9jetp.php:42\n\
    Stack trace:\n#0 /tmp/tmpd4q9jetp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd4q9jetp.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($s as $word) {\n        $consonants = 0;\n        for ($i\
    \ = 0; $i < strlen($word); $i++) {\n            if (preg_match('/[^aeiouAEIOU]/',\
    \ $word[$i])) {\n                $consonants++;\n            }\n        }\n  \
    \      if ($consonants == $n) {\n            $result[] = $word;\n        }\n \
    \   }\n    return $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\n$result\
    \ = select_words($s, $n);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (consonants_count($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmp0o0m1y_l.php:22\nStack trace:\n#0 /tmp/tmp0o0m1y_l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp0o0m1y_l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp0o0m1y_l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp0o0m1y_l.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $result\
    \ = [];\n  $words = explode(' ', $s);\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp8_giao7z.php:22\nStack trace:\n#0 /tmp/tmp8_giao7z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp8_giao7z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp8_giao7z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp8_giao7z.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (count_consonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpagrsdims.php:22\nStack trace:\n#0 /tmp/tmpagrsdims.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpagrsdims.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpagrsdims.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpagrsdims.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpdw_uypl4.php:39\nStack trace:\n#0 /tmp/tmpdw_uypl4.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdw_uypl4.php on line 39\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ',\
    \ $s);\n    $s = trim($s);\n    $s = explode(' ', $s);\n    $result = [];\n  \
    \  foreach ($s as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (preg_match('/[^aeiou]/i', $word[$i])) {\n         \
    \       $count++;\n            }\n        }\n        if ($count == $n) {\n   \
    \         $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 3;\nprint_r(select_words($s, $n));\n\n$s = \"simple white space\"\
    ;\n$n = 2;\nprint_r(select_words($s, $n));\n\n$s = \"Hello world\";\n$n = 4;\n\
    print_r(select_words($s, $n));\n\n$s = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s,\
    \ $n));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $s = count($s);\n\
    \    $s = $s / $n;\n    $s = round($s);\n    $s = str_repeat(\"a\", $s);\n   \
    \ $s = str_split($s);\n    $s = implode(\" \", $s);\n    return $s;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxhmnyek.php:47\n\
    Stack trace:\n#0 /tmp/tmpcxhmnyek.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpcxhmnyek.php\
    \ on line 47\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ',\
    \ $s);\n    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n \
    \           if (preg_match('/[^aeiouAEIOU]/', $word[$i])) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (preg_match('/[^aeiou]/i', $word[$i])) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (preg_match('/[bcdfghjklmnpqrstvwxyz]/i', $word[$i])) {\n          \
    \      $consonants++;\n            }\n        }\n        if ($consonants == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = [];\n    foreach ($s as $letter) {\n    \
    \    if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    if (count($consonants) === $n) {\n        return $s;\n\
    \    }\n    return [];\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphn9rezee.php:39\n\
    Stack trace:\n#0 /tmp/tmphn9rezee.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphn9rezee.php\
    \ on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$s =\
    \ explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\t$count =\
    \ 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++) {\n\t\t\tif ($word[$i] != 'a'\
    \ && $word[$i] != 'e' && $word[$i] != 'i' && $word[$i] != 'o' && $word[$i] !=\
    \ 'u') {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count == $n) {\n\t\t\t$result[]\
    \ = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdwsblq4c.php:49\nStack trace:\n#0 /tmp/tmpdwsblq4c.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdwsblq4c.php on line 49\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result\
    \ = [];\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (!in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n  \
    \  if ($count == $n) {\n        $result[] = $s;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvq3jlw1.php:39\n\
    Stack trace:\n#0 /tmp/tmpuvq3jlw1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpuvq3jlw1.php\
    \ on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $s = count($s);\n\
    \    if ($s == $n) {\n        return $s;\n    }\n}\n$s = \"Mary had a little lamb\"\
    ;\n$n = 4;\nprint_r(select_words($s, $n));\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq3hv0ye.php:46\n\
    Stack trace:\n#0 /tmp/tmpdq3hv0ye.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpdq3hv0ye.php\
    \ on line 46\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpdw_uypl4.php:39\nStack trace:\n#0 /tmp/tmpdw_uypl4.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdw_uypl4.php on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ',\
    \ $s);\n    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        $word = str_split($word);\n        $consonants = 0;\n        foreach\
    \ ($word as $letter) {\n            if (preg_match('/[^aeiouAEIOU]/', $letter))\
    \ {\n                $consonants++;\n            }\n        }\n        if ($consonants\
    \ == $n) {\n            $result[] = implode($word);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (!in_array($word[$i], ['a', 'e', 'i', 'o', 'u'])) {\n              \
    \  $consonants++;\n            }\n        }\n        if ($consonants == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2xsu557j.php:49\nStack trace:\n#0 /tmp/tmp2xsu557j.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2xsu557j.php on line 49\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if ($word[$i] != 'a' && $word[$i] != 'e' && $word[$i] != 'i' && $word[$i]\
    \ != 'o' && $word[$i] != 'u') {\n                $consonants++;\n            }\n\
    \        }\n        if ($consonants == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\n$s = \"Mary had a little lamb\";\n\
    $n = 4;\nprint_r(select_words($s, $n));\necho \"\\n\";\n$s = \"Mary had a little\
    \ lamb\";\n$n = 3;\nprint_r(select_words($s, $n));\necho \"\\n\";\n$s = \"simple\
    \ white space\";\n$n = 2;\nprint_r(select_words($s, $n));\necho \"\\n\";\n$s =\
    \ \"Hello world\";\n$n = 4;\nprint_r(select_words($s, $n));\necho \"\\n\";\n$s\
    \ = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s, $n));\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n\nArray\n(\n    [0] => Mary\n    [1] =>\
    \ lamb\n)\n\nArray\n(\n)\n\nArray\n(\n    [0] => world\n)\n\nArray\n(\n)\n\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7zlo_m1y.php:64\nStack\
    \ trace:\n#0 /tmp/tmp7zlo_m1y.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp7zlo_m1y.php\
    \ on line 64\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $count =\
    \ count($s);\n    if ($count == $n) {\n        return $s;\n    }\n    else {\n\
    \        return array();\n    }\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpd1pj3dzx.php:51\nStack trace:\n\
    #0 /tmp/tmpd1pj3dzx.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpd1pj3dzx.php\
    \ on line 51\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxplhlv6e.php:38\nStack trace:\n#0 /tmp/tmpxplhlv6e.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxplhlv6e.php on line 38\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[aeiou]/i', $word, $matches) == $n) {\n          \
    \  $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29uwacyd.php:34\n\
    Stack trace:\n#0 /tmp/tmp29uwacyd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp29uwacyd.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $result = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if (!in_array($s[$i], $vowels)) {\n            $consonants[] = $s[$i];\n  \
    \      }\n    }\n    if (count($consonants) === $n) {\n        $result[] = $s;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnud18twq.php:39\n\
    Stack trace:\n#0 /tmp/tmpnud18twq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnud18twq.php\
    \ on line 39\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (consonants_count($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmp0o0m1y_l.php:22\nStack trace:\n#0 /tmp/tmp0o0m1y_l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp0o0m1y_l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp0o0m1y_l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp0o0m1y_l.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = [];\n    foreach ($s as $letter) {\n    \
    \    if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return $s;\n    }\n    return [];\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivp2qe1p.php:40\n\
    Stack trace:\n#0 /tmp/tmpivp2qe1p.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpivp2qe1p.php\
    \ on line 40\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (strpos('aeiou', $word[$i]) === false) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants === $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph81gitl9.php:44\n\
    Stack trace:\n#0 /tmp/tmph81gitl9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmph81gitl9.php\
    \ on line 44\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n           \
    \ if (preg_match('/[^aeiou]/i', $word[$i])) {\n                $count++;\n   \
    \         }\n        }\n        if ($count == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $arr\
    \ = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as $value) {\n \
    \       if (count_consonants($value) == $n) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp7zph1omm.php:22\nStack trace:\n#0 /tmp/tmp7zph1omm.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp7zph1omm.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp7zph1omm.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp7zph1omm.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ',\
    \ $s);\n    $s = strtolower($s);\n    $s = explode(' ', $s);\n    $result = [];\n\
    \    foreach ($s as $word) {\n        $consonants = preg_replace('/[aeiou]/',\
    \ '', $word);\n        if (strlen($consonants) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\necho \"\\n\";\n$s = \"Mary\
    \ had a little lamb\";\n$n = 3;\nprint_r(select_words($s, $n));\necho \"\\n\"\
    ;\n$s = \"simple white space\";\n$n = 2;\nprint_r(select_words($s, $n));\necho\
    \ \"\\n\";\n$s = \"Hello world\";\n$n = 4;\nprint_r(select_words($s, $n));\necho\
    \ \"\\n\";\n$s = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s, $n));\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n\nArray\n(\n    [0] => mary\n    [1] =>\
    \ lamb\n)\n\nArray\n(\n)\n\nArray\n(\n    [0] => world\n)\n\nArray\n(\n    [0]\
    \ => uncle\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps05cwtos.php:59\n\
    Stack trace:\n#0 /tmp/tmps05cwtos.php(67): test()\n#1 {main}\n  thrown in /tmp/tmps05cwtos.php\
    \ on line 59\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (strlen($word) == $n) {\n            $result[] = $word;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxes96e7.php:34\n\
    Stack trace:\n#0 /tmp/tmpcxes96e7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcxes96e7.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word, 'i')\
    \ + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hswstef.php:34\n\
    Stack trace:\n#0 /tmp/tmp9hswstef.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9hswstef.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    $word = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (in_array($s[$i], $vowels)) {\n            $word = '';\n\
    \        } else {\n            $word .= $s[$i];\n            if (strlen($word)\
    \ === $n) {\n                $words[] = $word;\n            }\n        }\n   \
    \ }\n    return $words;\n}\n\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n    [0] => ryh\n    [1] => ttl\n)\nArray\n(\n  \
    \  [0] => mp\n    [1] => wh\n    [2] => sp\n)\nArray\n(\n)\nArray\n(\n    [0]\
    \ => Unc\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmyrbzfg.php:47\n\
    Stack trace:\n#0 /tmp/tmplmyrbzfg.php(56): test()\n#1 {main}\n  thrown in /tmp/tmplmyrbzfg.php\
    \ on line 47\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $result = [];\n    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $words = str_split($s);\n\
    \    $count = 0;\n    foreach ($words as $word) {\n        if (in_array($word,\
    \ $vowels)) {\n            $count = 0;\n        } elseif (in_array($word, $consonants))\
    \ {\n            $count++;\n        }\n        if ($count == $n) {\n         \
    \   $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50exxbrl.php:43\n\
    Stack trace:\n#0 /tmp/tmp50exxbrl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp50exxbrl.php\
    \ on line 43\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $arr\
    \ = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdn7vckjb.php:22\nStack trace:\n#0 /tmp/tmpdn7vckjb.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdn7vckjb.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdn7vckjb.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdn7vckjb.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (count_consonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpeq5r56v7.php:22\nStack trace:\n#0 /tmp/tmpeq5r56v7.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpeq5r56v7.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpeq5r56v7.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpeq5r56v7.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_split($s);\n    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $count =\
    \ 0;\n    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $consonants)) {\n            $count++;\n        }\n    }\n    if ($count ===\
    \ $n) {\n        array_push($result, $s);\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpklgkrtn5.php:45\nStack trace:\n\
    #0 /tmp/tmpklgkrtn5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpklgkrtn5.php\
    \ on line 45\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n           \
    \ if (preg_match('/[bcdfghjklmnpqrstvwxyz]/i', $word[$i])) {\n               \
    \ $count++;\n            }\n        }\n        if ($count == $n) {\n         \
    \   $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    $result = [];\n    $word = '';\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (!in_array($s[$i], $vowels)) {\n      \
    \      $consonants[] = $s[$i];\n        }\n    }\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (in_array($s[$i], $vowels)) {\n            $word .= $s[$i];\n\
    \        } else {\n            $word .= $s[$i];\n            $words[] = $word;\n\
    \            $word = '';\n        }\n    }\n    for ($i = 0; $i < count($words);\
    \ $i++) {\n        if (strlen($words[$i]) == $n) {\n            $result[] = $words[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposg6q6z3.php:52\n\
    Stack trace:\n#0 /tmp/tmposg6q6z3.php(61): test()\n#1 {main}\n  thrown in /tmp/tmposg6q6z3.php\
    \ on line 52\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (strlen($word) - count_vowels($word) == $n) {\n      $result[] = $word;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_vowels()\
    \ in /tmp/tmp7ms9vin1.php:22\nStack trace:\n#0 /tmp/tmp7ms9vin1.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp7ms9vin1.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp7ms9vin1.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp7ms9vin1.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"a\", \"\", $s);\n  \
    \  $s = str_replace(\"e\", \"\", $s);\n    $s = str_replace(\"i\", \"\", $s);\n\
    \    $s = str_replace(\"o\", \"\", $s);\n    $s = str_replace(\"u\", \"\", $s);\n\
    \    $s = str_replace(\"y\", \"\", $s);\n    $s = str_replace(\"A\", \"\", $s);\n\
    \    $s = str_replace(\"E\", \"\", $s);\n    $s = str_replace(\"I\", \"\", $s);\n\
    \    $s = str_replace(\"O\", \"\", $s);\n    $s = str_replace(\"U\", \"\", $s);\n\
    \    $s = str_replace(\"Y\", \"\", $s);\n    $s = str_split($s);\n    $s = count($s);\n\
    \    $s = $s / $n;\n    $s = round($s);\n    $s = array_fill(0, $s, $n);\n   \
    \ return $s;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 4\n    [2] => 4\n)\nArray\n(\n    [0]\
    \ => 3\n    [1] => 3\n    [2] => 3\n    [3] => 3\n)\nArray\n(\n    [0] => 2\n\
    \    [1] => 2\n    [2] => 2\n    [3] => 2\n    [4] => 2\n)\nArray\n(\n    [0]\
    \ => 4\n    [1] => 4\n)\nArray\n(\n    [0] => 3\n    [1] => 3\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8t4ndozp.php:49\nStack trace:\n\
    #0 /tmp/tmp8t4ndozp.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp8t4ndozp.php\
    \ on line 49\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpd4068vpx.php:22\nStack trace:\n#0 /tmp/tmpd4068vpx.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpd4068vpx.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpd4068vpx.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpd4068vpx.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_split($s);\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $consonants = array();\n    foreach ($s as $letter)\
    \ {\n        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return $s;\n    }\n}\n\n$s = \"Mary had a little lamb\";\n\
    $n = 4;\nprint_r(select_words($s, $n));\n\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy305k2ds.php:43\n\
    Stack trace:\n#0 /tmp/tmpy305k2ds.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy305k2ds.php\
    \ on line 43\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (count_consonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpagrsdims.php:22\nStack trace:\n#0 /tmp/tmpagrsdims.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpagrsdims.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpagrsdims.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpagrsdims.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word) {\n      \
    \  $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n      \
    \      if (strpos('aeiou', $word[$i]) === false) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants === $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph81gitl9.php:44\n\
    Stack trace:\n#0 /tmp/tmph81gitl9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmph81gitl9.php\
    \ on line 44\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ if (!in_array($s[$i], $vowels)) {\n            $consonants[] = $s[$i];\n   \
    \     }\n    }\n    $consonants = array_count_values($consonants);\n    foreach\
    \ ($consonants as $key => $value) {\n        if ($value == $n) {\n           \
    \ $words[] = $key;\n        }\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8zs_vq9.php:42\n\
    Stack trace:\n#0 /tmp/tmpa8zs_vq9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpa8zs_vq9.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z\\s]/', '', $s);\n    $s = preg_replace('/\\s+/', '\
    \ ', $s);\n    $s = trim($s);\n    $words = explode(' ', $s);\n    $result = [];\n\
    \    foreach ($words as $word) {\n        $consonants = 0;\n        $word = strtolower($word);\n\
    \        for ($i = 0; $i < strlen($word); $i++) {\n            if ($word[$i] !=\
    \ 'a' && $word[$i] != 'e' && $word[$i] != 'i' && $word[$i] != 'o' && $word[$i]\
    \ != 'u') {\n                $consonants++;\n            }\n        }\n      \
    \  if ($consonants == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ep2tsht.php:45\n\
    Stack trace:\n#0 /tmp/tmp7ep2tsht.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp7ep2tsht.php\
    \ on line 45\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    $word = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (in_array($s[$i], $vowels)) {\n            if (strlen($word)\
    \ == $n) {\n                $words[] = $word;\n            }\n            $word\
    \ = '';\n        } else {\n            $word .= $s[$i];\n        }\n    }\n  \
    \  if (strlen($word) == $n) {\n        $words[] = $word;\n    }\n    return $words;\n\
    }\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj16frsk.php:44\n\
    Stack trace:\n#0 /tmp/tmprj16frsk.php(53): test()\n#1 {main}\n  thrown in /tmp/tmprj16frsk.php\
    \ on line 44\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result\
    \ = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        $count = 0;\n    \
    \    for ($j = $i; $j < strlen($s); $j++) {\n            if (!in_array($s[$j],\
    \ $vowels)) {\n                $count++;\n            }\n            if ($count\
    \ == $n) {\n                $result[] = substr($s, $i, $j - $i + 1);\n       \
    \         break;\n            }\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Maryh\n    [1] => aryhad\n    [2] => ryhad\n    [3]\
    \ => yhadal\n    [4] => hadalit\n    [5] => adalitt\n    [6] => dalitt\n    [7]\
    \ => alittl\n    [8] => littl\n    [9] => ittlel\n    [10] => ttlel\n    [11]\
    \ => tlelam\n    [12] => lelamb\n)\nArray\n(\n    [0] => Mary\n    [1] => aryh\n\
    \    [2] => ryh\n    [3] => yhad\n    [4] => hadal\n    [5] => adalit\n    [6]\
    \ => dalit\n    [7] => alitt\n    [8] => litt\n    [9] => ittl\n    [10] => ttl\n\
    \    [11] => tlel\n    [12] => lelam\n    [13] => elamb\n    [14] => lamb\n)\n\
    Array\n(\n    [0] => sim\n    [1] => imp\n    [2] => mp\n    [3] => pl\n    [4]\
    \ => lew\n    [5] => ewh\n    [6] => wh\n    [7] => hit\n    [8] => ites\n   \
    \ [9] => tes\n    [10] => esp\n    [11] => sp\n    [12] => pac\n)\nArray\n(\n\
    \    [0] => Hellow\n    [1] => ellowor\n    [2] => llowor\n    [3] => loworl\n\
    \    [4] => oworld\n    [5] => world\n)\nArray\n(\n    [0] => Unc\n    [1] =>\
    \ ncl\n    [2] => cles\n    [3] => lesam\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8wnwr3_2.php:47\nStack trace:\n#0 /tmp/tmp8wnwr3_2.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8wnwr3_2.php on line 47\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (countConsonants($word) == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpso503bt5.php:22\nStack trace:\n#0 /tmp/tmpso503bt5.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpso503bt5.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpso503bt5.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpso503bt5.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    $words = [];\n    $word = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (in_array($s[$i], $vowels)) {\n            if (strlen($word)\
    \ > 0) {\n                $words[] = $word;\n                $word = '';\n   \
    \         }\n        } else {\n            $word .= $s[$i];\n        }\n    }\n\
    \    if (strlen($word) > 0) {\n        $words[] = $word;\n    }\n    $result =\
    \ [];\n    foreach ($words as $word) {\n        if (strlen($word) == $n) {\n \
    \           $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n$s\
    \ = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9u6dle8.php:54\n\
    Stack trace:\n#0 /tmp/tmpy9u6dle8.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpy9u6dle8.php\
    \ on line 54\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb057ylr.php:34\n\
    Stack trace:\n#0 /tmp/tmpxb057ylr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxb057ylr.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (strlen($word) == $n) {\n            $result[] = $word;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxes96e7.php:34\n\
    Stack trace:\n#0 /tmp/tmpcxes96e7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcxes96e7.php\
    \ on line 34\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpdm342m18.php:22\nStack trace:\n#0 /tmp/tmpdm342m18.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpdm342m18.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpdm342m18.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpdm342m18.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if\
    \ (consonants_count($word) === $n) {\n      $result[] = $word;\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpm3759c39.php:22\nStack trace:\n#0 /tmp/tmpm3759c39.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpm3759c39.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpm3759c39.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpm3759c39.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = strtolower($s);\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n  \
    \          if ($word[$i] != 'a' && $word[$i] != 'e' && $word[$i] != 'i' && $word[$i]\
    \ != 'o' && $word[$i] != 'u') {\n                $consonants++;\n            }\n\
    \        }\n        if ($consonants == $n) {\n            array_push($result,\
    \ $word);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghhjtuvm.php:43\n\
    Stack trace:\n#0 /tmp/tmpghhjtuvm.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpghhjtuvm.php\
    \ on line 43\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (strlen($word) == $n) {\n            $result[] = $word;\n        }\n\
    \    }\n    return $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\n\
    print_r(select_words($s, $n));\n\n$s = \"Mary had a little lamb\";\n$n = 3;\n\
    print_r(select_words($s, $n));\n\n$s = \"simple white space\";\n$n = 2;\nprint_r(select_words($s,\
    \ $n));\n\n$s = \"Hello world\";\n$n = 4;\nprint_r(select_words($s, $n));\n\n\
    $s = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s, $n));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Mary\n    [1] => lamb\n)\nArray\n(\n    [0] => had\n\
    )\nArray\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => sam\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmphkwqvr92.php:53\nStack trace:\n#0 /tmp/tmphkwqvr92.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphkwqvr92.php on line 53\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s\
    \ = str_replace(' ', '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i],\
    \ $vowels)) {\n            $consonants[] = $s[$i];\n        }\n    }\n    $consonants\
    \ = array_count_values($consonants);\n    $result = [];\n    foreach ($consonants\
    \ as $key => $value) {\n        if ($value == $n) {\n            $result[] = $key;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mlhr2i1.php:42\n\
    Stack trace:\n#0 /tmp/tmp3mlhr2i1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3mlhr2i1.php\
    \ on line 42\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (consonants_count($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmp0o0m1y_l.php:22\nStack trace:\n#0 /tmp/tmp0o0m1y_l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp0o0m1y_l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp0o0m1y_l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp0o0m1y_l.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i', $word, $matches) == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp4w4f6a7e.php:22\nStack trace:\n#0 /tmp/tmp4w4f6a7e.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp4w4f6a7e.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp4w4f6a7e.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp4w4f6a7e.php\
    \ on line 22\n"
  timestamp: 1659730933
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words\
    \ = explode(' ', $s);\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  $result\
    \ = [];\n  foreach ($words as $word) {\n    $count = 0;\n    for ($i = 0; $i <\
    \ strlen($word); $i++) {\n      if (in_array(strtolower($word[$i]), $consonants))\
    \ {\n        $count++;\n      }\n    }\n    if ($count === $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730933
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns an array of all words from string\
    \ s that contain exactly \n// n consonants, in order these words appear in the\
    \ string s.\n// If the string s is empty then the function should return an empty\
    \ array.\n// Note: you may assume the input string contains only letters and spaces.\n\
    // Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"\
    little\")\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\"\
    , \"lamb\")\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>>\
    \ select_words(\"Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"\
    Uncle sam\", 3)\n// array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpd4068vpx.php:22\nStack trace:\n#0 /tmp/tmpd4068vpx.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpd4068vpx.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpd4068vpx.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpd4068vpx.php\
    \ on line 22\n"
  timestamp: 1659730933

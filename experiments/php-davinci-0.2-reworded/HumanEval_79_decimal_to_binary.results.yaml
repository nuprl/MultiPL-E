language: php
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  for ($i = 0; $i < 8; $i++) {\n    $binary .= $decimal\
    \ % 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvsae_al.php:26\n\
    Stack trace:\n#0 /tmp/tmphvsae_al.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphvsae_al.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db$binary\" . \"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\".$binary.\"db\";\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(32);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = '';\n  while ($decimal > 0) {\n    $binary = ($decimal % 2) .\
    \ $binary;\n    $decimal = floor($decimal / 2);\n  }\n  return 'db' . $binary\
    \ . 'db';\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0cvkbom.php:26\n\
    Stack trace:\n#0 /tmp/tmpj0cvkbom.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj0cvkbom.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return 'db' . $binary . 'db';\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\".$binary.\"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    $binary .= decbin($decimal);\n    $binary .= \"\
    db\";\n    return $binary;\n}\necho decimal_to_binary(15);\necho \"\\n\";\necho\
    \ decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = '';\n  while($decimal > 0) {\n    $binary = ($decimal % 2) .\
    \ $binary;\n    $decimal = floor($decimal / 2);\n  }\n  return 'db' . $binary\
    \ . 'db';\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qke9scf.php:26\n\
    Stack trace:\n#0 /tmp/tmp_qke9scf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_qke9scf.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = '';\n    while ($decimal > 0) {\n        $binary = ($decimal\
    \ % 2) . $binary;\n        $decimal = floor($decimal / 2);\n    }\n    return\
    \ 'db' . $binary . 'db';\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqcs4oi54.php:26\n\
    Stack trace:\n#0 /tmp/tmpqcs4oi54.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqcs4oi54.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $remainder = $decimal\
    \ % 2;\n    $decimal = floor($decimal / 2);\n    $binary = $remainder . $binary;\n\
    \  }\n  return $binary . \"db\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwol4njwy.php:27\n\
    Stack trace:\n#0 /tmp/tmpwol4njwy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwol4njwy.php\
    \ on line 27\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    echo decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32) . \"\\n\";\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "db1111db\ndb000001db\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp0r35l7_x.php:27\nStack trace:\n#0 /tmp/tmp0r35l7_x.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0r35l7_x.php on line 27\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    $binary .= decbin($decimal);\n    $binary .= \"\
    db\";\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n\t$binary = decbin($decimal);\n\t$binary = \"db\" . $binary . \"db\";\n\t\
    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1x7k9y1.php:25\n\
    Stack trace:\n#0 /tmp/tmpj1x7k9y1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj1x7k9y1.php\
    \ on line 25\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnl1vvzso.php:25\n\
    Stack trace:\n#0 /tmp/tmpnl1vvzso.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnl1vvzso.php\
    \ on line 25\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnl1vvzso.php:25\n\
    Stack trace:\n#0 /tmp/tmpnl1vvzso.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnl1vvzso.php\
    \ on line 25\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626

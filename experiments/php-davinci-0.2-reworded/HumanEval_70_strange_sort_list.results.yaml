language: php
name: HumanEval_70_strange_sort_list
results:
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hfg8l90.php:39\n\
    Stack trace:\n#0 /tmp/tmp6hfg8l90.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6hfg8l90.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = [];\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    while ($i < count($lst))\
    \ {\n        if ($k % 2 == 0) {\n            $result[$i] = $min;\n           \
    \ $i++;\n            $k++;\n        } else {\n            $result[$i] = $max;\n\
    \            $i++;\n            $k++;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cdmlxsn.php:38\n\
    Stack trace:\n#0 /tmp/tmp1cdmlxsn.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1cdmlxsn.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamy1uq79.php:35\n\
    Stack trace:\n#0 /tmp/tmpamy1uq79.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpamy1uq79.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $sorted = array();\n    $sorted[] = min($lst);\n    $lst = array_diff($lst,\
    \ $sorted);\n    while (count($lst) > 0) {\n        $sorted[] = max($lst);\n \
    \       $lst = array_diff($lst, $sorted);\n        if (count($lst) > 0) {\n  \
    \          $sorted[] = min($lst);\n            $lst = array_diff($lst, $sorted);\n\
    \        }\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkvy1htr.php:39\n\
    Stack trace:\n#0 /tmp/tmpdkvy1htr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdkvy1htr.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 13


    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmp_cuf5j3f.php
    on line 22

    '
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst)) {\n   \
    \     return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst)) {\n   \
    \     return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst)) {\n   \
    \     return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb2zoy1au.php on line 68

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res = array();\n  \
    \  $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n        $lst =\
    \ array_diff($lst, array($min, $max));\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswtaksjh.php:38\n\
    Stack trace:\n#0 /tmp/tmpswtaksjh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpswtaksjh.php\
    \ on line 38\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return array();\n\
    \    }\n    $lst = array_unique($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = array();\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while (!empty($lst)) {\n       \
    \ $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6rj6q22.php:39\n\
    Stack trace:\n#0 /tmp/tmpx6rj6q22.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpx6rj6q22.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $length = count($lst);\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst[$min_index] = null;\n    $lst[$max_index] = null;\n\
    \    $lst = array_filter($lst);\n    $length -= 2;\n    while ($length > 0) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst[$min_index] = null;\n       \
    \ $lst[$max_index] = null;\n        $lst = array_filter($lst);\n        $length\
    \ -= 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmfelpvk.php:46\n\
    Stack trace:\n#0 /tmp/tmpqmfelpvk.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpqmfelpvk.php\
    \ on line 46\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 27\nArray\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n\
    )\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 27\nArray\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n\
    )\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 15\nArray\n(\n)\n\nWarning: max(): Array must contain at least one element\
    \ in /tmp/tmpzhpz_n70.php on line 27\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmpzhpz_n70.php on line 22\n\nWarning: min(): Array\
    \ must contain at least one element in /tmp/tmpzhpz_n70.php on line 22\n\nWarning:\
    \ max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php on line\
    \ 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzhpz_n70.php\
    \ on line 22\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    sort($lst);\n \
    \   $i = 0;\n    $j = $lst_len - 1;\n    while ($i < $j) {\n        $result[]\
    \ = $lst[$i];\n        $result[] = $lst[$j];\n        $i++;\n        $j--;\n \
    \   }\n    if ($i == $j) {\n        $result[] = $lst[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $min = array_shift($lst);\n    $max = array_pop($lst);\n\
    \    $res = array($min, $max);\n    while (!empty($lst)) {\n        $min = array_shift($lst);\n\
    \        $max = array_pop($lst);\n        $res[] = $min;\n        $res[] = $max;\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi939u_v.php:35\n\
    Stack trace:\n#0 /tmp/tmpfi939u_v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfi939u_v.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) -\
    \ 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\nArray\n\
    (\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n    [5]\
    \ => 5\n    [6] => 5\n    [7] => 5\n)\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmpdgbl4aqc.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmpdgbl4aqc.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdgbl4aqc.php:38\nStack trace:\n#0 /tmp/tmpdgbl4aqc.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdgbl4aqc.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  if (count($lst) > 0) {\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0hoihav.php:35\n\
    Stack trace:\n#0 /tmp/tmpc0hoihav.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc0hoihav.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $min;\n        $result[] = $max;\n        $i += 2;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jj3ew2h.php:31\n\
    Stack trace:\n#0 /tmp/tmp8jj3ew2h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8jj3ew2h.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamy1uq79.php:35\n\
    Stack trace:\n#0 /tmp/tmpamy1uq79.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpamy1uq79.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $new_lst = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $new_lst[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $new_lst[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $new_lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpmvv0l2fb.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmvv0l2fb.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmvv0l2fb.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmvv0l2fb.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmvv0l2fb.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvv0l2fb.php:41\n\
    Stack trace:\n#0 /tmp/tmpmvv0l2fb.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmvv0l2fb.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $len = count($lst);\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $len -= 2;\n    while ($len\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $len -= 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy58t9z5.php:38\n\
    Stack trace:\n#0 /tmp/tmpdy58t9z5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdy58t9z5.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $min = min($lst);\n            $result[] = $min;\n    \
    \        $key = array_search($min, $lst);\n            unset($lst[$key]);\n  \
    \      } else {\n            $max = max($lst);\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: min(): Array must contain at least one element in /tmp/tmpot2ljbv4.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpot2ljbv4.php
    on line 15

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hfg8l90.php:39\n\
    Stack trace:\n#0 /tmp/tmp6hfg8l90.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6hfg8l90.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    if (count($lst) == 0) {\n\
    \        return $result;\n    }\n    sort($lst);\n    $min = $lst[0];\n    $max\
    \ = $lst[count($lst) - 1];\n    $result[] = $min;\n    $result[] = $max;\n   \
    \ $lst = array_slice($lst, 1, count($lst) - 2);\n    while (count($lst) > 0) {\n\
    \        $min = $lst[0];\n        $max = $lst[count($lst) - 1];\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_slice($lst, 1, count($lst)\
    \ - 2);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgkcsbu4.php:39\n\
    Stack trace:\n#0 /tmp/tmpdgkcsbu4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdgkcsbu4.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $result = array($min);\n  $lst =\
    \ array_diff($lst, array($min));\n  $lst = array_values($lst);\n  while (count($lst)\
    \ > 0) {\n    $max = max($lst);\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ array($max));\n    $lst = array_values($lst);\n    if (count($lst) == 0) {\n\
    \      break;\n    }\n    $min = min($lst);\n    $result[] = $min;\n    $lst =\
    \ array_diff($lst, array($min));\n    $lst = array_values($lst);\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde3dvafn.php:46\n\
    Stack trace:\n#0 /tmp/tmpde3dvafn.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpde3dvafn.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    sort($lst);\n    $length =\
    \ count($lst);\n    for ($i = 0; $i < $length; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = array_shift($lst);\n        } else {\n       \
    \     $result[] = array_pop($lst);\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $result = array_merge($result, strange_sort_list($lst));\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\necho implode(', ', strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpguzqy5_2.php
    on line 15


    Warning: min(): Array m'
  timestamp: 1659730629
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($i %\
    \ 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36gcsa9y.php:37\n\
    Stack trace:\n#0 /tmp/tmp36gcsa9y.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp36gcsa9y.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\nArray\n\
    (\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n    [5]\
    \ => 5\n    [6] => 5\n    [7] => 5\n)\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmpn2id2txe.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmpn2id2txe.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpn2id2txe.php:49\nStack trace:\n#0 /tmp/tmpn2id2txe.php(59): test()\n\
    #1 {main}\n  thrown in /tmp/tmpn2id2txe.php on line 49\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = array();\n    $len = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $len)\
    \ {\n        if ($i % 2 == 0) {\n            $res[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = min($lst);\n        } else {\n            $res[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 26


    Warning: min(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 26


    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 26


    Warning: min(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 16


    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 26


    Warning: max(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 26


    Warning: min(): Array must contain at least one element in /tmp/tmp4srsjx9t.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    sort($lst);\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 ==\
    \ 0) {\n            $res[] = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n\
    \        } else {\n            $res[] = max($lst);\n            $lst = array_diff($lst,\
    \ [max($lst)]);\n        }\n        $i++;\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7mpez5v.php:39\n\
    Stack trace:\n#0 /tmp/tmpt7mpez5v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt7mpez5v.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $len = count($lst);\n    if\
    \ ($len == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $len--;\n    $i = 0;\n    while ($len > 0) {\n        if ($i % 2 == 0) {\n\
    \            $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        } else {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        }\n        $i++;\n        $len--;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 26\n\nWarning: max(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 29\n\nWarning: min(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 30\n\nWarning: max(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 26\n\nWarning: max(): Array must contain at least one element in /tmp/tmpct8_fy9c.php\
    \ on line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct8_fy9c.php:47\n\
    Stack trace:\n#0 /tmp/tmpct8_fy9c.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpct8_fy9c.php\
    \ on line 47\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($i %\
    \ 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36gcsa9y.php:37\n\
    Stack trace:\n#0 /tmp/tmp36gcsa9y.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp36gcsa9y.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    $lst = array_values($lst);\n \
    \   while (count($lst) > 0) {\n        $max = max($lst);\n        $result[] =\
    \ $max;\n        $lst = array_diff($lst, array($max));\n        $lst = array_values($lst);\n\
    \        if (count($lst) == 0) {\n            break;\n        }\n        $min\
    \ = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fb4lkb1.php:46\n\
    Stack trace:\n#0 /tmp/tmp1fb4lkb1.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1fb4lkb1.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $min_index = array_search($min, $lst);\n\
    \  $max_index = array_search($max, $lst);\n  $lst[$min_index] = $max;\n  $lst[$max_index]\
    \ = $min;\n  $lst = array_values($lst);\n  $lst = array_slice($lst, 2);\n  return\
    \ array_merge(array($min, $max), strange_sort_list($lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35icdoqx.php:32\n\
    Stack trace:\n#0 /tmp/tmp35icdoqx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp35icdoqx.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $min;\n        $i++;\n        if ($i < $count) {\n  \
    \          $result[] = $max;\n            $i++;\n        }\n    }\n    return\
    \ $result;\n}\n\n$lst = [1, 2, 3, 4];\n$lst = [5, 5, 5, 5];\n$lst = [];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmpqps7mkg1.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmpqps7mkg1.php\
    \ on line 15\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpqps7mkg1.php:38\nStack trace:\n#0 /tmp/tmpqps7mkg1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqps7mkg1.php on line 38\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst[$min_index] = null;\n    $lst[$max_index] = null;\n\
    \    $lst = array_filter($lst);\n    $count = count($lst);\n    $i = 0;\n    while\
    \ ($i < $count) {\n        $min = min($lst);\n        $max = max($lst);\n    \
    \    $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        $lst[$min_index]\
    \ = null;\n        $lst[$max_index] = null;\n        $lst = array_filter($lst);\n\
    \        $i += 2;\n    }\n    return $result;\n}\n\n$a = [1, 2, 3, 4];\n$b = [5,\
    \ 5, 5, 5];\n$c = [];\n\nvar_dump(strange_sort_list($a));\nvar_dump(strange_sort_list($b));\n\
    var_dump(strange_sort_list($c));\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(2)\n \
    \ [3]=>\n  int(3)\n}\narray(6) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(5)\n  [2]=>\n\
    \  int(5)\n  [3]=>\n  int(5)\n  [4]=>\n  int(5)\n  [5]=>\n  int(5)\n}\n\nWarning:\
    \ min(): Array must contain at least one element in /tmp/tmphrdc5vlb.php on line\
    \ 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmphrdc5vlb.php\
    \ on line 16\narray(2) {\n  [0]=>\n  bool(false)\n  [1]=>\n  bool(false)\n}\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmphrdc5vlb.php:54\nStack\
    \ trace:\n#0 /tmp/tmphrdc5vlb.php(64): test()\n#1 {main}\n  thrown in /tmp/tmphrdc5vlb.php\
    \ on line 54\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return $lst;\n  }\n  sort($lst);\n\
    \  $result = array();\n  $i = 0;\n  $j = count($lst) - 1;\n  while ($i <= $j)\
    \ {\n    $result[] = $lst[$i];\n    if ($i != $j) {\n      $result[] = $lst[$j];\n\
    \    }\n    $i++;\n    $j--;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    return array_merge(array($min, $max), strange_sort_list($lst));\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaks7eifu.php:28\n\
    Stack trace:\n#0 /tmp/tmpaks7eifu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaks7eifu.php\
    \ on line 28\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_unique($lst);\n    $lst = array_values($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpietjkkxp.php:38\n\
    Stack trace:\n#0 /tmp/tmpietjkkxp.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpietjkkxp.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmpi4dlkdfc.php\
    \ on line 32\n\nWarning: max(): Array must contain at least one element in /tmp/tmpi4dlkdfc.php\
    \ on line 33\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4dlkdfc.php:46\n\
    Stack trace:\n#0 /tmp/tmpi4dlkdfc.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpi4dlkdfc.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst_len = count($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst[$min_index] = $lst[$max_index] = null;\n    $lst\
    \ = array_filter($lst);\n    $lst_len = count($lst);\n    $i = 0;\n    while ($i\
    \ < $lst_len) {\n        $min = min($lst);\n        $max = max($lst);\n      \
    \  $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        $lst[$min_index]\
    \ = $lst[$max_index] = null;\n        $lst = array_filter($lst);\n        $lst_len\
    \ = count($lst);\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nzloxub.php:46\n\
    Stack trace:\n#0 /tmp/tmp2nzloxub.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp2nzloxub.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $max = max($lst);\n    $min\
    \ = min($lst);\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($i %\
    \ 2 == 0) {\n            $result[] = $min;\n            $min = min(array_diff($lst,\
    \ $result));\n        } else {\n            $result[] = $max;\n            $max\
    \ = max(array_diff($lst, $result));\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 23\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 20\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 20\n\nWarning: max(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 23\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 20\n\nWarning: max(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 23\n\nWarning: min(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 20\n\nWarning: max(): Array must contain at least one element in /tmp/tmp0iz4n25o.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0iz4n25o.php:39\n\
    Stack trace:\n#0 /tmp/tmp0iz4n25o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0iz4n25o.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = $lst;\n  sort($sorted);\n  $result =\
    \ [];\n  $i = 0;\n  $j = count($sorted) - 1;\n  while ($i <= $j) {\n    $result[]\
    \ = $sorted[$i];\n    if ($i != $j) {\n      $result[] = $sorted[$j];\n    }\n\
    \    $i++;\n    $j--;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $res = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n        if ($i !=\
    \ $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_values(array_diff($lst, $result));\n\
    \    if (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8yy70yd.php:35\n\
    Stack trace:\n#0 /tmp/tmpa8yy70yd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa8yy70yd.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $count = count($lst);\n    if ($count == 0) {\n\
    \        return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $max_index = array_search($max, $lst);\n\
    \    unset($lst[$max_index]);\n    $count -= 2;\n    while ($count > 0) {\n  \
    \      $min = min($lst);\n        $max = max($lst);\n        $result[] = $max;\n\
    \        $result[] = $min;\n        $min_index = array_search($min, $lst);\n \
    \       unset($lst[$min_index]);\n        $max_index = array_search($max, $lst);\n\
    \        unset($lst[$max_index]);\n        $count -= 2;\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nvar_dump(strange_sort_list($lst));\n\n$lst = array(5,\
    \ 5, 5, 5);\nvar_dump(strange_sort_list($lst));\n\n$lst = array();\nvar_dump(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n}\n\
    array(3) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(5)\n  [2]=>\n  int(5)\n}\narray(0)\
    \ {\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj8z9r44.php:53\n\
    Stack trace:\n#0 /tmp/tmpdj8z9r44.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpdj8z9r44.php\
    \ on line 53\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $len = count($lst);\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $len) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = $min;\n            $lst =\
    \ array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 26\n\nWarning: min(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 22\n\nWarning: min(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 22\n\nWarning: max(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 26\n\nWarning: min(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 22\n\nWarning: max(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 26\n\nWarning: min(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 22\n\nWarning: max(): Array must contain at least one element in /tmp/tmpq7am16qh.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7am16qh.php:42\n\
    Stack trace:\n#0 /tmp/tmpq7am16qh.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq7am16qh.php\
    \ on line 42\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (!empty($lst)) {\n     \
    \   $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (empty($lst)) {\n            break;\n        }\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeay3n8m.php:43\n\
    Stack trace:\n#0 /tmp/tmpfeay3n8m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfeay3n8m.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $lst_len = count($lst);\n    if ($lst_len ==\
    \ 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $lst\
    \ = array_slice($lst, 1, $lst_len - 2);\n    $lst = strange_sort_list($lst);\n\
    \    array_unshift($lst, $max);\n    array_push($lst, $min);\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyezwudg_.php:35\n\
    Stack trace:\n#0 /tmp/tmpyezwudg_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyezwudg_.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    print_r(strange_sort_list($lst));\n\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 27\nArray\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n\
    )\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 27\nArray\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n\
    )\n\nWarning: min(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 15\nArray\n(\n)\n\nWarning: max(): Array must contain at least one element\
    \ in /tmp/tmpn0s9rqcq.php on line 27\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmpn0s9rqcq.php on line 22\n\nWarning: min(): Array\
    \ must contain at least one element in /tmp/tmpn0s9rqcq.php on line 22\n\nWarning:\
    \ max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php on line\
    \ 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmpn0s9rqcq.php\
    \ on line 22\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return $lst;\n  }\n  $min\
    \ = min($lst);\n  $max = max($lst);\n  $result = array();\n  $result[] = $min;\n\
    \  $result[] = $max;\n  $lst = array_diff($lst, array($min, $max));\n  $lst =\
    \ array_values($lst);\n  while (!empty($lst)) {\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5i1yl4e.php:40\n\
    Stack trace:\n#0 /tmp/tmpf5i1yl4e.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpf5i1yl4e.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mvhxsik.php:43\n\
    Stack trace:\n#0 /tmp/tmp1mvhxsik.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1mvhxsik.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst[$min_index] = null;\n    $lst[$max_index] = null;\n\
    \    $lst = array_filter($lst);\n    $count = count($lst);\n    $i = 0;\n    while\
    \ ($i < $count) {\n        $min = min($lst);\n        $max = max($lst);\n    \
    \    $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        $lst[$min_index]\
    \ = null;\n        $lst[$max_index] = null;\n        $lst = array_filter($lst);\n\
    \        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfaq4naih.php:47\n\
    Stack trace:\n#0 /tmp/tmpfaq4naih.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpfaq4naih.php\
    \ on line 47\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $key = array_search(min($lst),\
    \ $lst);\n            unset($lst[$key]);\n        } else {\n            $result[]\
    \ = max($lst);\n            $key = array_search(max($lst), $lst);\n          \
    \  unset($lst[$key]);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: min(): Array must contain at least one element in /tmp/tmpbqwq8mgu.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpbqwq8mgu.php
    on line 15

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    $lst = array_values($lst);\n    $lst = array_merge($result, $lst);\n\
    \    return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla_mr3ix.php:33\n\
    Stack trace:\n#0 /tmp/tmpla_mr3ix.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpla_mr3ix.php\
    \ on line 33\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_length\
    \ = count($lst);\n    $i = 0;\n    while ($i < $lst_length) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n        $lst_length\
    \ = count($lst);\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpf4efhk.php:47\n\
    Stack trace:\n#0 /tmp/tmpdpf4efhk.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpdpf4efhk.php\
    \ on line 47\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n\t$sorted = array();\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst = array_values($lst);\n\t$min = min($lst);\n\t$max\
    \ = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\t$lst = array_diff($lst,\
    \ array($min, $max));\n\t$lst =\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwrd2nmg0.php on line 56

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst = array_values($lst);\n\
    \    $len = count($lst);\n    $i = 0;\n    $j = $len - 1;\n    while ($i <= $j)\
    \ {\n        $result[] = $lst[$i];\n        if ($i != $j) {\n            $result[]\
    \ = $lst[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowufluzi.php:37\n\
    Stack trace:\n#0 /tmp/tmpowufluzi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpowufluzi.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = array();\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $res[] = min($lst);\n            $lst = array_diff($lst,\
    \ array(min($lst)));\n        } else {\n            $res[] = max($lst);\n    \
    \        $lst = array_diff($lst, array(max($lst)));\n        }\n        $i++;\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uzp1f2m.php:39\n\
    Stack trace:\n#0 /tmp/tmp9uzp1f2m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9uzp1f2m.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\nArray\n\
    (\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n    [5]\
    \ => 5\n    [6] => 5\n    [7] => 5\n)\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmp696pfitp.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmp696pfitp.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp696pfitp.php:51\nStack trace:\n#0 /tmp/tmp696pfitp.php(61): test()\n\
    #1 {main}\n  thrown in /tmp/tmp696pfitp.php on line 51\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_unique($lst);\n    $lst = array_values($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $result[] = $min;\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $max = max($lst);\n        }\n   \
    \     $i++;\n        $key = array_search($result[$i - 1], $lst);\n        unset($lst[$key]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgl69w0wh.php:40\n\
    Stack trace:\n#0 /tmp/tmpgl69w0wh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgl69w0wh.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv0zw3to.php:38\n\
    Stack trace:\n#0 /tmp/tmpnv0zw3to.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnv0zw3to.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n \
    \       $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7osk3h0t.php:35\n\
    Stack trace:\n#0 /tmp/tmp7osk3h0t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7osk3h0t.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) -\
    \ 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $strange_lst = array();\n  $strange_lst[]\
    \ = $min;\n  $strange_lst[] = $max;\n  $lst = array_diff($lst, array($min, $max));\n\
    \  while (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $strange_lst[] = $min;\n    $strange_lst[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n  }\n  return $strange_lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsam8utvz.php:38\n\
    Stack trace:\n#0 /tmp/tmpsam8utvz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpsam8utvz.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res = array();\n  \
    \  $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    $lst = array_values($lst);\n    while (count($lst) > 0) {\n   \
    \     $min = min($lst);\n        $max = max($lst);\n        $res[] = $min;\n \
    \       $res[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \        $lst = array_values($lst);\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j_9kux3.php:40\n\
    Stack trace:\n#0 /tmp/tmp2j_9kux3.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2j_9kux3.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 21


    Warning: min(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 21


    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 25


    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 25


    Warning: max(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp7o8zoglt.php
    on line 21

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw13a2fei.php:35\n\
    Stack trace:\n#0 /tmp/tmpw13a2fei.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw13a2fei.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n    $result = array($min,\
    \ $max);\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $lst = array_diff($lst, array($min, $max));\n        $lst\
    \ = array_values($lst);\n        $result = array_merge($result, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7fnz7n0.php:37\n\
    Stack trace:\n#0 /tmp/tmph7fnz7n0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph7fnz7n0.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = array();\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n \
    \       $lst = array_diff($lst, array($min, $max));\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpep1_70ne.php:35\n\
    Stack trace:\n#0 /tmp/tmpep1_70ne.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpep1_70ne.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  while (count($lst) > 0) {\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzct4ey08.php:43\n\
    Stack trace:\n#0 /tmp/tmpzct4ey08.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzct4ey08.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hfg8l90.php:39\n\
    Stack trace:\n#0 /tmp/tmp6hfg8l90.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6hfg8l90.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mvhxsik.php:43\n\
    Stack trace:\n#0 /tmp/tmp1mvhxsik.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1mvhxsik.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $res = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n        if ($i !=\
    \ $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  sort($lst);\n  $result = array();\n  $i = 0;\n  $j = count($lst) - 1;\n  while\
    \ ($i <= $j) {\n    $result[] = $lst[$i];\n    $i++;\n    if ($i <= $j) {\n  \
    \    $result[] = $lst[$j];\n      $j--;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst_len = count($lst);\n\
    \    $lst_len_half = floor($lst_len / 2);\n    $lst_len_half_plus = $lst_len_half\
    \ + 1;\n    $lst_len_half_minus = $lst_len_half - 1;\n    $lst_len_half_plus_minus\
    \ = $lst_len_half_plus - 1;\n    $lst_len_half_minus_plus = $lst_len_half_minus\
    \ + 1;\n    $lst_len_half_plus_minus_plus = $lst_len_half_plus_minus + 1;\n  \
    \  $lst_len_half_minus_plus_minus = $lst_len_half_minus_plus - 1;\n    $lst_len_half_plus_minus_plus_minus\
    \ = $lst_len_half_plus_minus_plus - 1;\n    $lst_len_half_minus_plus_minus_plus\
    \ = $lst_len_half_minus_plus_minus + 1;\n    $lst_len_half_plus_minus_plus_minus_plus\
    \ = $lst_len_half_plus_minus_plus_minus + 1;\n    $lst_len_half_minus_plus_minus_plus_minus\
    \ = $lst_len_half_minus_plus_minus_plus - 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus\
    \ = $lst_len_half_plus_minus_plus_minus_plus - 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus\
    \ = $lst_len_half_minus_plus_minus_plus_minus + 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus_plus\
    \ = $lst_len_half_plus_minus_plus_minus_plus_minus + 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus_minus\
    \ = $lst_len_half_minus_plus_minus_plus_minus_plus -\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbxp4r7nc.php on line 30

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw13a2fei.php:35\n\
    Stack trace:\n#0 /tmp/tmpw13a2fei.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw13a2fei.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        $result[] = $lst[$i];\n        unset($lst[$i]);\n        $lst\
    \ = array_values($lst);\n        if (count($lst) > 0) {\n            $result[]\
    \ = $lst[count($lst) - 1];\n            unset($lst[count($lst) - 1]);\n      \
    \      $lst = array_values($lst);\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $len = count($lst);\n    $i\
    \ = 0;\n    while ($i < $len) {\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $lst = array_diff($lst, [$min]);\n        if (count($lst) ==\
    \ 0) {\n            break;\n        }\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n        $i += 2;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjgpvqim.php:40\n\
    Stack trace:\n#0 /tmp/tmpwjgpvqim.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpwjgpvqim.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  sort($lst);\n  $min = $lst[0];\n  $max = $lst[count($lst) - 1];\n  $result\
    \ = array($min);\n  $i = 1;\n  while (count($lst) > 0) {\n    if ($i % 2 == 0)\
    \ {\n      $result[] = array_shift($lst);\n    } else {\n      $result[] = array_pop($lst);\n\
    \    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwwu7yvk.php:37\n\
    Stack trace:\n#0 /tmp/tmpfwwu7yvk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfwwu7yvk.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = [];\n    $max = max($lst);\n    $min\
    \ = min($lst);\n    $lst = array_diff($lst, [$max, $min]);\n    $sorted[] = $min;\n\
    \    $sorted[] = $max;\n    while (!empty($lst)) {\n        $max = max($lst);\n\
    \        $min = min($lst);\n        $lst = array_diff($lst, [$max, $min]);\n \
    \       $sorted[] = $min;\n        $sorted[] = $max;\n    }\n    return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jgpz9kd.php:35\n\
    Stack trace:\n#0 /tmp/tmp7jgpz9kd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7jgpz9kd.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    while (count($lst) > 0) {\n        $res[] = $min;\n        $lst\
    \ = array_diff($lst, [$min]);\n        if (count($lst) > 0) {\n            $res[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n        }\n        $min\
    \ = min($lst);\n        $max = max($lst);\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 23\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 23\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 23\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 23\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 23\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmpgp3aes.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpgp3aes.php:38\n\
    Stack trace:\n#0 /tmp/tmpmpgp3aes.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmpgp3aes.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n\n    sort($lst);\n    $min = array_shift($lst);\n    $max = array_pop($lst);\n\
    \    $res = array($min, $max);\n\n    while (!empty($lst)) {\n        $min = array_shift($lst);\n\
    \        $max = array_pop($lst);\n        $res[] = $min;\n        $res[] = $max;\n\
    \    }\n\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0gz7j26.php:38\n\
    Stack trace:\n#0 /tmp/tmpa0gz7j26.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpa0gz7j26.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ array(min($lst)));\n        } else {\n            $result[] = max($lst);\n \
    \           $lst = array_diff($lst, array(max($lst)));\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2uyp9w3.php:39\n\
    Stack trace:\n#0 /tmp/tmpo2uyp9w3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo2uyp9w3.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamy1uq79.php:35\n\
    Stack trace:\n#0 /tmp/tmpamy1uq79.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpamy1uq79.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = [];\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i %\
    \ 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpqg9ql8pj.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpqg9ql8pj.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpqg9ql8pj.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpqg9ql8pj.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpqg9ql8pj.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg9ql8pj.php:41\n\
    Stack trace:\n#0 /tmp/tmpqg9ql8pj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqg9ql8pj.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    $lst = array_values($lst);\n \
    \   while (count($lst) > 0) {\n        $max = max($lst);\n        $result[] =\
    \ $max;\n        $lst = array_diff($lst, array($max));\n        $lst = array_values($lst);\n\
    \        if (count($lst) == 0) {\n            break;\n        }\n        $min\
    \ = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fb4lkb1.php:46\n\
    Stack trace:\n#0 /tmp/tmp1fb4lkb1.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1fb4lkb1.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    $lst = array_values($lst);\n \
    \   while (count($lst) > 0) {\n        $max = max($lst);\n        $result[] =\
    \ $max;\n        $lst = array_diff($lst, array($max));\n        $lst = array_values($lst);\n\
    \        if (count($lst) == 0) {\n            break;\n        }\n        $min\
    \ = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fb4lkb1.php:46\n\
    Stack trace:\n#0 /tmp/tmp1fb4lkb1.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1fb4lkb1.php\
    \ on line 46\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return $lst;\n  }\n  sort($lst);\n\
    \  $result = array();\n  $i = 0;\n  $j = count($lst) - 1;\n  while ($i <= $j)\
    \ {\n    $result[] = $lst[$i];\n    if ($i != $j) {\n      $result[] = $lst[$j];\n\
    \    }\n    $i++;\n    $j--;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $lst_len = count($lst);\n    if ($lst_len ==\
    \ 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst_sorted = array();\n    $lst_sorted[] = $min;\n    $lst_sorted[] = $max;\n\
    \    $lst_sorted = array_merge($lst_sorted, strange_sort_list(array_diff($lst,\
    \ array($min, $max))));\n    return $lst_sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyc31czd.php:32\n\
    Stack trace:\n#0 /tmp/tmpuyc31czd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuyc31czd.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\n\n\
    Array\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n)\n\nArray\n\
    (\n)\n\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ array($min));\n            $min = min($lst);\n        } else {\n           \
    \ $result[] = $max;\n            $lst = array_diff($lst, array($max));\n     \
    \       $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpky4su7pv.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpky4su7pv.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpky4su7pv.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpky4su7pv.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpky4su7pv.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky4su7pv.php:41\n\
    Stack trace:\n#0 /tmp/tmpky4su7pv.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpky4su7pv.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) < 2) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    return array_merge(array($min, $max), strange_sort_list($lst));\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzue4e28m.php:31\n\
    Stack trace:\n#0 /tmp/tmpzue4e28m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzue4e28m.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3drpy_nw.php:41\n\
    Stack trace:\n#0 /tmp/tmp3drpy_nw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3drpy_nw.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_idx = array_search($min, $lst);\n    $max_idx = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_idx]);\n\
    \    unset($lst[$max_idx]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_idx\
    \ = array_search($min, $lst);\n        $max_idx = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_idx]);\n\
    \        unset($lst[$max_idx]);\n        $lst = array_values($lst);\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcun5xihw.php:43\n\
    Stack trace:\n#0 /tmp/tmpcun5xihw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpcun5xihw.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hfg8l90.php:39\n\
    Stack trace:\n#0 /tmp/tmp6hfg8l90.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6hfg8l90.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $min;\n        $result[] = $max;\n        $i++;\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxr17z0z.php:31\n\
    Stack trace:\n#0 /tmp/tmppxr17z0z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppxr17z0z.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv__r00_g.php:43\n\
    Stack trace:\n#0 /tmp/tmpv__r00_g.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv__r00_g.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return array();\n\
    \    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $new_lst[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $new_lst[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $new_lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe63npjg6.php:43\n\
    Stack trace:\n#0 /tmp/tmpe63npjg6.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpe63npjg6.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $result = array($min, $max);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, array($min, $max));\n        $result = array_merge($result,\
    \ array($min, $max));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu174_rg.php:35\n\
    Stack trace:\n#0 /tmp/tmplu174_rg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplu174_rg.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $i = 0;\n  while (count($lst) > 0) {\n    if ($i % 2 == 0) {\n      $result[]\
    \ = min($lst);\n      $lst = array_diff($lst, [min($lst)]);\n    } else {\n  \
    \    $result[] = max($lst);\n      $lst = array_diff($lst, [max($lst)]);\n   \
    \ }\n    $i++;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyy8qc69.php:39\n\
    Stack trace:\n#0 /tmp/tmptyy8qc69.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptyy8qc69.php\
    \ on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_length\
    \ = count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmp9b_zhdaw.php\
    \ on line 25\n\nWarning: max(): Array must contain at least one element in /tmp/tmp9b_zhdaw.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9b_zhdaw.php:43\n\
    Stack trace:\n#0 /tmp/tmp9b_zhdaw.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9b_zhdaw.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst_len = count($lst);\n    if ($lst_len == 0) {\n        return $result;\n\
    \    }\n    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $lst_len\
    \ = count($lst);\n    if ($lst_len == 0) {\n        return $result;\n    }\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n    if ($lst_len ==\
    \ 0) {\n        return $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuqzydgvz.php on line 65

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $min = $lst[0];\n    $max =\
    \ $lst[count($lst) - 1];\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_slice($lst, 1, count($lst) - 2);\n    $lst = array_reverse($lst);\n\
    \    $result = array_merge($result, $lst);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq3w51j1.php:33\n\
    Stack trace:\n#0 /tmp/tmpxq3w51j1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxq3w51j1.php\
    \ on line 33\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $sorted[] = $min;\n    $sorted[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $sorted = array_merge($sorted, strange_sort_list($lst));\n \
    \   }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1s_w0gd_.php:35\n\
    Stack trace:\n#0 /tmp/tmp1s_w0gd_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1s_w0gd_.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $min_key = array_search($min, $lst);\n     \
    \       unset($lst[$min_key]);\n            $min = min($lst);\n        } else\
    \ {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 30


    Warning: min(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 25


    Warning: max(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 30


    Warning: max(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 30


    Warning: max(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 30


    Warning: max(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 30


    Warning: min(): Array must contain at least one element in /tmp/tmp7bpu452p.php
    on line 25

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $sorted = array();\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $sorted[] = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    $lst = array_values($lst);\n    $lst = array_merge($lst, $sorted);\n\
    \    return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkctf108g.php:32\n\
    Stack trace:\n#0 /tmp/tmpkctf108g.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkctf108g.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, array($min, $max));\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqwchazx.php:38\n\
    Stack trace:\n#0 /tmp/tmpyqwchazx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyqwchazx.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpltr1u88p.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_values(array_filter($lst, function($value)\
    \ use ($min, $max) {\n        return $value != $min && $value != $max;\n    }));\n\
    \    if (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0s3eqmy.php:37\n\
    Stack trace:\n#0 /tmp/tmpu0s3eqmy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpu0s3eqmy.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 25\n\nWarning: min(): Array must contain at least one element in /tmp/tmpo0a6wtz2.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0a6wtz2.php:41\n\
    Stack trace:\n#0 /tmp/tmpo0a6wtz2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0a6wtz2.php\
    \ on line 41\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n    $result = array($min,\
    \ $max);\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $lst = array_diff($lst, array($min, $max));\n        $lst\
    \ = array_values($lst);\n        $result = array_merge($result, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7fnz7n0.php:37\n\
    Stack trace:\n#0 /tmp/tmph7fnz7n0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph7fnz7n0.php\
    \ on line 37\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1bh1cbhy.php on line 60

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpomv6x14t.php on line 57

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $min\
    \ = min(array_diff($lst, $result));\n        } else {\n            $result[] =\
    \ $max;\n            $max = max(array_diff($lst, $result));\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmptd8f343n.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd8f343n.php:40\n\
    Stack trace:\n#0 /tmp/tmptd8f343n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptd8f343n.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $min;\n        $min = min(array_diff($lst, $result));\n\
    \        $result[] = $max;\n        $max = max(array_diff($lst, $result));\n \
    \       $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpuqv_m40j.php\
    \ on line 22\n\nWarning: min(): Array must contain at least one element in /tmp/tmpuqv_m40j.php\
    \ on line 20\n\nWarning: max(): Array must contain at least one element in /tmp/tmpuqv_m40j.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqv_m40j.php:34\n\
    Stack trace:\n#0 /tmp/tmpuqv_m40j.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuqv_m40j.php\
    \ on line 34\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $lst[$min_index] = $max;\n  $lst[$max_index] = $min;\n  $result[] = $min;\n\
    \  $result[] = $max;\n  $lst = array_diff($lst, $result);\n  $lst = array_values($lst);\n\
    \  if (count($lst) > 0) {\n    $result = array_merge($result, strange_sort_list($lst));\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5vev3pi.php:36\n\
    Stack trace:\n#0 /tmp/tmp_5vev3pi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_5vev3pi.php\
    \ on line 36\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (!empty($lst)) {\n     \
    \   $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (empty($lst)) {\n            break;\n        }\n \
    \       $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeay3n8m.php:43\n\
    Stack trace:\n#0 /tmp/tmpfeay3n8m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfeay3n8m.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\nArray\n\
    (\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n    [5]\
    \ => 5\n    [6] => 5\n    [7] => 5\n)\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmp696pfitp.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmp696pfitp.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp696pfitp.php:51\nStack trace:\n#0 /tmp/tmp696pfitp.php(61): test()\n\
    #1 {main}\n  thrown in /tmp/tmp696pfitp.php on line 51\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n \
    \       $result[] = $min;\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamy1uq79.php:35\n\
    Stack trace:\n#0 /tmp/tmpamy1uq79.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpamy1uq79.php\
    \ on line 35\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $count = count($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $min\
    \ = min(array_diff($lst, $result));\n        } else {\n            $result[] =\
    \ $max;\n            $max = max(array_diff($lst, $result));\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 21\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmpzvnk55ya.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvnk55ya.php:40\n\
    Stack trace:\n#0 /tmp/tmpzvnk55ya.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpzvnk55ya.php\
    \ on line 40\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, array($min, $max));\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqwchazx.php:38\n\
    Stack trace:\n#0 /tmp/tmpyqwchazx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyqwchazx.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $result\
    \ = array();\n  $min_max = array($min, $max);\n  $i = 0;\n  while (count($lst)\
    \ > 0) {\n    $result[] = $min_max[$i % 2];\n    $lst = array_diff($lst, array($min_max[$i\
    \ % 2]));\n    $i++;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpjlsokemi.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  while (count($lst) > 0) {\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzct4ey08.php:43\n\
    Stack trace:\n#0 /tmp/tmpzct4ey08.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzct4ey08.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) <= 1) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    return array_merge(array($min, $max), strange_sort_list($lst));\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_itpo3ef.php:31\n\
    Stack trace:\n#0 /tmp/tmp_itpo3ef.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_itpo3ef.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst = array();\n\
    \    $new_lst[] = $min;\n    $new_lst[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $new_lst[] = $min;\n        $new_lst[] = $max;\n     \
    \   $lst = array_diff($lst, array($min, $max));\n    }\n    return $new_lst;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp995dmnxj.php:38\n\
    Stack trace:\n#0 /tmp/tmp995dmnxj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp995dmnxj.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $length = count($lst);\n    $i = 0;\n    while ($i < $length)\
    \ {\n        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n   \
    \     $min = min($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        $max = max($lst);\n        $i += 2;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmptfrzo17u.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmptfrzo17u.php\
    \ on line 21\n\nWarning: max(): Array must contain at least one element in /tmp/tmptfrzo17u.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfrzo17u.php:36\n\
    Stack trace:\n#0 /tmp/tmptfrzo17u.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptfrzo17u.php\
    \ on line 36\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  if ($count == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $count--;\n    while ($count > 0) {\n        $max = max($lst);\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$max]);\n        $count--;\n     \
    \   if ($count == 0) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n       \
    \ $count--;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpuzxp769h.php\
    \ on line 24\n\nWarning: min(): Array must contain at least one element in /tmp/tmpuzxp769h.php\
    \ on line 31\n\nWarning: max(): Array must contain at least one element in /tmp/tmpuzxp769h.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzxp769h.php:48\n\
    Stack trace:\n#0 /tmp/tmpuzxp769h.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpuzxp769h.php\
    \ on line 48\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count -= 2;\n    while\
    \ ($count > 0) {\n        $min = min($lst);\n        $max = max($lst);\n     \
    \   $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $count -= 2;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxe91vq6.php:38\n\
    Stack trace:\n#0 /tmp/tmpoxe91vq6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoxe91vq6.php\
    \ on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt4noxlc.php:43\n\
    Stack trace:\n#0 /tmp/tmpgt4noxlc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgt4noxlc.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $res = array();\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $res[] = $min;\n    $res[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_len =\
    \ count($lst);\n    for ($i = 0; $i < $lst_len; $i++) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $res[] = $min;\n     \
    \   $res[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmphelpiex9.php\
    \ on line 25\n\nWarning: max(): Array must contain at least one element in /tmp/tmphelpiex9.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphelpiex9.php:43\n\
    Stack trace:\n#0 /tmp/tmphelpiex9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphelpiex9.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpn6wpnwec.php on line 19

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $lst_length = count($lst);\n\
    \    if ($lst_length == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst_length = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n\
    \    }\n    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $lst_length\
    \ = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst_length = count($lst);\n    if ($lst_length\
    \ == 0) {\n        return $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst_length = count($lst);\n    if ($lst_length == 0) {\n    \
    \    return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_length =\
    \ count($lst);\n    if ($lst_length == 0) {\n        return $result;\n    }\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $lst_length\
    \ = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst_\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps1t7__68.php on line 65

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\nArray\n\
    (\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n    [5]\
    \ => 5\n    [6] => 5\n    [7] => 5\n)\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmp696pfitp.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmp696pfitp.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp696pfitp.php:51\nStack trace:\n#0 /tmp/tmp696pfitp.php(61): test()\n\
    #1 {main}\n  thrown in /tmp/tmp696pfitp.php on line 51\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\n\
    print_r(strange_sort_list($lst));\n\n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 27\nArray\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n\
    )\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 27\nArray\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n\
    )\n\nWarning: min(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 15\nArray\n(\n)\n\nWarning: max(): Array must contain at least one element\
    \ in /tmp/tmp2veek4y0.php on line 27\n\nWarning: min(): Array must contain at\
    \ least one element in /tmp/tmp2veek4y0.php on line 22\n\nWarning: min(): Array\
    \ must contain at least one element in /tmp/tmp2veek4y0.php on line 22\n\nWarning:\
    \ max(): Array must contain at least one element in /tmp/tmp2veek4y0.php on line\
    \ 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 14\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 15\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 27\n\nWarning: max(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 27\n\nWarning: min(): Array must contain at least one element in /tmp/tmp2veek4y0.php\
    \ on line 22\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpa74chyl0.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return array();\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $res = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (!empty($lst)) {\n     \
    \   $max = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (empty($lst)) {\n            break;\n        }\n \
    \       $min = min($lst);\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8otqwap.php:43\n\
    Stack trace:\n#0 /tmp/tmpr8otqwap.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpr8otqwap.php\
    \ on line 43\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) < 2) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $lst = array_values($lst);\n    $lst = array_slice($lst,\
    \ 2);\n    $lst = array_merge(array($min, $max), $lst);\n    return $lst;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8vjhqis.php:33\n\
    Stack trace:\n#0 /tmp/tmps8vjhqis.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps8vjhqis.php\
    \ on line 33\n"
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_index = array_search($min,\
    \ $lst);\n            unset($lst[$min_index]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_index = array_search($max,\
    \ $lst);\n            unset($lst[$max_index]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpll2mskjo.php
    on line 22

    '
  timestamp: 1659730627
- exit_code: 0
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return array();\n\
    \    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $lst_len = count($lst);\n    $result = array();\n\
    \    $i = 0;\n    while ($i < $lst_len) {\n        $min = min($lst);\n       \
    \ $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n  \
    \      $lst = array_diff($lst, array($min, $max));\n        $i += 2;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyr89xoc.php:33\n\
    Stack trace:\n#0 /tmp/tmpcyr89xoc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcyr89xoc.php\
    \ on line 33\n"
  timestamp: 1659730627

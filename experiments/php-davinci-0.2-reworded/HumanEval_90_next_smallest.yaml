name: HumanEval_90_next_smallest
language: php
prompt: "<?php\n// You are given an array of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n// Return null if there is\
  \ no such element.\n// >>> next_smallest(array(1, 2, 3, 4, 5))\n// 2\n// >>> next_smallest(array(5,\
  \ 1, 4, 3, 2))\n// 2\n// >>> next_smallest(array())\n// null\n// >>> next_smallest(array(1,\
  \ 1))\n// null\nfunction next_smallest($lst) {\n"
tests: "function candidate(...$args) {\n    return next_smallest(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 4, 3, 2)) !==\
  \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1))\
  \ !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1, 1, 1, 0)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-35,\
  \ 34, 12, -45)) !== -35) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (count($lst) < 2) {\n        return null;\n    }\n    $min =\
    \ $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n \
    \           $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] > $min && ($second_min === null || $lst[$i]\
    \ < $second_min)) {\n            $second_min = $lst[$i];\n        }\n    }\n \
    \   return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $sec_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $sec_min = $min;\n    \
    \        $min = $lst[$i];\n        } else if ($lst[$i] < $sec_min || $sec_min\
    \ === null) {\n            $sec_min = $lst[$i];\n        }\n    }\n    return\
    \ $sec_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $second_smallest || $second_smallest === null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($smallest === null) {\n\
    \            $smallest = $item;\n        } else if ($item < $smallest) {\n   \
    \         $second_smallest = $smallest;\n            $smallest = $item;\n    \
    \    } else if ($second_smallest === null || $item < $second_smallest) {\n   \
    \         $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (empty($lst)) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $lst = array_diff($lst, array($min));\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $v) {\n    \
    \    if ($v == $min) {\n            $min_count++;\n        }\n    }\n    if ($min_count\
    \ > 1) {\n        return null;\n    }\n    $min_index = array_search($min, $lst);\n\
    \    $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return\
    \ min($lst);\n}\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst,\
    \ $min));\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = null;\n    return min($lst);\n\
    }\n", "\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$min = $lst[0];\n\t\
    $min2 = null;\n\tforeach ($lst as $n) {\n\t\tif ($n < $min) {\n\t\t\t$min2 = $min;\n\
    \t\t\t$min = $n;\n\t\t} else if ($n < $min2 || $min2 === null) {\n\t\t\t$min2\
    \ = $n;\n\t\t}\n\t}\n\treturn $min2;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst_copy = $lst;\n\
    \    unset($lst_copy[$min_index]);\n    return min($lst_copy);\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min || $second_min === null) {\n         \
    \   $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n",
  "    $smallest = $lst[0];\n    $second_smallest = null;\n    foreach ($lst as $item)\
    \ {\n        if ($item < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($item > $smallest && ($second_smallest\
    \ === null || $item < $second_smallest)) {\n            $second_smallest = $item;\n\
    \        }\n    }\n    return $second_smallest;\n}\n", "  if (count($lst) < 2)\
    \ {\n    return null;\n  }\n  $smallest = $lst[0];\n  $second_smallest = null;\n\
    \  for ($i = 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $smallest) {\n \
    \     $second_smallest = $smallest;\n      $smallest = $lst[$i];\n    } else if\
    \ ($lst[$i] < $second_smallest || $second_smallest == null) {\n      $second_smallest\
    \ = $lst[$i];\n    }\n  }\n  return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n      \
    \  if ($lst[$i] < $min) {\n            $next_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $next_min) {\n            $next_min = $lst[$i];\n\
    \        }\n    }\n    return $next_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $min = $lst[0];\n    $min2 = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($min2 === null ||\
    \ $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    $min = min($lst);\n    $lst = array_diff($lst, array($min));\n\
    \    if (count($lst) > 0) {\n        return min($lst);\n    } else {\n       \
    \ return null;\n    }\n}\n", "    $min = min($lst);\n    $min_count = 0;\n   \
    \ $second_min = null;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        } else if ($second_min == null || $item\
    \ < $second_min) {\n            $second_min = $item;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $sec = null;\n\
    \    foreach ($lst as $e) {\n        if ($e < $min) {\n            $sec = $min;\n\
    \            $min = $e;\n        } else if ($e < $sec || $sec === null) {\n  \
    \          $sec = $e;\n        }\n    }\n    return $sec;\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $num) {\n\
    \        if ($num == $min) {\n            $min_count++;\n        } elseif ($second_min\
    \ == null || $num < $second_min) {\n            $second_min = $num;\n        }\n\
    \    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i = 1; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($min2 === null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    if (count($lst)\
    \ == 0) {\n        return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = $min;\n    foreach ($lst as $el) {\n        if ($el > $min && $el\
    \ < $min2) {\n            $min2 = $el;\n        }\n    }\n    if ($min2 == $min)\
    \ {\n        return null;\n    }\n    return $min2;\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count >= 2) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst = array_slice($lst, $min_index + 1);\n    $next_min = min($lst);\n    return\
    \ $next_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n", "    $min = null;\n    $second_min\
    \ = null;\n    foreach ($lst as $item) {\n        if ($min === null || $item <\
    \ $min) {\n            $second_min = $min;\n            $min = $item;\n      \
    \  } else if ($second_min === null || $item < $second_min) {\n            $second_min\
    \ = $item;\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $nmin = null;\n\
    \    foreach ($lst as $i) {\n        if ($i < $min) {\n            $nmin = $min;\n\
    \            $min = $i;\n        } else if ($i > $min && ($nmin === null || $i\
    \ < $nmin)) {\n            $nmin = $i;\n        }\n    }\n    return $nmin;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } elseif ($lst[$i] <\
    \ $second_smallest || $second_smallest === null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n\
    \    $second_min = null;\n    foreach ($lst as $num) {\n        if ($num == $min)\
    \ {\n            $min_count++;\n        } else if ($second_min == null || $num\
    \ < $second_min) {\n            $second_min = $num;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = $min;\n    foreach ($lst as $v) {\n        if ($v > $min && $v <\
    \ $min2) {\n            $min2 = $v;\n        }\n    }\n    if ($min2 == $min)\
    \ {\n        return null;\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    foreach ($lst as $i) {\n        if ($i < $min) {\n            $second_min\
    \ = $min;\n            $min = $i;\n        } else if ($i < $second_min || $second_min\
    \ === null) {\n            $second_min = $i;\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $i) {\n        if ($i > $min) {\n   \
    \         if ($min2 === null || $i < $min2) {\n                $min2 = $i;\n \
    \           }\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = min($lst);\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($item > $smallest) {\n \
    \           if ($second_smallest === null || $item < $second_smallest) {\n   \
    \             $second_smallest = $item;\n            }\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $smallest\
    \ = null;\n    $second_smallest = null;\n    foreach ($lst as $item) {\n     \
    \   if ($smallest === null || $item < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $item;\n        } else if ($second_smallest\
    \ === null || $item < $second_smallest) {\n            $second_smallest = $item;\n\
    \        }\n    }\n    return $second_smallest;\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n\
    \        if ($item == $min) {\n            $min_count++;\n        } else if ($second_min\
    \ == null || $item < $second_min) {\n            $second_min = $item;\n      \
    \  }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst,\
    \ $min));\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return\
    \ min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\
    \\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst\
    \ = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $min_count++;\n     \
    \   }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i =\
    \ 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    $min = min($lst);\n    $lst = array_unique($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    if (empty($lst)) {\n        return null;\n    }\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as $item)\
    \ {\n        if ($item > $min) {\n            if ($min2 === null || $item < $min2)\
    \ {\n                $min2 = $item;\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n    \
    \    if ($item == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count >= 2) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $i) {\n        if ($smallest === null || $i <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $i;\n        } else if ($second_smallest === null || $i < $second_smallest)\
    \ {\n            $second_smallest = $i;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $item) {\n        if ($item > $min) {\n            if ($min2\
    \ === null || $item < $min2) {\n                $min2 = $item;\n            }\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $v) {\n        if ($v > $min) {\n            if ($min2 === null ||\
    \ $v < $min2) {\n                $min2 = $v;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min2 = $min;\n    foreach ($lst as $item)\
    \ {\n        if ($item > $min && $item < $min2) {\n            $min2 = $item;\n\
    \        }\n    }\n    if ($min2 == $min) {\n        return null;\n    }\n   \
    \ return $min2;\n}\n", "\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$min\
    \ = min($lst);\n\t$min_index = array_search($min, $lst);\n\tunset($lst[$min_index]);\n\
    \treturn min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $num) {\n        if ($num > $min && ($min2\
    \ === null || $num < $min2)) {\n            $min2 = $num;\n        }\n    }\n\
    \    return $min2;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach\
    \ ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $min_index = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n\
    \    return min($lst);\n}\n", "    $min = null;\n    $min2 = null;\n    foreach\
    \ ($lst as $x) {\n        if ($min == null || $x < $min) {\n            $min2\
    \ = $min;\n            $min = $x;\n        } else if ($min2 == null || $x < $min2)\
    \ {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n}\n", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n \
    \   $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n \
    \   }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count == count($lst)) {\n        return null;\n    }\n    $lst =\
    \ array_diff($lst, array($min));\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    $min = $lst[0];\n    $min2 = null;\n    foreach\
    \ ($lst as $e) {\n        if ($e < $min) {\n            $min2 = $min;\n      \
    \      $min = $e;\n        } else if ($e < $min2 || $min2 === null) {\n      \
    \      $min2 = $e;\n        }\n    }\n    return $min2;\n}\n", "  $smallest =\
    \ null;\n  $next_smallest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null) {\n      $smallest = $item;\n    } elseif ($item < $smallest) {\n\
    \      $next_smallest = $smallest;\n      $smallest = $item;\n    } elseif ($next_smallest\
    \ === null || $item < $next_smallest) {\n      $next_smallest = $item;\n    }\n\
    \  }\n  return $next_smallest;\n}\n", "    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = $lst[0];\n    $second_min\
    \ = null;\n    foreach ($lst as $item) {\n        if ($item < $min) {\n      \
    \      $second_min = $min;\n            $min = $item;\n        } else if ($item\
    \ < $second_min || $second_min === null) {\n            $second_min = $item;\n\
    \        }\n    }\n    return $second_min;\n}\n\n$lst = [1, 2, 3, 4, 5];\n$lst\
    \ = [5, 1, 4, 3, 2];\n$lst = [];\n$lst = [1, 1];\n\necho next_smallest($lst);",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n", "  if (count($lst) < 2) {\n  \
    \  return null;\n  }\n  $min = $lst[0];\n  $second_min = null;\n  for ($i = 1;\
    \ $i < count($lst); $i++) {\n    if ($lst[$i] < $min) {\n      $second_min = $min;\n\
    \      $min = $lst[$i];\n    } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n      $second_min = $lst[$i];\n    }\n  }\n  return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "\tif (count($lst) < 2) {\n\t\treturn null;\n\t}\n\t$min = min($lst);\n\t\
    $min_index = array_search($min, $lst);\n\tunset($lst[$min_index]);\n\treturn min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    $min = null;\n    $min2 = null;\n    foreach ($lst as $n) {\n     \
    \   if ($min === null || $n < $min) {\n            $min2 = $min;\n           \
    \ $min = $n;\n        } else if ($min2 === null || $n < $min2) {\n           \
    \ $min2 = $n;\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n       \
    \     $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n          \
    \  $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $num)\
    \ {\n        if ($num == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n\
    }\n", "  if (count($lst) < 2) {\n    return null;\n  }\n  $min = $lst[0];\n  $second_min\
    \ = null;\n  for ($i = 1; $i < count($lst); $i++) {\n    if ($lst[$i] < $min)\
    \ {\n      $second_min = $min;\n      $min = $lst[$i];\n    } else if ($lst[$i]\
    \ < $second_min || $second_min === null) {\n      $second_min = $lst[$i];\n  \
    \  }\n  }\n  return $second_min;\n}\n", "    $min = min($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n   \
    \     return null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = PHP_INT_MAX;\n    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . PHP_EOL;\n$lst\
    \ = [];\necho next_smallest($lst) . PHP_EOL;\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . PHP_EOL;", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $second_min = min($lst);\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_idx = array_search($min,\
    \ $lst);\n    unset($lst[$min_idx]);\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $idx = array_search($min, $lst);\n    unset($lst[$idx]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($min2 === null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min_idx = array_search($min,\
    \ $lst);\n    unset($lst[$min_idx]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "    $count = count($lst);\n    if ($count < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second = null;\n    for ($i = 1; $i < $count;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second = $min;\n     \
    \       $min = $lst[$i];\n        } else if ($lst[$i] < $second || $second ===\
    \ null) {\n            $second = $lst[$i];\n        }\n    }\n    return $second;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $min_count++;\n     \
    \   }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return\
    \ min($lst);\n}\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst,\
    \ $min));\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return\
    \ min($lst);\n}\n", "    $sorted = $lst;\n    sort($sorted);\n    $smallest =\
    \ $sorted[0];\n    $second_smallest = null;\n    foreach ($sorted as $item) {\n\
    \        if ($item == $smallest) {\n            continue;\n        }\n       \
    \ $second_smallest = $item;\n        break;\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst = array_slice($lst,\
    \ $min_index + 1);\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $e) {\n        if ($e > $min) {\n            if ($min2 === null || $e < $min2)\
    \ {\n                $min2 = $e;\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = $lst[0];\n    $sec = $lst[1];\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $sec = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $sec) {\n            $sec = $lst[$i];\n\
    \        }\n    }\n    return $sec;\n}\n", "    $min = min($lst);\n    $lst =\
    \ array_diff($lst, array($min));\n    if (empty($lst)) {\n        return null;\n\
    \    }\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $next_min)\
    \ {\n            $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst,\
    \ $min));\n    if ($min_count >= 2) {\n        return null;\n    }\n    $lst =\
    \ array_diff($lst, array($min));\n    return min($lst);\n}\n", "    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    $len = count($lst);\n    if ($len < 2) {\n        return null;\n  \
    \  }\n    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i = 1; $i < $len;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n \
    \           $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";\n", "    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) return null;\n    $min = min($lst);\n    $min_idx = array_search($min,\
    \ $lst);\n    unset($lst[$min_idx]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } elseif ($lst[$i] <\
    \ $second_smallest || $second_smallest === null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n \
    \   for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n \
    \           $second_min = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n\
    \        if ($item == $min) {\n            $min_count++;\n        } else if ($second_min\
    \ == null || $item < $second_min) {\n            $second_min = $item;\n      \
    \  }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach\
    \ ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n  \
    \  $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2\
    \ = min($lst);\n    return $min2;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    if (count($lst)\
    \ == 0) {\n        return null;\n    }\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    if (count($lst)\
    \ == 0) {\n        return null;\n    }\n    return min($lst);\n}\n", "    $min\
    \ = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ == null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    $min_index = 0;\n    foreach\
    \ ($lst as $key => $value) {\n        if ($value == $min) {\n            $min_count++;\n\
    \            $min_index = $key;\n        }\n    }\n    if ($min_count == 1) {\n\
    \        $lst[$min_index] = PHP_INT_MAX;\n        return min($lst);\n    } else\
    \ {\n        return null;\n    }\n}\n", "    $min = min($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n", "    $smallest = null;\n    $second_smallest = null;\n\
    \    foreach ($lst as $num) {\n        if ($smallest === null) {\n           \
    \ $smallest = $num;\n        } else if ($num < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $num;\n        } else if ($second_smallest\
    \ === null || $num < $second_smallest) {\n            $second_smallest = $num;\n\
    \        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $next_smallest\
    \ = null;\n    foreach ($lst as $val) {\n        if ($val < $smallest) {\n   \
    \         $next_smallest = $smallest;\n            $smallest = $val;\n       \
    \ } else if ($val < $next_smallest || $next_smallest === null) {\n           \
    \ $next_smallest = $val;\n        }\n    }\n    return $next_smallest;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n    \
    \    if ($item == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = null;\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($min2\
    \ === null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n\
    \    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] > $min && ($second_min\
    \ === null || $lst[$i] < $second_min)) {\n            $second_min = $lst[$i];\n\
    \        }\n    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst\
    \ as $item) {\n        if ($item > $min) {\n            if ($min2 === null ||\
    \ $item < $min2) {\n                $min2 = $item;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $min2 = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($min2 === null || $lst[$i] < $min2)\
    \ {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $min2 =\
    \ $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n\
    \            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", " \
    \   $smallest = null;\n    $second_smallest = null;\n    foreach ($lst as $item)\
    \ {\n        if ($smallest === null) {\n            $smallest = $item;\n     \
    \   } else if ($item < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($second_smallest === null)\
    \ {\n            $second_smallest = $item;\n        } else if ($item < $second_smallest)\
    \ {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $smallest = null;\n    $next_smallest = null;\n    foreach ($lst as\
    \ $item) {\n        if ($smallest === null) {\n            $smallest = $item;\n\
    \        } else if ($item < $smallest) {\n            $next_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($next_smallest === null ||\
    \ $item < $next_smallest) {\n            $next_smallest = $item;\n        }\n\
    \    }\n    return $next_smallest;\n}\n", "    if (count($lst) < 2) {\n      \
    \  return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i\
    \ = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n           \
    \ $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $min2)\
    \ {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $lst = array_diff($lst, array($min));\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($min2 === null || $lst[$i] < $min2) {\n    \
    \        $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", "    if\
    \ (count($lst) <= 1) {\n        return null;\n    }\n    $min = $lst[0];\n   \
    \ $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n \
    \   }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n            $min2\
    \ = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $num) {\n        if ($smallest === null || $num\
    \ < $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $num;\n        } else if ($second_smallest === null || $num < $second_smallest)\
    \ {\n            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n    return\
    \ min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . \"\\n\";\n$lst = [];\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n\
    \    $second_min = min($lst);\n    return $second_min;\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $val) {\n        if ($val == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $lst = array_diff($lst, array($min));\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n", "    $min = $lst[0];\n    $min2 = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item < $min) {\n            $min2 = $min;\n\
    \            $min = $item;\n        } else if ($item < $min2 || $min2 === null)\
    \ {\n            $min2 = $item;\n        }\n    }\n    return $min2;\n}\n", " \
    \   $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n", "    $smallest\
    \ = null;\n    $second_smallest = null;\n    foreach ($lst as $item) {\n     \
    \   if ($smallest === null) {\n            $smallest = $item;\n        } else\
    \ if ($item < $smallest) {\n            $second_smallest = $smallest;\n      \
    \      $smallest = $item;\n        } else if ($second_smallest === null) {\n \
    \           $second_smallest = $item;\n        } else if ($item < $second_smallest)\
    \ {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = $lst[0];\n    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n\
    \        if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($min2 === null || $lst[$i] < $min2) {\n      \
    \      $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n\
    \    $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n    \
    \    return null;\n    }\n    return min($lst);\n}\n", "    $min = $lst[0];\n\
    \    $second_min = null;\n    foreach ($lst as $num) {\n        if ($num < $min)\
    \ {\n            $second_min = $min;\n            $min = $num;\n        } else\
    \ if ($num < $second_min) {\n            $second_min = $num;\n        }\n    }\n\
    \    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n            $min2\
    \ = $lst[$i];\n        }\n    }\n    return $min2;\n}\n", "    $min = $lst[0];\n\
    \    $next_min = null;\n    foreach ($lst as $num) {\n        if ($num < $min)\
    \ {\n            $next_min = $min;\n            $min = $num;\n        } else if\
    \ ($num < $next_min) {\n            $next_min = $num;\n        }\n    }\n    return\
    \ $next_min;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $num) {\n        if ($num == $min) {\n            $min_count++;\n       \
    \ }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst = array_slice($lst, $min_index + 1);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach\
    \ ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $lst_without_min = array_diff($lst, array($min));\n    if (count($lst_without_min)\
    \ == 0) {\n        return null;\n    }\n    return min($lst_without_min);\n}\n",
  "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n   \
    \     if ($item == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    $smallest = null;\n    $next_smallest = null;\n    foreach ($lst as\
    \ $num) {\n        if ($smallest === null) {\n            $smallest = $num;\n\
    \        } else if ($num < $smallest) {\n            $next_smallest = $smallest;\n\
    \            $smallest = $num;\n        } else if ($next_smallest === null ||\
    \ $num < $next_smallest) {\n            $next_smallest = $num;\n        }\n  \
    \  }\n    return $next_smallest;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach ($lst as\
    \ $e) {\n        if ($e > $min) {\n            if ($min2 === null || $e < $min2)\
    \ {\n                $min2 = $e;\n            }\n        }\n    }\n    return\
    \ $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } else if ($min2 === null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n    \
    \    return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $i) {\n        if ($i > $min) {\n            if ($min2 === null ||\
    \ $i < $min2) {\n                $min2 = $i;\n            }\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";\n", "\tif (count($lst) < 2) {\n\t\treturn\
    \ null;\n\t}\n\t$min = $lst[0];\n\t$min2 = null;\n\tfor ($i = 1; $i < count($lst);\
    \ $i++) {\n\t\tif ($lst[$i] < $min) {\n\t\t\t$min2 = $min;\n\t\t\t$min = $lst[$i];\n\
    \t\t} else if ($lst[$i] < $min2 || $min2 == null) {\n\t\t\t$min2 = $lst[$i];\n\
    \t\t}\n\t}\n\treturn $min2;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    $min = min($lst);\n    $lst = array_diff($lst, array($min));\n    if\
    \ (count($lst) == 0) {\n        return null;\n    }\n    return min($lst);\n}\n",
  "    $smallest = $lst[0];\n    $second_smallest = null;\n    foreach ($lst as $num)\
    \ {\n        if ($num < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $num;\n        } else if ($num < $second_smallest) {\n\
    \            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count >= 2) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $min = min($lst);\n    $min_idx = array_search($min,\
    \ $lst);\n    unset($lst[$min_idx]);\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n\
    $lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho\
    \ next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $smallest = $lst[0];\n    $next_smallest = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n  \
    \          $next_smallest = $smallest;\n            $smallest = $lst[$i];\n  \
    \      } else if ($lst[$i] < $next_smallest || $next_smallest == null) {\n   \
    \         $next_smallest = $lst[$i];\n        }\n    }\n    return $next_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\n    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n\n    return $min2;\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "  if (count($lst) < 2) {\n    return null;\n  }\n \
    \ $min = min($lst);\n  $min_idx = array_search($min, $lst);\n  array_splice($lst,\
    \ $min_idx, 1);\n  return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\nprint_r(next_smallest($lst));\n\
    \n$lst = array(5, 1, 4, 3, 2);\nprint_r(next_smallest($lst));\n\n$lst = array();\n\
    print_r(next_smallest($lst));\n\n$lst = array(1, 1);\nprint_r(next_smallest($lst));",
  "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n   \
    \     if ($item == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n\
    }\n", "    $smallest = null;\n    $next_smallest = null;\n    foreach ($lst as\
    \ $item) {\n        if ($smallest === null) {\n            $smallest = $item;\n\
    \        } else if ($item < $smallest) {\n            $next_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($next_smallest === null ||\
    \ $item < $next_smallest) {\n            $next_smallest = $item;\n        }\n\
    \    }\n    return $next_smallest;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

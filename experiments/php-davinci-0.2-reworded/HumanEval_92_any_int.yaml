name: HumanEval_92_any_int
language: php
prompt: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if one\
  \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n// true\n\
  // >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n// >>> any_int(3.6,\
  \ -2.2, 2)\n// false\nfunction any_int($x, $y, $z) {\n"
tests: "function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x ==\
    \ $y + $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho\
    \ any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;", "    if (is_int($x) && is_int($y) && is_int($z)) {\n \
    \       if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nvar_dump(any_int(5, 2, 7));\n\
    var_dump(any_int(3, 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6,\
    \ -2.2, 2));", "    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y\
    \ == $z || $x + $z == $y || $y + $z == $x);\n}\n", "    if (is_int($x) && is_int($y)\
    \ && is_int($z)) {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\necho\
    \ any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;", "    if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        if ($x == $y + $z || $y == $x + $z ||\
    \ $z == $x + $y) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho\
    \ any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n", "  \
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3,\
    \ 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2,\
    \ 2) . PHP_EOL;", "    if (is_int($x) && is_int($y) && is_int($z)) {\n       \
    \ if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\n\
    echo any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;", "    if (is_int($x) && is_int($y) && is_int($z)) {\n \
    \       if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\necho any_int(3, -2, 1);", " \
    \   if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n", "    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        }\n    }\n    return false;\n}\n\necho any_int(5, 2,\
    \ 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\
    \\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n", "    if (is_int($x) && is_int($y)\
    \ && is_int($z)) {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n", "    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        }\n    }\n    return false;\n}\n\necho any_int(5, 2,\
    \ 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\
    \\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n", "    if (is_int($x) && is_int($y)\
    \ && is_int($z)) {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n   \
    \ }\n    return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3,\
    \ 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2,\
    \ 2) . PHP_EOL;", "    if (is_int($x) && is_int($y) && is_int($z)) {\n       \
    \ if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\necho any_int(3, -2, 1);", "    if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        if ($x + $y == $z || $x + $z == $y ||\
    \ $y + $z == $x) {\n            return true;\n        }\n    }\n    return false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";", "    if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        if ($x == $y + $z || $y == $x + $z ||\
    \ $z == $x + $y) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho\
    \ any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";", "    return\
    \ (is_int($x) && is_int($y) && is_int($z)) &&\n        (($x + $y == $z) || ($x\
    \ + $z == $y) || ($y + $z == $x));\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho\
    \ any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;", "    if (is_int($x) && is_int($y) && is_int($z)) {\n \
    \       if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\n\
    echo any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

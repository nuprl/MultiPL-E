language: php
name: HumanEval_102_choose_num
results:
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\treturn choose_num($x\
    \ + 1, $y);\n\t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa562mzjb.php:23\n\
    Stack trace:\n#0 /tmp/tmpa562mzjb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa562mzjb.php\
    \ on line 23\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdayf797r.php:24\n\
    Stack trace:\n#0 /tmp/tmpdayf797r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdayf797r.php\
    \ on line 24\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  if ($x % 2\
    \ == 0) {\n    return $x;\n  } else if ($x % 2 == 1) {\n    $x++;\n    if ($x\
    \ > $y) {\n      return -1;\n    } else {\n      return $x;\n    }\n  }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62stj577.php:32\n\
    Stack trace:\n#0 /tmp/tmp62stj577.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp62stj577.php\
    \ on line 32\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwnuba_d.php:18\n\
    Stack trace:\n#0 /tmp/tmpbwnuba_d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbwnuba_d.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfg7yvtcm.php:18\n\
    Stack trace:\n#0 /tmp/tmpfg7yvtcm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfg7yvtcm.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqpohet0.php:19\n\
    Stack trace:\n#0 /tmp/tmpsqpohet0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsqpohet0.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfm6itb4b.php:19\n\
    Stack trace:\n#0 /tmp/tmpfm6itb4b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfm6itb4b.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r831zsx.php:19\n\
    Stack trace:\n#0 /tmp/tmp2r831zsx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2r831zsx.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n        }\n    }\n\
    \    return $biggest;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 ==\
    \ $y) {\n        return -1;\n    } else {\n        return choose_num($x + 1, $y);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3avgxds.php:25\n\
    Stack trace:\n#0 /tmp/tmpr3avgxds.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr3avgxds.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    }\n    else if ($x +\
    \ 1 <= $y) {\n        return $x + 1;\n    }\n    else {\n        return -1;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5x2kgsfp.php:26\n\
    Stack trace:\n#0 /tmp/tmp5x2kgsfp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5x2kgsfp.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwcfiny.php:19\n\
    Stack trace:\n#0 /tmp/tmpabwcfiny.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpabwcfiny.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: write your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4iasb2j.php:19\n\
    Stack trace:\n#0 /tmp/tmpp4iasb2j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp4iasb2j.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n        }\n    }\n\
    \    return $biggest;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Write your code here\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 != 0 && $y % 2 == 0) {\n        return $y;\n    }\
    \ else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiq89yh00.php:26\n\
    Stack trace:\n#0 /tmp/tmpiq89yh00.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiq89yh00.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\nchoose_num(12,\
    \ 15);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9ivaeng.php:30\n\
    Stack trace:\n#0 /tmp/tmpz9ivaeng.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz9ivaeng.php\
    \ on line 30\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x++;\n   \
    \     if ($x > $y) {\n            return -1;\n        } else {\n            return\
    \ $x;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tpdm33y.php:32\n\
    Stack trace:\n#0 /tmp/tmp5tpdm33y.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5tpdm33y.php\
    \ on line 32\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    $biggest = -1;\n    for ($i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n\
    \        }\n    }\n    return $biggest;\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\
    \ else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61snreoo.php:26\n\
    Stack trace:\n#0 /tmp/tmp61snreoo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp61snreoo.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr17ruu12.php:19\n\
    Stack trace:\n#0 /tmp/tmpr17ruu12.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr17ruu12.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x += 1;\n\
    \    }\n    if ($x > $y) {\n        return -1;\n    }\n    return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pkpj8nb.php:30\n\
    Stack trace:\n#0 /tmp/tmp9pkpj8nb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9pkpj8nb.php\
    \ on line 30\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result = $i;\n        }\n    }\n    print $result;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparm9jfj9.php:29\n\
    Stack trace:\n#0 /tmp/tmparm9jfj9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmparm9jfj9.php\
    \ on line 29\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $even = $i;\n        }\n    }\n    return $even;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\
    \ else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp6_bu7d.php:26\n\
    Stack trace:\n#0 /tmp/tmpfp6_bu7d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfp6_bu7d.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n        }\n    }\n\
    \    return $biggest;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: implement this function\n    if ($x > $y) {\n        return\
    \ -1;\n    }\n    if ($x % 2 == 0) {\n        return $x;\n    }\n    if ($x %\
    \ 2 == 1) {\n        return $x + 1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnn6a7p4.php:28\n\
    Stack trace:\n#0 /tmp/tmpbnn6a7p4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbnn6a7p4.php\
    \ on line 28\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1) {\n        $x = $x + 1;\n        return $x;\n\
    \    }\n    if ($y % 2 == 0) {\n        return $y;\n    } else if ($y % 2 == 1)\
    \ {\n        $y = $y - 1;\n        return $y;\n    }\n    if ($x > $y) {\n   \
    \     return -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozvohgdo.php:34\n\
    Stack trace:\n#0 /tmp/tmpozvohgdo.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpozvohgdo.php\
    \ on line 34\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = $x;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            if ($i > $max) {\n                $max = $i;\n            }\n\
    \        }\n    }\n    if ($max == $x) {\n        print -1;\n    } else {\n  \
    \      print $max;\n    }\n}\n\nchoose_num(12, 15);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxyi6su7.php:36\n\
    Stack trace:\n#0 /tmp/tmpmxyi6su7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmxyi6su7.php\
    \ on line 36\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\n$__fp = fopen(\"\
    php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n\
    \nchoose_num($_x, $_y);\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttxcai6l.php:36\n\
    Stack trace:\n#0 /tmp/tmpttxcai6l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpttxcai6l.php\
    \ on line 36\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr17ruu12.php:19\n\
    Stack trace:\n#0 /tmp/tmpr17ruu12.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr17ruu12.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\
    \ else {\n        return -1;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb4cuhhe.php:25\n\
    Stack trace:\n#0 /tmp/tmpbb4cuhhe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbb4cuhhe.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$biggest = $i;\n\t\t}\n\t}\n\treturn $biggest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwcfiny.php:19\n\
    Stack trace:\n#0 /tmp/tmpabwcfiny.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpabwcfiny.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrcdtup6.php:19\n\
    Stack trace:\n#0 /tmp/tmphrcdtup6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphrcdtup6.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n  if ($x % 2 == 0) {\n    return $x;\n  } else if\
    \ ($x % 2 == 1 && $y % 2 == 0) {\n    return $y;\n  } else {\n    return -1;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp07iwx7x.php:26\n\
    Stack trace:\n#0 /tmp/tmpp07iwx7x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp07iwx7x.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$i = $x;\n\twhile ($i <= $y) {\n\t\tif ($i % 2 == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i++;\n\t}\n\treturn -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnugehg9.php:26\n\
    Stack trace:\n#0 /tmp/tmpxnugehg9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxnugehg9.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: implement this function\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gyxfl_x.php:18\n\
    Stack trace:\n#0 /tmp/tmp_gyxfl_x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_gyxfl_x.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1) {\n        $x = $x + 1;\n        return $x;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ev983iu.php:24\n\
    Stack trace:\n#0 /tmp/tmp2ev983iu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2ev983iu.php\
    \ on line 24\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1) {\n        $x = $x + 1;\n        return $x;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjz0s02c.php:25\n\
    Stack trace:\n#0 /tmp/tmpnjz0s02c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnjz0s02c.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x > $y) {\n        return -1;\n    }\n    for ($i = $y; $i >= $x; $i--)\
    \ {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n    }\n  \
    \  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result = $i;\n        }\n    }\n    print $result;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparm9jfj9.php:29\n\
    Stack trace:\n#0 /tmp/tmparm9jfj9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmparm9jfj9.php\
    \ on line 29\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3kl4cvw.php:19\n\
    Stack trace:\n#0 /tmp/tmpx3kl4cvw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx3kl4cvw.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Fill in the code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq34ztzy9.php:19\n\
    Stack trace:\n#0 /tmp/tmpq34ztzy9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq34ztzy9.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxekzm89.php:18\n\
    Stack trace:\n#0 /tmp/tmpjxekzm89.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjxekzm89.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  $max = -1;\n\
    \  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      $max = $i;\n\
    \    }\n  }\n  print $max;\n}\n\nchoose_num(12, 15);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_7v76cy.php:30\n\
    Stack trace:\n#0 /tmp/tmpn_7v76cy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn_7v76cy.php\
    \ on line 30\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotd_ix8z.php:18\n\
    Stack trace:\n#0 /tmp/tmpotd_ix8z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpotd_ix8z.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        $x += 1;\n        if ($x <= $y) {\n            return\
    \ $x;\n        } else {\n            return -1;\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgksc_nio.php:28\n\
    Stack trace:\n#0 /tmp/tmpgksc_nio.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgksc_nio.php\
    \ on line 28\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ choose_num($x + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporwxw9eh.php:23\n\
    Stack trace:\n#0 /tmp/tmporwxw9eh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmporwxw9eh.php\
    \ on line 23\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x > $y) {\n        return\
    \ -1;\n    }\n    if ($x % 2 == 0) {\n        return $x;\n    }\n    return choose_num($x\
    \ + 1, $y);\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc8uxwca.php:26\n\
    Stack trace:\n#0 /tmp/tmpvc8uxwca.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvc8uxwca.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfm6itb4b.php:19\n\
    Stack trace:\n#0 /tmp/tmpfm6itb4b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfm6itb4b.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr17ruu12.php:19\n\
    Stack trace:\n#0 /tmp/tmpr17ruu12.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr17ruu12.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqq2nsytj.php:19\n\
    Stack trace:\n#0 /tmp/tmpqq2nsytj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqq2nsytj.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if($x % 2 == 0){\n        return $x;\n    }\n    if($y % 2 == 0){\n     \
    \   return $y;\n    }\n    return -1;\n}\n\n$__fp = fopen(\"php://stdin\", \"\
    r\");\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n$res = choose_num($_x,\
    \ $_y);\nprint($res);\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmp85df7.php:36\n\
    Stack trace:\n#0 /tmp/tmpdmp85df7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdmp85df7.php\
    \ on line 36\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_41b40oa.php:18\n\
    Stack trace:\n#0 /tmp/tmp_41b40oa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_41b40oa.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwv7tyup.php:18\n\
    Stack trace:\n#0 /tmp/tmpxwv7tyup.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxwv7tyup.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\t$x++;\n\t\tif ($x\
    \ > $y) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn $x;\n\t\t}\n\t}\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw7ti_t0.php:28\n\
    Stack trace:\n#0 /tmp/tmpxw7ti_t0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxw7ti_t0.php\
    \ on line 28\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x++;\n\
    \        if ($x > $y) {\n            return -1;\n        } else {\n          \
    \  return $x;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph84ghq8o.php:28\n\
    Stack trace:\n#0 /tmp/tmph84ghq8o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph84ghq8o.php\
    \ on line 28\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwnuba_d.php:18\n\
    Stack trace:\n#0 /tmp/tmpbwnuba_d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbwnuba_d.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxaquucc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjxaquucc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjxaquucc.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    $biggestEven = -1;\n    for ($i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggestEven\
    \ = $i;\n        }\n    }\n    return $biggestEven;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdayf797r.php:24\n\
    Stack trace:\n#0 /tmp/tmpdayf797r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdayf797r.php\
    \ on line 24\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x += 1;\n\
    \    }\n    if ($x > $y) {\n        return -1;\n    } else {\n        return $x;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcvbg3lt.php:32\n\
    Stack trace:\n#0 /tmp/tmpvcvbg3lt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvcvbg3lt.php\
    \ on line 32\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gcza7wq.php:19\n\
    Stack trace:\n#0 /tmp/tmp3gcza7wq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3gcza7wq.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwnuba_d.php:18\n\
    Stack trace:\n#0 /tmp/tmpbwnuba_d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbwnuba_d.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfm6itb4b.php:19\n\
    Stack trace:\n#0 /tmp/tmpfm6itb4b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfm6itb4b.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwnuba_d.php:18\n\
    Stack trace:\n#0 /tmp/tmpbwnuba_d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbwnuba_d.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Your code here!\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl1yel9_.php:18\n\
    Stack trace:\n#0 /tmp/tmpzl1yel9_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzl1yel9_.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpo2mmzu.php:18\n\
    Stack trace:\n#0 /tmp/tmpvpo2mmzu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvpo2mmzu.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\
    \ else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp6_bu7d.php:26\n\
    Stack trace:\n#0 /tmp/tmpfp6_bu7d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfp6_bu7d.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxiu3mg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpyxiu3mg8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxiu3mg8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfm6itb4b.php:19\n\
    Stack trace:\n#0 /tmp/tmpfm6itb4b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfm6itb4b.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwnuba_d.php:18\n\
    Stack trace:\n#0 /tmp/tmpbwnuba_d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbwnuba_d.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n  if ($x % 2 == 0) {\n    return $x;\n  } else if\
    \ ($x + 1 <= $y) {\n    return $x + 1;\n  } else {\n    return -1;\n  }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjfe_t_y.php:26\n\
    Stack trace:\n#0 /tmp/tmpkjfe_t_y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkjfe_t_y.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r831zsx.php:19\n\
    Stack trace:\n#0 /tmp/tmp2r831zsx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2r831zsx.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x % 2 == 1) {\n \
    \       return $x + 1;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6spl5l6r.php:27\n\
    Stack trace:\n#0 /tmp/tmp6spl5l6r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6spl5l6r.php\
    \ on line 27\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\nchoose_num(12,\
    \ 15);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9ivaeng.php:30\n\
    Stack trace:\n#0 /tmp/tmpz9ivaeng.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz9ivaeng.php\
    \ on line 30\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n    $even_numbers = [];\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_numbers,\
    \ $i);\n        }\n    }\n    if (count($even_numbers) == 0) {\n        return\
    \ -1;\n    } else {\n        return max($even_numbers);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwcfiny.php:19\n\
    Stack trace:\n#0 /tmp/tmpabwcfiny.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpabwcfiny.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Fill in this function\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1n9tv_s.php:19\n\
    Stack trace:\n#0 /tmp/tmpf1n9tv_s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf1n9tv_s.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr17ruu12.php:19\n\
    Stack trace:\n#0 /tmp/tmpr17ruu12.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr17ruu12.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    }\n    else {\n        $x++;\n\
    \        if ($x > $y) {\n            return -1;\n        }\n        else {\n \
    \           return $x;\n        }\n    }\n}\n\n$__fp = fopen(\"php://stdin\",\
    \ \"r\");\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n$res =\
    \ choose_num($_x, $_y);\nprint \"$res\\n\";\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dygbwiv.php:41\n\
    Stack trace:\n#0 /tmp/tmp0dygbwiv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0dygbwiv.php\
    \ on line 41\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here.\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9juijb8.php:19\n\
    Stack trace:\n#0 /tmp/tmpo9juijb8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo9juijb8.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    for ($i = $y; $i >=\
    \ $x; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else {\n        $x = $x + 1;\n        if ($x > $y) {\n            return\
    \ -1;\n        } else {\n            return $x;\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6r5qcjv.php:28\n\
    Stack trace:\n#0 /tmp/tmpf6r5qcjv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf6r5qcjv.php\
    \ on line 28\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Write your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8ta3zj1.php:19\n\
    Stack trace:\n#0 /tmp/tmpn8ta3zj1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn8ta3zj1.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1jza080.php:19\n\
    Stack trace:\n#0 /tmp/tmpc1jza080.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc1jza080.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x % 2 ==\
    \ 1) {\n        $x = $x + 1;\n        return $x;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrb8pf7o.php:24\n\
    Stack trace:\n#0 /tmp/tmplrb8pf7o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplrb8pf7o.php\
    \ on line 24\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpo2mmzu.php:18\n\
    Stack trace:\n#0 /tmp/tmpvpo2mmzu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvpo2mmzu.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        return choose_num($x + 1, $y);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr8s3vx4.php:24\n\
    Stack trace:\n#0 /tmp/tmpfr8s3vx4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfr8s3vx4.php\
    \ on line 24\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: implement this function\n    if ($x % 2 == 0) {\n      \
    \  return $x;\n    } else if ($x % 2 != 0 && $y % 2 == 0) {\n        return $y;\n\
    \    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcezs9ur1.php:26\n\
    Stack trace:\n#0 /tmp/tmpcezs9ur1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcezs9ur1.php\
    \ on line 26\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else {\n        $x = $x + 1;\n        if ($x <= $y) {\n            return\
    \ $x;\n        } else {\n            return -1;\n        }\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphet16si5.php:29\n\
    Stack trace:\n#0 /tmp/tmphet16si5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphet16si5.php\
    \ on line 29\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    }\n    if ($y % 2 == 0) {\n \
    \       return $y;\n    }\n    return -1;\n}\n\n$__fp = fopen(\"php://stdin\"\
    , \"r\");\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n\n$res\
    \ = choose_num($_x, $_y);\nprint ($res);\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9ut_r72.php:37\n\
    Stack trace:\n#0 /tmp/tmpc9ut_r72.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc9ut_r72.php\
    \ on line 37\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  if ($x % 2 == 0) {\n    return\
    \ $x;\n  }\n  return choose_num($x + 1, $y);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8l42rh5k.php:25\n\
    Stack trace:\n#0 /tmp/tmp8l42rh5k.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8l42rh5k.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    $even_numbers = array();\n  \
    \  for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_numbers,\
    \ $i);\n        }\n    }\n    if (count($even_numbers) == 0) {\n        return\
    \ -1;\n    } else {\n        return max($even_numbers);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\n$x = 12;\n\
    $y = 15;\n$res = choose_num($x, $y);\nprint $res;\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14'
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\treturn $x + 1;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpastkcw1d.php:23\n\
    Stack trace:\n#0 /tmp/tmpastkcw1d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpastkcw1d.php\
    \ on line 23\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  } else if ($x + 1 == $y) {\n\
    \    return -1;\n  } else {\n    return choose_num($x + 1, $y);\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafwuvzj4.php:25\n\
    Stack trace:\n#0 /tmp/tmpafwuvzj4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpafwuvzj4.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 ==\
    \ $y) {\n        return -1;\n    } else {\n        return choose_num($x + 1, $y);\n\
    \    }\n}\n\necho choose_num(12, 15) . \"\\n\";\necho choose_num(13, 12) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\n14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpal53i5rc.php:27\n\
    Stack trace:\n#0 /tmp/tmpal53i5rc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpal53i5rc.php\
    \ on line 27\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotd_ix8z.php:18\n\
    Stack trace:\n#0 /tmp/tmpotd_ix8z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpotd_ix8z.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194

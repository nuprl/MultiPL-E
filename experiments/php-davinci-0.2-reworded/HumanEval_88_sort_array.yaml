name: HumanEval_88_sort_array
language: php
prompt: "<?php\n// Given an array of non-negative integers, return a cophp of the\
  \ given array after sorting,\n// you will sort the given array in ascending order\
  \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n// Note:\n//\
  \ * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n//\
  \ array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
  \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
  \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n"
tests: "function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2,\
  \ 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0,\
  \ 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(21,\
  \ 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    if (count($array) == 0) {\n        return $array;\n    }\n    $first\
    \ = $array[0];\n    $last = $array[count($array) - 1];\n    $sum = $first + $last;\n\
    \    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n    \
    \    sort($array);\n    }\n    return $array;\n}\n", "    // TODO\n}\n", "   \
    \ $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n  \
    \      rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = $array[0] + end($array);\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (count($array) == 0) {\n        return $array;\n    }\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (count($array) == 0) {\n        return $array;\n    }\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (empty($array)) {\n        return $array;\n    }\n  \
    \  $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n \
    \       rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (empty($array)) {\n        return $array;\n    }\n  \
    \  $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n \
    \       rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (empty($array)) {\n        return $array;\n    }\n  \
    \  $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n \
    \       rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (count($array) == 0) {\n        return $array;\n    }\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    if (empty($array)) {\n        return $array;\n    }\n  \
    \  $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 === 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum\
    \ % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n \
    \   }\n    return $array;\n}\n", "    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n    \
    \    sort($array);\n    }\n    return $array;\n}\n", "    if (count($array) ==\
    \ 0) {\n        return $array;\n    }\n    $first = $array[0];\n    $last = $array[count($array)\
    \ - 1];\n    if (($first + $last) % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n", "    $sum = $array[0]\
    \ + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n       \
    \ rsort($array);\n    } else {\n        sort($array);\n    }\n    return $array;\n\
    }\n", "    if (empty($array)) {\n        return $array;\n    }\n    $sum = $array[0]\
    \ + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\n", "    if\
    \ (count($array) == 0) {\n        return $array;\n    }\n    $sum = $array[0]\
    \ + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\n", "    $length\
    \ = count($array);\n    if ($length < 2) {\n        return $array;\n    }\n  \
    \  $first = $array[0];\n    $last = $array[$length - 1];\n    $sum = $first +\
    \ $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n   \
    \     sort($array);\n    }\n    return $array;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

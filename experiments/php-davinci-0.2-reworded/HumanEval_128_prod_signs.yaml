name: HumanEval_128_prod_signs
language: php
prompt: "<?php\n// You are given an array arr of integers and you need to return\n\
  // sum of magnitudes of integers multiplied by product of all signs\n// of each\
  \ number in the array, represented by 1, -1 or 0.\n// Note: return null for empty\
  \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
  \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n"
tests: "function candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1, 2, -1, -1,\
  \ 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n      \
    \      $prod *= 1;\n        } elseif ($num < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($num);\n\
    \    }\n    return $sum * $prod;\n}\n", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr as $num) {\n\
    \        $sum += abs($num);\n        if ($num > 0) {\n            $prod *= 1;\n\
    \        } elseif ($num < 0) {\n            $prod *= -1;\n        } else {\n \
    \           $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\n", " \
    \ $sum = 0;\n  $prod = 1;\n  if (count($arr) === 0) {\n    return null;\n  }\n\
    \  foreach ($arr as $num) {\n    $sum += abs($num);\n    if ($num < 0) {\n   \
    \   $prod *= -1;\n    } else if ($num === 0) {\n      $prod = 0;\n    }\n  }\n\
    \  return $sum * $prod;\n}\n", "  $sum = 0;\n  $prod = 1;\n  foreach ($arr as\
    \ $num) {\n    if ($num > 0) {\n      $prod *= 1;\n      $sum += $num;\n    }\
    \ elseif ($num < 0) {\n      $prod *= -1;\n      $sum += abs($num);\n    } else\
    \ {\n      $prod *= 0;\n    }\n  }\n  if (empty($arr)) {\n    return null;\n \
    \ } else {\n    return $sum * $prod;\n  }\n}\n", "  if (empty($arr)) {\n    return\
    \ null;\n  }\n  $signs = array_map(function($num) {\n    if ($num > 0) {\n   \
    \   return 1;\n    } else if ($num < 0) {\n      return -1;\n    } else {\n  \
    \    return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($num) {\n\
    \    return abs($num);\n  }, $arr);\n  $sign_product = array_product($signs);\n\
    \  $magnitude_sum = array_sum($magnitudes);\n  return $sign_product * $magnitude_sum;\n\
    }\n", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n \
    \   $sum = 0;\n    foreach ($arr as $value) {\n        $prod *= $value > 0 ? 1\
    \ : ($value < 0 ? -1 : 0);\n        $sum += abs($value);\n    }\n    return $prod\
    \ * $sum;\n}\n", "  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $num) {\n    $sum\
    \ += abs($num);\n    $prod *= $num == 0 ? 1 : $num / abs($num);\n  }\n  return\
    \ $sum * $prod;\n}\n", "    if (empty($arr)) {\n        return null;\n    }\n\
    \    $sum = 0;\n    $product = 1;\n    foreach ($arr as $num) {\n        if ($num\
    \ < 0) {\n            $product *= -1;\n        } elseif ($num > 0) {\n       \
    \     $product *= 1;\n        } else {\n            $product *= 0;\n        }\n\
    \        $sum += abs($num);\n    }\n    return $sum * $product;\n}\n", "  $prod\
    \ = 1;\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $prod\
    \ *= 1;\n      $sum += $num;\n    } elseif ($num < 0) {\n      $prod *= -1;\n\
    \      $sum += abs($num);\n    } else {\n      $prod *= 0;\n    }\n  }\n  return\
    \ $sum * $prod;\n}\n", "  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $value)\
    \ {\n    $sum += abs($value);\n    $prod *= $value == 0 ? 1 : $value / abs($value);\n\
    \  }\n  return $sum * $prod;\n}\n", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $num) {\n        if\
    \ ($num > 0) {\n            $prod *= 1;\n        } elseif ($num < 0) {\n     \
    \       $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n \
    \       $sum += abs($num);\n    }\n    return $sum * $prod;\n}", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($arr as $value) {\n        $sum += abs($value);\n        $product *= $value\
    \ < 0 ? -1 : ($value > 0 ? 1 : 0);\n    }\n    return $sum * $product;\n}", " \
    \ if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } else if ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $sign_product = array_product($signs);\n\
    \  $magnitude_sum = array_sum($magnitudes);\n  return $sign_product * $magnitude_sum;\n\
    }\n", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } else if ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $sign_product = array_product($signs);\n\
    \  $magnitude_sum = array_sum($magnitudes);\n  return $sign_product * $magnitude_sum;\n\
    }\n", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n \
    \   $sum = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n       \
    \     $prod *= 1;\n        } elseif ($num < 0) {\n            $prod *= -1;\n \
    \       } else {\n            $prod *= 0;\n        }\n        $sum += abs($num);\n\
    \    }\n    return $sum * $prod;\n}\n", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0)\
    \ {\n      $prod *= -1;\n    } elseif ($num > 0) {\n      $prod *= 1;\n    } else\
    \ {\n      $prod *= 0;\n    }\n    $sum += abs($num);\n  }\n  return $sum * $prod;\n\
    }\n", "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_product = array_product($signs);\n    $magnitude_sum\
    \ = array_sum($magnitudes);\n    return $sign_product * $magnitude_sum;\n}\n",
  "    if (empty($arr)) return null;\n    $signs = array_map(function($x) {\n    \
    \    if ($x > 0) return 1;\n        if ($x < 0) return -1;\n        return 0;\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($x)\
    \ {\n        return abs($x);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}", "    $sum = 0;\n    $prod = 1;\n\
    \    $empty = true;\n    foreach ($arr as $num) {\n        if ($num != 0) {\n\
    \            $empty = false;\n            $sum += abs($num);\n            $prod\
    \ *= $num > 0 ? 1 : -1;\n        }\n    }\n    return $empty ? null : $sum * $prod;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $prod\
    \ = 1;\n    foreach ($arr as $num) {\n        $sum += abs($num);\n        if ($num\
    \ > 0) {\n            $prod *= 1;\n        } elseif ($num < 0) {\n           \
    \ $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

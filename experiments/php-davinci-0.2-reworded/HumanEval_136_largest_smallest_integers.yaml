name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns an array (a, b), where 'a' is\n\
  // the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in an array.\n// If there is no negative or positive integers, return them as\
  \ null.\n// Examples:\n// >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))\n\
  // array(null, 1)\n// >>> largest_smallest_integers(array())\n// array(null, null)\n\
  // >>> largest_smallest_integers(array(0))\n// array(null, null)\nfunction largest_smallest_integers($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $a = null;\n    $b = null;\n    foreach ($lst as $i) {\n      \
    \  if ($i < 0) {\n            if ($a === null || $i > $a) {\n                $a\
    \ = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null\
    \ || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n \
    \   return array($a, $b);\n}\n", "    $max = null;\n    $min = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > 0) {\n            if ($min === null ||\
    \ $item < $min) {\n                $min = $item;\n            }\n        } elseif\
    \ ($item < 0) {\n            if ($max === null || $item > $max) {\n          \
    \      $max = $item;\n            }\n        }\n    }\n    return array($max,\
    \ $min);\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as $item)\
    \ {\n        if ($item < 0) {\n            if ($neg === null || $item > $neg)\
    \ {\n                $neg = $item;\n            }\n        } else if ($item >\
    \ 0) {\n            if ($pos === null || $item < $pos) {\n                $pos\
    \ = $item;\n            }\n        }\n    }\n    return array($neg, $pos);\n}\n",
  "    $largest = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            if ($largest === null || $item > $largest)\
    \ {\n                $largest = $item;\n            }\n        } elseif ($item\
    \ > 0) {\n            if ($smallest === null || $item < $smallest) {\n       \
    \         $smallest = $item;\n            }\n        }\n    }\n    return array($largest,\
    \ $smallest);\n}\n", "    $neg = null;\n    $pos = null;\n    foreach ($lst as\
    \ $item) {\n        if ($item < 0) {\n            if ($neg === null || $item >\
    \ $neg) {\n                $neg = $item;\n            }\n        } elseif ($item\
    \ > 0) {\n            if ($pos === null || $item < $pos) {\n                $pos\
    \ = $item;\n            }\n        }\n    }\n    return array($neg, $pos);\n}\n",
  "    $neg = null;\n    $pos = null;\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            if ($neg === null || $item > $neg) {\n                $neg\
    \ = $item;\n            }\n        } else if ($item > 0) {\n            if ($pos\
    \ === null || $item < $pos) {\n                $pos = $item;\n            }\n\
    \        }\n    }\n    return array($neg, $pos);\n}\n", "    $largest = null;\n\
    \    $smallest = null;\n    foreach ($lst as $num) {\n        if ($num > 0) {\n\
    \            if ($smallest === null || $num < $smallest) {\n                $smallest\
    \ = $num;\n            }\n        } else if ($num < 0) {\n            if ($largest\
    \ === null || $num > $largest) {\n                $largest = $num;\n         \
    \   }\n        }\n    }\n    return array($largest, $smallest);\n}\n", "    $a\
    \ = null;\n    $b = null;\n    foreach ($lst as $item) {\n        if ($item <\
    \ 0) {\n            if ($a === null || $item > $a) {\n                $a = $item;\n\
    \            }\n        } else if ($item > 0) {\n            if ($b === null ||\
    \ $item < $b) {\n                $b = $item;\n            }\n        }\n    }\n\
    \    return array($a, $b);\n}\n", "    $a = null;\n    $b = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > 0) {\n            if ($b === null ||\
    \ $item < $b) {\n                $b = $item;\n            }\n        } elseif\
    \ ($item < 0) {\n            if ($a === null || $item > $a) {\n              \
    \  $a = $item;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
  "    $largest = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            if ($largest === null || $item > $largest)\
    \ {\n                $largest = $item;\n            }\n        } else if ($item\
    \ > 0) {\n            if ($smallest === null || $item < $smallest) {\n       \
    \         $smallest = $item;\n            }\n        }\n    }\n    return array($largest,\
    \ $smallest);\n}\n", "    $neg = [];\n    $pos = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item < 0) {\n            $neg[] = $item;\n        } else if\
    \ ($item > 0) {\n            $pos[] = $item;\n        }\n    }\n    if (count($neg)\
    \ == 0) {\n        $neg = null;\n    } else {\n        $neg = max($neg);\n   \
    \ }\n    if (count($pos) == 0) {\n        $pos = null;\n    } else {\n       \
    \ $pos = min($pos);\n    }\n    return [$neg, $pos];\n}\n", "    $a = null;\n\
    \    $b = null;\n    foreach ($lst as $item) {\n        if ($item < 0) {\n   \
    \         if ($a === null || $item > $a) {\n                $a = $item;\n    \
    \        }\n        } else if ($item > 0) {\n            if ($b === null || $item\
    \ < $b) {\n                $b = $item;\n            }\n        }\n    }\n    return\
    \ array($a, $b);\n}\n", "    $positive = null;\n    $negative = null;\n    foreach\
    \ ($lst as $item) {\n        if ($item > 0) {\n            if ($positive === null\
    \ || $item < $positive) {\n                $positive = $item;\n            }\n\
    \        } elseif ($item < 0) {\n            if ($negative === null || $item >\
    \ $negative) {\n                $negative = $item;\n            }\n        }\n\
    \    }\n    return array($negative, $positive);\n}\n", "    $max = null;\n   \
    \ $min = null;\n    foreach ($lst as $val) {\n        if ($val > 0) {\n      \
    \      if ($min === null || $val < $min) {\n                $min = $val;\n   \
    \         }\n        } elseif ($val < 0) {\n            if ($max === null || $val\
    \ > $max) {\n                $max = $val;\n            }\n        }\n    }\n \
    \   return array($max, $min);\n}\n", "    $max = null;\n    $min = null;\n   \
    \ foreach ($lst as $item) {\n        if ($item < 0) {\n            if ($max ===\
    \ null || $item > $max) {\n                $max = $item;\n            }\n    \
    \    } else if ($item > 0) {\n            if ($min === null || $item < $min) {\n\
    \                $min = $item;\n            }\n        }\n    }\n    return array($max,\
    \ $min);\n}\n", "    $max_neg = null;\n    $min_pos = null;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0) {\n            if ($max_neg === null || $num\
    \ > $max_neg) {\n                $max_neg = $num;\n            }\n        } else\
    \ if ($num > 0) {\n            if ($min_pos === null || $num < $min_pos) {\n \
    \               $min_pos = $num;\n            }\n        }\n    }\n    return\
    \ array($max_neg, $min_pos);\n}\n", "    $negatives = array();\n    $positives\
    \ = array();\n    foreach ($lst as $item) {\n        if ($item < 0) {\n      \
    \      $negatives[] = $item;\n        } elseif ($item > 0) {\n            $positives[]\
    \ = $item;\n        }\n    }\n    $a = null;\n    $b = null;\n    if (count($negatives)\
    \ > 0) {\n        $a = max($negatives);\n    }\n    if (count($positives) > 0)\
    \ {\n        $b = min($positives);\n    }\n    return array($a, $b);\n}\n", " \
    \   $neg = null;\n    $pos = null;\n    foreach ($lst as $item) {\n        if\
    \ ($item < 0) {\n            if ($neg == null || $item > $neg) {\n           \
    \     $neg = $item;\n            }\n        } else if ($item > 0) {\n        \
    \    if ($pos == null || $item < $pos) {\n                $pos = $item;\n    \
    \        }\n        }\n    }\n    return array($neg, $pos);\n}\n", "    $max =\
    \ null;\n    $min = null;\n    foreach ($lst as $item) {\n        if ($item <\
    \ 0) {\n            if ($max === null || $item > $max) {\n                $max\
    \ = $item;\n            }\n        } else if ($item > 0) {\n            if ($min\
    \ === null || $item < $min) {\n                $min = $item;\n            }\n\
    \        }\n    }\n    return array($max, $min);\n}\n", "    $max = null;\n  \
    \  $min = null;\n    foreach ($lst as $num) {\n        if ($num > 0) {\n     \
    \       if ($min === null || $num < $min) {\n                $min = $num;\n  \
    \          }\n        } elseif ($num < 0) {\n            if ($max === null ||\
    \ $num > $max) {\n                $max = $num;\n            }\n        }\n   \
    \ }\n    return array($max, $min);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_157_right_angle_triangle
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
  \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
  \ 2, 3)\n// false\nfunction right_angle_triangle($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n\
    \    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    $hypotenuse_squared =\
    \ pow($hypotenuse, 2);\n    $side1_squared = pow($side1, 2);\n    $side2_squared\
    \ = pow($side2, 2);\n    return $hypotenuse_squared == $side1_squared + $side2_squared;\n\
    }\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n   \
    \ $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return ($hypotenuse ** 2\
    \ == $side1 ** 2 + $side2 ** 2);\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n\
    \    return $hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2 * $leg2;\n}\n",
  "    if ($a > $b && $a > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n  \
    \          return true;\n        }\n    } else if ($b > $a && $b > $c) {\n   \
    \     if ($b * $b == $a * $a + $c * $c) {\n            return true;\n        }\n\
    \    } else if ($c > $a && $c > $b) {\n        if ($c * $c == $a * $a + $b * $b)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  //\
    \ Write your code here\n  // To print results to the standard output you can use\
    \ print\n  // Example:\n  // print \"Hello world!\";\n  $hypotenuse = max($a,\
    \ $b, $c);\n  $side1 = min($a, $b, $c);\n  $side2 = $a + $b + $c - $hypotenuse\
    \ - $side1;\n  return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 *\
    \ $side2;\n}\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example:\n    // print \"Hello world!\"\
    ;\n    $result = false;\n    if ($a > 0 && $b > 0 && $c > 0) {\n        if ($a\
    \ * $a + $b * $b == $c * $c) {\n            $result = true;\n        }\n     \
    \   if ($a * $a + $c * $c == $b * $b) {\n            $result = true;\n       \
    \ }\n        if ($b * $b + $c * $c == $a * $a) {\n            $result = true;\n\
    \        }\n    }\n    return $result;\n}\n", "    if ($a > $b && $a > $c) {\n\
    \        return $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a && $b >\
    \ $c) {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n        return\
    \ $c * $c == $a * $a + $b * $b;\n    }\n}\n", "    // Write your code here\n \
    \   // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n}", "  $hypotenuse = max($a, $b, $c);\n  $other_sides\
    \ = array_diff([$a, $b, $c], [$hypotenuse]);\n  return pow($hypotenuse, 2) ==\
    \ pow($other_sides[0], 2) + pow($other_sides[1], 2);\n}\n", "    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2)\
    \ == pow($sides[2], 2);\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   $hypotenuse = max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2\
    \ = $a + $b + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse\
    \ == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    // TODO\n\
    }\n", "    $hypotenuse = max($a, $b, $c);\n    $other_sides = array_diff([$a,\
    \ $b, $c], [$hypotenuse]);\n    $sum_of_squares = array_sum(array_map(function($x)\
    \ { return $x * $x; }, $other_sides));\n    return $hypotenuse * $hypotenuse ==\
    \ $sum_of_squares;\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    $sides\
    \ = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1\
    \ = $sides[1];\n    $cathetus2 = $sides[0];\n    return $hypotenuse ** 2 == $cathetus1\
    \ ** 2 + $cathetus2 ** 2;\n}", "  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n\
    \  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 *\
    \ $cathetus2;\n}\n", "  // Write your code here\n  // To print results to the\
    \ standard output you can use print\n  // Example:\n  // print \"Hello world!\"\
    ;\n  if ($a == 0 || $b == 0 || $c == 0) {\n    return false;\n  }\n  $max = max($a,\
    \ $b, $c);\n  $min = min($a, $b, $c);\n  $mid = $a + $b + $c - $max - $min;\n\
    \  if ($max * $max == $min * $min + $mid * $mid) {\n    return true;\n  }\n  return\
    \ false;\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b,\
    \ $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return $hypotenuse**2\
    \ == $side1**2 + $side2**2;\n}\n", "    $triangle = array($a, $b, $c);\n    sort($triangle);\n\
    \    $hypotenuse = $triangle[2];\n    $cathetus1 = $triangle[1];\n    $cathetus2\
    \ = $triangle[0];\n    $hypotenuse_squared = pow($hypotenuse, 2);\n    $cathetus1_squared\
    \ = pow($cathetus1, 2);\n    $cathetus2_squared = pow($cathetus2, 2);\n    $sum_cathetus_squared\
    \ = $cathetus1_squared + $cathetus2_squared;\n    if ($hypotenuse_squared == $sum_cathetus_squared)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \ $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\n\
    echo right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides = array($a, $b, $c);\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n\
    \    if ($hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2 * $leg2) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\n", "    $hypotenuse\
    \ = max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a +\
    \ $b + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1\
    \ ** 2 + $cathetus2 ** 2;\n}", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    $sides = array($a, $b, $c);\n    sort($sides);\n    return pow($sides[0], 2)\
    \ + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = array_sum([$a, $b, $c])\
    \ - $hypotenuse - $side1;\n    return pow($hypotenuse, 2) == pow($side1, 2) +\
    \ pow($side2, 2);\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n\
    \    if ($hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2 * $leg2) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $result = false;\n    if\
    \ ($a > 0 && $b > 0 && $c > 0) {\n        if ($a * $a + $b * $b == $c * $c) {\n\
    \            $result = true;\n        }\n        if ($a * $a + $c * $c == $b *\
    \ $b) {\n            $result = true;\n        }\n        if ($b * $b + $c * $c\
    \ == $a * $a) {\n            $result = true;\n        }\n    }\n    return $result;\n\
    }\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $adjacent = $sides[1];\n    $opposite = $sides[0];\n    return $hypotenuse\
    \ * $hypotenuse == $adjacent * $adjacent + $opposite * $opposite;\n}\n", "   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example:\n    // print \"Hello world!\";\n    if (($a\
    \ * $a + $b * $b == $c * $c) || ($a * $a + $c * $c == $b * $b) || ($b * $b + $c\
    \ * $c == $a * $a)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($a > 0 && $b > 0 && $c > 0) {\n        if ($a * $a + $b * $b == $c *\
    \ $c || $a * $a + $c * $c == $b * $b || $b * $b + $c * $c == $a * $a) {\n    \
    \        return true;\n        }\n    }\n    return false;\n}\n", "    // TODO:\
    \ Your code here\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $hypotenuse = max($a, $b, $c);\n    $cathetus1 = min($a, $b,\
    \ $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n    return\
    \ $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example:\n    // print \"Hello world!\";\n    $a = pow($a, 2);\n    $b =\
    \ pow($b, 2);\n    $c = pow($c, 2);\n    if ($a + $b == $c || $a + $c == $b ||\
    \ $b + $c == $a) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n    return\
    \ $sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n}\n",
  "    // TODO\n}\n", "    if ($a > $b && $a > $c) {\n        return pow($a, 2) ==\
    \ pow($b, 2) + pow($c, 2);\n    } else if ($b > $a && $b > $c) {\n        return\
    \ pow($b, 2) == pow($a, 2) + pow($c, 2);\n    } else {\n        return pow($c,\
    \ 2) == pow($a, 2) + pow($b, 2);\n    }\n}\n", "    // Write your code here\n\
    \    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2\
    \ == $c2) {\n        return true;\n    } elseif ($a2 + $c2 == $b2) {\n       \
    \ return true;\n    } elseif ($b2 + $c2 == $a2) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n", "    // TODO\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b,\
    \ $c);\n    $leg1 = min($a, $b, $c);\n    $leg2 = ($a + $b + $c) - $hypotenuse\
    \ - $leg1;\n    return $hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2 * $leg2;\n\
    }", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    if($a\
    \ > 0 && $b > 0 && $c > 0){\n        if(($a*$a + $b*$b == $c*$c) || ($a*$a + $c*$c\
    \ == $b*$b) || ($b*$b + $c*$c == $a*$a)){\n            return true;\n        }\n\
    \    }\n    return false;\n}", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "\t$sides = [$a, $b, $c];\n\tsort($sides);\n\treturn pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    // Write your code here\n    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    return $sides[0] * $sides[0] + $sides[1] *\
    \ $sides[1] == $sides[2] * $sides[2];\n}\n", "    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $sides = [$a, $b, $c];\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n   \
    \ $leg2 = $sides[1];\n    $hypotenuse_squared = pow($hypotenuse, 2);\n    $leg1_squared\
    \ = pow($leg1, 2);\n    $leg2_squared = pow($leg2, 2);\n    if ($hypotenuse_squared\
    \ == $leg1_squared + $leg2_squared) {\n        return true;\n    } else {\n  \
    \      return false;\n    }\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $hypotenuse = max($a, $b,\
    \ $c);\n  $side1 = min($a, $b, $c);\n  $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \  return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n",
  "    // Write your code here\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $a = $sides[0];\n    $b = $sides[1];\n    $c = $sides[2];\n    return $a\
    \ * $a + $b * $b == $c * $c;\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n\
    \    return $hypotenuse ** 2 == $leg1 ** 2 + $leg2 ** 2;\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b,\
    \ $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = ($a + $b + $c) - $hypotenuse\
    \ - $cathetus1;\n    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}", "    if ($a == 0 || $b == 0 || $c == 0) {\n        return\
    \ false;\n    }\n    $max = max($a, $b, $c);\n    $sum = $a + $b + $c;\n    if\
    \ ($max == $a) {\n        return $a * $a == $b * $b + $c * $c;\n    } else if\
    \ ($max == $b) {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n\
    \        return $c * $c == $a * $a + $b * $b;\n    }\n}\n", "    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2)\
    \ == pow($sides[2], 2);\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $cathetus1\
    \ = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \    return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "  \
    \  // TODO\n}\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example:\n    // print \"Hello world!\"\
    ;\n    if ($a > 0 && $b > 0 && $c > 0) {\n        if ($a*$a + $b*$b == $c*$c ||\
    \ $a*$a + $c*$c == $b*$b || $b*$b + $c*$c == $a*$a) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n", "    // Write your code here\n   \
    \ // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n    $opposite = $sides[0];\n\
    \    $hypotenuse2 = pow($hypotenuse, 2);\n    $adjacent2 = pow($adjacent, 2);\n\
    \    $opposite2 = pow($opposite, 2);\n    if ($hypotenuse2 == $adjacent2 + $opposite2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}", " \
    \   $sides = array($a, $b, $c);\n    sort($sides);\n    if ($sides[0] * $sides[0]\
    \ + $sides[1] * $sides[1] == $sides[2] * $sides[2]) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2\
    \ = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } else if\
    \ ($a2 + $c2 == $b2) {\n        return true;\n    } else if ($b2 + $c2 == $a2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    return $hypotenuse\
    \ ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "    $sides = array($a, $b,\
    \ $c);\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) ==\
    \ pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho\
    \ right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus_a = $sides[0];\n  $cathetus_b = $sides[1];\n\
    \  $hypotenuse_squared = pow($hypotenuse, 2);\n  $cathetus_a_squared = pow($cathetus_a,\
    \ 2);\n  $cathetus_b_squared = pow($cathetus_b, 2);\n  return $hypotenuse_squared\
    \ == $cathetus_a_squared + $cathetus_b_squared;\n}\n", "    // Your code here\n\
    }\n", "  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n}", "    $max\
    \ = max($a, $b, $c);\n    $sum = $a + $b + $c;\n    return $max * $max == $sum\
    \ - $max;\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  $hypotenuse = array_pop($sides);\n\
    \  $sum = array_sum($sides);\n  return $hypotenuse * $hypotenuse == $sum * $sum;\n\
    }\n\necho right_angle_triangle(3, 4, 5) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) ? \"true\" : \"false\";\necho \"\\n\";",
  "  $max = max($a, $b, $c);\n  $min = min($a, $b, $c);\n  $mid = $a + $b + $c - $max\
    \ - $min;\n  return $max * $max == $min * $min + $mid * $mid;\n}\n", "\t$sides\
    \ = array($a, $b, $c);\n\tsort($sides);\n\t$hypotenuse = $sides[2];\n\t$leg1 =\
    \ $sides[0];\n\t$leg2 = $sides[1];\n\tif ($hypotenuse * $hypotenuse == $leg1 *\
    \ $leg1 + $leg2 * $leg2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n    return $sides[0]\
    \ * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n}\n", "    $hypotenuse\
    \ = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c)\
    \ - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse == $side1 * $side1\
    \ + $side2 * $side2;\n}\n", "    // Write your code here\n    if ($a > $b && $a\
    \ > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n            return true;\n\
    \        }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a *\
    \ $a + $c * $c) {\n            return true;\n        }\n    } else if ($c > $a\
    \ && $c > $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "  $sides = [$a, $b, $c];\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n\
    \    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    }\
    \ elseif ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 + $c2 ==\
    \ $a2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
  "  $hypotenuse = max($a, $b, $c);\n  $other_sides = array_diff([$a, $b, $c], [$hypotenuse]);\n\
    \  $sum_of_squares = array_sum(array_map(function($side) {\n    return pow($side,\
    \ 2);\n  }, $other_sides));\n  return pow($hypotenuse, 2) == $sum_of_squares;\n\
    }\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    $a2 = $a * $a;\n  \
    \  $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return\
    \ true;\n    } elseif ($a2 + $c2 == $b2) {\n        return true;\n    } elseif\
    \ ($b2 + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $cathetus1 = min($a, $b,\
    \ $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n    return\
    \ $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n", "    // Write your code here\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n \
    \   $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } else\
    \ if ($a2 + $c2 == $b2) {\n        return true;\n    } else if ($b2 + $c2 == $a2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", "\t\
    $sides = array($a, $b, $c);\n\tsort($sides);\n\treturn pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    // Write your code here\n    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    $a = $sides[0];\n    $b = $sides[1];\n    $c\
    \ = $sides[2];\n    return ($a * $a) + ($b * $b) == ($c * $c);\n}\n", "  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1] *\
    \ $sides[1] == $sides[2] * $sides[2]) {\n    return true;\n  }\n  return false;\n\
    }\n", "  $hypotenuse = max($a, $b, $c);\n  $other_sides = array($a, $b, $c);\n\
    \  unset($other_sides[array_search($hypotenuse, $other_sides)]);\n  $other_sides\
    \ = array_values($other_sides);\n  $sum_of_squares = pow($other_sides[0], 2) +\
    \ pow($other_sides[1], 2);\n  $square_of_hypotenuse = pow($hypotenuse, 2);\n \
    \ return $sum_of_squares == $square_of_hypotenuse;\n}\n", "    $sides = [$a, $b,\
    \ $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n\
    \    $cathetus2 = $sides[0];\n    return $hypotenuse ** 2 == $cathetus1 ** 2 +\
    \ $cathetus2 ** 2;\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n\
    \    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    if ($hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n", "    if (($a * $a) + ($b * $b) == ($c * $c))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    if ($hypotenuse\
    \ * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2) {\n    \
    \    return true;\n    } else {\n        return false;\n    }\n}\n", "  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example:\n  // print \"Hello world!\";\n  $sides = array($a, $b, $c);\n\
    \  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2]\
    \ * $sides[2]) {\n    return true;\n  } else {\n    return false;\n  }\n}", " \
    \   $hypotenuse = max($a, $b, $c);\n    $others = array_diff([$a, $b, $c], [$hypotenuse]);\n\
    \    $sum_of_squares = array_sum(array_map(function($x) { return $x * $x; }, $others));\n\
    \    return $hypotenuse * $hypotenuse == $sum_of_squares;\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n}", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b, $c);\n\
    \    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = array_sum(array($a, $b, $c))\
    \ - $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n\
    \    sort($sides);\n    $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n\
    \    $opposite = $sides[0];\n    return $hypotenuse * $hypotenuse == $adjacent\
    \ * $adjacent + $opposite * $opposite;\n}\n", "  // TODO: Your code here\n}",
  "    if ($a > $b && $a > $c) {\n        return $a * $a == $b * $b + $c * $c;\n \
    \   } else if ($b > $a && $b > $c) {\n        return $b * $b == $a * $a + $c *\
    \ $c;\n    } else {\n        return $c * $c == $a * $a + $b * $b;\n    }\n}\n",
  "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n \
    \   $leg1 = $sides[0];\n    $leg2 = $sides[1];\n    return $hypotenuse ** 2 ==\
    \ $leg1 ** 2 + $leg2 ** 2;\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n  \
    \  $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif\
    \ ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   // TODO\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n\
    \    if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif ($a2 + $c2 ==\
    \ $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "  $sides = array($a,\
    \ $b, $c);\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n\
    \  $cathetus2 = $sides[0];\n  $hypotenuse_squared = pow($hypotenuse, 2);\n  $cathetus1_squared\
    \ = pow($cathetus1, 2);\n  $cathetus2_squared = pow($cathetus2, 2);\n  if ($hypotenuse_squared\
    \ == $cathetus1_squared + $cathetus2_squared) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return $sides[0] ** 2 + $sides[1] ** 2 == $sides[2] ** 2;\n}\n", "    $sides\
    \ = [$a, $b, $c];\n    sort($sides);\n    if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  if ($sides[0]*$sides[0] + $sides[1]*$sides[1]\
    \ == $sides[2]*$sides[2]) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2\
    \ = ($a + $b + $c) - $hypotenuse - $side1;\n    if ($hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n", "    if ($a > $b && $a > $c) {\n        return\
    \ $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a && $b > $c) {\n      \
    \  return $b * $b == $a * $a + $c * $c;\n    } else {\n        return $c * $c\
    \ == $a * $a + $b * $b;\n    }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    // Your code here\n}\n", "    // Write your code here\n}\n", "    $hypotenuse\
    \ = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c)\
    \ - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse == $side1 * $side1\
    \ + $side2 * $side2;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse\
    \ = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n  return\
    \ pow($hypotenuse, 2) == pow($cathetus1, 2) + pow($cathetus2, 2);\n}\n", "  //\
    \ Write your code here\n  // To print results to the standard output you can use\
    \ print\n  // Example:\n  // print \"Hello world!\";\n}", "    $sides = [$a, $b,\
    \ $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) ==\
    \ pow($sides[2], 2);\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    if (($a\
    \ * $a) + ($b * $b) == ($c * $c)) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\n", "  // Your code here\n}", "    // your code here\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    $result\
    \ = false;\n    if ($a > 0 && $b > 0 && $c > 0) {\n        if ($a * $a + $b *\
    \ $b == $c * $c) {\n            $result = true;\n        }\n        if ($a * $a\
    \ + $c * $c == $b * $b) {\n            $result = true;\n        }\n        if\
    \ ($b * $b + $c * $c == $a * $a) {\n            $result = true;\n        }\n \
    \   }\n    return $result;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", " \
    \ $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example:\n    // print\
    \ \"Hello world!\";\n    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a,\
    \ $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    if ($hypotenuse\
    \ * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $hypotenuse = max($a, $b, $c);\n    $side1\
    \ = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n  \
    \  if ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n   \
    \     return true;\n    } else {\n        return false;\n    }\n}\n", "  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    // Write your code here\n    if ($a > $b\
    \ && $a > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n            return\
    \ true;\n        }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b\
    \ == $a * $a + $c * $c) {\n            return true;\n        }\n    } else if\
    \ ($c > $a && $c > $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n      \
    \      return true;\n        }\n    }\n    return false;\n}\n", "    // TODO\n\
    }\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "  if ($a > $b && $a > $c)\
    \ {\n    return pow($a, 2) == pow($b, 2) + pow($c, 2);\n  } else if ($b > $a &&\
    \ $b > $c) {\n    return pow($b, 2) == pow($a, 2) + pow($c, 2);\n  } else {\n\
    \    return pow($c, 2) == pow($a, 2) + pow($b, 2);\n  }\n}\n", "  $sides = [$a,\
    \ $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) ==\
    \ pow($sides[2], 2);\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 =\
    \ min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return\
    \ $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n", "   \
    \ $sides = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n    return ($hypotenuse * $hypotenuse)\
    \ == ($leg1 * $leg1) + ($leg2 * $leg2);\n}\n", "  $sides = array($a, $b, $c);\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  $hypotenuse_squared = pow($hypotenuse, 2);\n  $cathetus1_squared\
    \ = pow($cathetus1, 2);\n  $cathetus2_squared = pow($cathetus2, 2);\n  if ($hypotenuse_squared\
    \ == $cathetus1_squared + $cathetus2_squared) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1\
    \ = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return\
    \ $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n", "    // Write your code\
    \ here\n    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    $hypotenuse_squared\
    \ = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared\
    \ = pow($cathetus2, 2);\n    $sum_of_cathetus_squared = $cathetus1_squared + $cathetus2_squared;\n\
    \    if ($hypotenuse_squared == $sum_of_cathetus_squared) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    $sides = array($a, $b,\
    \ $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n\
    \    $leg2 = $sides[1];\n    $hypotenuse_squared = pow($hypotenuse, 2);\n    $leg1_squared\
    \ = pow($leg1, 2);\n    $leg2_squared = pow($leg2, 2);\n    $sum_of_legs_squared\
    \ = $leg1_squared + $leg2_squared;\n    if ($hypotenuse_squared == $sum_of_legs_squared)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   $sides = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $adjacent = $sides[1];\n    $opposite = $sides[0];\n    if ($hypotenuse *\
    \ $hypotenuse == $adjacent * $adjacent + $opposite * $opposite) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "    // Write your\
    \ code here\n    $result = false;\n    if ($a > 0 && $b > 0 && $c > 0) {\n   \
    \     if ($a*$a + $b*$b == $c*$c) {\n            $result = true;\n        }\n\
    \    }\n    return $result;\n}\n", "\tif ($a > $b && $a > $c) {\n\t\treturn $a\
    \ * $a == $b * $b + $c * $c;\n\t} else if ($b > $a && $b > $c) {\n\t\treturn $b\
    \ * $b == $a * $a + $c * $c;\n\t} else {\n\t\treturn $c * $c == $a * $a + $b *\
    \ $b;\n\t}\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse =\
    \ $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n  return $hypotenuse\
    \ * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", " \
    \   $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) +\
    \ pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    // Your code here\n}\n",
  "  $hypotenuse = max($a, $b, $c);\n  $others = array_diff([$a, $b, $c], [$hypotenuse]);\n\
    \  $sum_of_squares = array_sum(array_map(function($x) { return $x * $x; }, $others));\n\
    \  return $hypotenuse * $hypotenuse == $sum_of_squares;\n}\n", "    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n\
    \    $opposite = $sides[0];\n    return $hypotenuse ** 2 == $adjacent ** 2 + $opposite\
    \ ** 2;\n}\n", "    if ($a > $b && $a > $c) {\n        return $a * $a == $b *\
    \ $b + $c * $c;\n    } else if ($b > $a && $b > $c) {\n        return $b * $b\
    \ == $a * $a + $c * $c;\n    } else {\n        return $c * $c == $a * $a + $b\
    \ * $b;\n    }\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n   \
    \ return pow($hypotenuse, 2) == pow($cathetus1, 2) + pow($cathetus2, 2);\n}\n",
  "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n\
    \    return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2\
    \ * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n \
    \   return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    // Write your code here\n    $arr = [$a, $b, $c];\n    sort($arr);\n    if\
    \ ($arr[0] * $arr[0] + $arr[1] * $arr[1] == $arr[2] * $arr[2]) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n\
    \    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    }\
    \ else if ($a2 + $c2 == $b2) {\n        return true;\n    } else if ($b2 + $c2\
    \ == $a2) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n", "\t$sides = array($a, $b, $c);\n\tsort($sides);\n\t$hypotenuse = $sides[2];\n\
    \t$side1 = $sides[0];\n\t$side2 = $sides[1];\n\tif ($hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\n", "    // TODO\n}\n", "    // Write your code here\n \
    \   // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $result = false;\n    if ($a > 0 && $b >\
    \ 0 && $c > 0) {\n        if (($a * $a + $b * $b == $c * $c) || ($a * $a + $c\
    \ * $c == $b * $b) || ($b * $b + $c * $c == $a * $a)) {\n            $result =\
    \ true;\n        }\n    }\n    return $result;\n}\n", "    // TODO\n}\n", "  \
    \  // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example:\n    // print \"Hello world!\";\n}", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example:\n    // print \"Hello world!\";\n    $hypotenuse\
    \ = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c)\
    \ - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse == $side1 * $side1\
    \ + $side2 * $side2;\n}\n", "    // Write your code here\n    if ($a > $b && $a\
    \ > $c) {\n        if (($a * $a) == (($b * $b) + ($c * $c))) {\n            return\
    \ true;\n        }\n    } else if ($b > $a && $b > $c) {\n        if (($b * $b)\
    \ == (($a * $a) + ($c * $c))) {\n            return true;\n        }\n    } else\
    \ if ($c > $a && $c > $b) {\n        if (($c * $c) == (($a * $a) + ($b * $b)))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  $sides = array($a, $b, $c);\n    sort($sides);\n    if ($sides[0] * $sides[0]\
    \ + $sides[1] * $sides[1] == $sides[2] * $sides[2]) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "  $hypotenuse = max($a, $b,\
    \ $c);\n  $side1 = $a;\n  $side2 = $b;\n  if ($hypotenuse == $a) {\n    $side1\
    \ = $b;\n    $side2 = $c;\n  } else if ($hypotenuse == $b) {\n    $side1 = $a;\n\
    \    $side2 = $c;\n  }\n  return pow($hypotenuse, 2) == pow($side1, 2) + pow($side2,\
    \ 2);\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n}", " \
    \ $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    // Write your code here\n    if ($a > $b\
    \ && $a > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n            return\
    \ true;\n        }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b\
    \ == $a * $a + $c * $c) {\n            return true;\n        }\n    } else if\
    \ ($c > $a && $c > $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n      \
    \      return true;\n        }\n    }\n    return false;\n}\n", "    $sides =\
    \ [$a, $b, $c];\n    sort($sides);\n    if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $hypotenuse = max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2\
    \ = array_sum(array($a, $b, $c)) - $hypotenuse - $cathetus1;\n    return $hypotenuse\
    \ * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", " \
    \   // Write your code here\n    $result = false;\n    $hypotenuse = 0;\n    $side1\
    \ = 0;\n    $side2 = 0;\n    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a,\
    \ $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    if ($hypotenuse\
    \ * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n        $result = true;\n\
    \    }\n    return $result;\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n    $opposite = $sides[0];\n\
    \    if ($hypotenuse**2 == $adjacent**2 + $opposite**2) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $result = false;\n    $triangle = array($a,\
    \ $b, $c);\n    sort($triangle);\n    if ($triangle[0] * $triangle[0] + $triangle[1]\
    \ * $triangle[1] == $triangle[2] * $triangle[2]) {\n        $result = true;\n\
    \    }\n    return $result;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "\t$sides = array($a, $b, $c);\n\tsort($sides);\n\t$hypotenuse = $sides[2];\n\t\
    $cathetus1 = $sides[1];\n\t$cathetus2 = $sides[0];\n\tif ($hypotenuse * $hypotenuse\
    \ == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\n", "    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n\
    }\n", "    // Write your code here\n    $hypotenuse = max($a, $b, $c);\n    $cathetus1\
    \ = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example:\n    // print \"Hello world!\";\n    $a = pow($a,\
    \ 2);\n    $b = pow($b, 2);\n    $c = pow($c, 2);\n    if($a + $b == $c || $a\
    \ + $c == $b || $b + $c == $a) {\n        return true;\n    } else {\n       \
    \ return false;\n    }\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return\
    \ $sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n}\n",
  "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 =\
    \ $a + $b + $c - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse ==\
    \ $side1 * $side1 + $side2 * $side2;\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return $sides[0] ** 2 + $sides[1] ** 2 == $sides[2] ** 2;\n}\n", "    $sides\
    \ = array($a, $b, $c);\n    sort($sides);\n    return $sides[0] * $sides[0] +\
    \ $sides[1] * $sides[1] == $sides[2] * $sides[2];\n}\n", "    $sides = array($a,\
    \ $b, $c);\n    sort($sides);\n    return $sides[0] * $sides[0] + $sides[1] *\
    \ $sides[1] == $sides[2] * $sides[2];\n}\n", "    $sides = [$a, $b, $c];\n   \
    \ sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\n", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2\
    \ = $a + $b + $c - $hypotenuse - $side1;\n    return pow($hypotenuse, 2) == pow($side1,\
    \ 2) + pow($side2, 2);\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "  // Write your code here\n  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse\
    \ = $sides[2];\n  $leg1 = $sides[0];\n  $leg2 = $sides[1];\n  if ($hypotenuse\
    \ ** 2 == $leg1 ** 2 + $leg2 ** 2) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n", "  $hypotenuse = max($a, $b, $c);\n  $side1 = min($a, $b,\
    \ $c);\n  $side2 = $a + $b + $c - $hypotenuse - $side1;\n  return $hypotenuse\
    \ ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n", "    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n\
    }\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example:\n  // print \"Hello world!\";\n  $result = false;\n  $sides = array($a,\
    \ $b, $c);\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1] * $sides[1]\
    \ == $sides[2] * $sides[2]) {\n    $result = true;\n  }\n  return $result;\n}\n",
  "    // Write your code here\n    $arr = [$a, $b, $c];\n    sort($arr);\n    return\
    \ pow($arr[0], 2) + pow($arr[1], 2) == pow($arr[2], 2);\n}\n", "    if ($a > $b\
    \ && $a > $c) {\n        return $a * $a == $b * $b + $c * $c;\n    } else if ($b\
    \ > $a && $b > $c) {\n        return $b * $b == $a * $a + $c * $c;\n    } else\
    \ {\n        return $c * $c == $a * $a + $b * $b;\n    }\n}\n", "    // Write\
    \ your code here\n}", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n\
    \    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    if ($hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n", "    // Write your code here\n}\n", "   \
    \ // Write your code here\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c\
    \ * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } else if ($a2\
    \ + $c2 == $b2) {\n        return true;\n    } else if ($b2 + $c2 == $a2) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n", "   \
    \ $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 ==\
    \ $c2) {\n        return true;\n    } elseif ($a2 + $c2 == $b2) {\n        return\
    \ true;\n    } elseif ($b2 + $c2 == $a2) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n    return true;\n  }\n  return false;\n}\n", "  $sides = [$a, $b, $c];\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $leg1 = $sides[0];\n  $leg2 =\
    \ $sides[1];\n  return $hypotenuse ** 2 == $leg1 ** 2 + $leg2 ** 2;\n}\n", " \
    \   $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2\
    \ = array_sum([$a, $b, $c]) - $hypotenuse - $side1;\n    return $hypotenuse **\
    \ 2 == $side1 ** 2 + $side2 ** 2;\n}\n", "    $sides = array($a, $b, $c);\n  \
    \  sort($sides);\n    $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n \
    \   $opposite = $sides[0];\n    if ($hypotenuse * $hypotenuse == $adjacent * $adjacent\
    \ + $opposite * $opposite) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a,\
    \ $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return $hypotenuse\
    \ * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b,\
    \ $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    $sides = array($a, $b, $c);\n    sort($sides);\n    return pow($sides[0], 2)\
    \ + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    // TODO\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

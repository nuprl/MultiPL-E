name: HumanEval_49_modp
language: php
prompt: "<?php\n// Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n\
  // 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
  // 8\n// >>> modp(100, 101)\n// 1\nfunction modp($n, $p) {\n"
tests: "function candidate(...$args) {\n    return modp(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(3, 5) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1101, 101) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(0, 101) !== 1) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(3, 11) !== 8) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100, 101) !== 1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(30, 5) !== 4) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(31, 5) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["    $r = 1;\n    $n = $n % $p;\n    while ($n > 0) {\n        if ($n\
    \ & 1) {\n            $r = ($r * $n) % $p;\n        }\n        $n = $n >> 1;\n\
    \        $n = ($n * $n) % $p;\n    }\n    return $r;\n}\n", "\t$r = 1;\n\t$b =\
    \ $n;\n\twhile ($p > 0) {\n\t\tif ($p & 1) {\n\t\t\t$r = ($r * $b) % 1000000007;\n\
    \t\t}\n\t\t$p >>= 1;\n\t\t$b = ($b * $b) % 1000000007;\n\t}\n\treturn $r;\n}\n",
  "    $r = 1;\n    $b = $n;\n    while ($p > 0) {\n        if ($p & 1) {\n      \
    \      $r = ($r * $b) % $p;\n        }\n        $p >>= 1;\n        $b = ($b *\
    \ $b) % $p;\n    }\n    return $r;\n}\n", "    $r = 1;\n    $b = $n;\n    while\
    \ ($p > 0) {\n        if ($p & 1) {\n            $r = ($r * $b) % 1000000007;\n\
    \        }\n        $p >>= 1;\n        $b = ($b * $b) % 1000000007;\n    }\n \
    \   return $r;\n}\n", "    $r = 1;\n    $n = $n % $p;\n    while ($n > 0) {\n\
    \        if ($n & 1) {\n            $r = ($r * $n) % $p;\n        }\n        $n\
    \ = $n >> 1;\n        $n = ($n * $n) % $p;\n    }\n    return $r;\n}\n", "   \
    \ if ($n == 0) {\n        return 1;\n    }\n    if ($n % 2 == 0) {\n        $x\
    \ = modp($n / 2, $p);\n        return $x * $x % $p;\n    }\n    return $n % $p\
    \ * modp($n - 1, $p) % $p;\n}\n", "\t$r = 1;\n\t$b = $n;\n\twhile ($p > 0) {\n\
    \t\tif ($p & 1) {\n\t\t\t$r = ($r * $b) % $n;\n\t\t}\n\t\t$p >>= 1;\n\t\t$b =\
    \ ($b * $b) % $n;\n\t}\n\treturn $r;\n}\n", "    if ($n == 0) {\n        return\
    \ 1;\n    }\n    $r = modp($n >> 1, $p);\n    $r = ($r * $r) % $p;\n    if ($n\
    \ & 1) {\n        $r = ($r * 2) % $p;\n    }\n    return $r;\n}\n", "    $r =\
    \ 1;\n    $b = $n;\n    while ($p > 0) {\n        $lastp = $p;\n        if (($p\
    \ & 1) == 1) {\n            $r = ($r * $b) % $n;\n        }\n        $p = $p >>\
    \ 1;\n        $b = ($b * $b) % $n;\n    }\n    return $r;\n}\n", "    if ($n ==\
    \ 0) {\n        return 1;\n    }\n    if ($n % 2 == 0) {\n        $t = modp($n\
    \ / 2, $p);\n        return ($t * $t) % $p;\n    }\n    return ($n % $p) * modp($n\
    \ - 1, $p) % $p;\n}\n", "\t$n = (int)$n;\n\t$p = (int)$p;\n\t$r = 1;\n\twhile\
    \ ($n > 0) {\n\t\tif ($n & 1) {\n\t\t\t$r = ($r * $n) % $p;\n\t\t}\n\t\t$n = ($n\
    \ * $n) % $p;\n\t}\n\treturn $r;\n}\n", "    $r = 1;\n    $n = $n % $p;\n    while\
    \ ($n > 0) {\n        if ($n & 1) {\n            $r = ($r * $n) % $p;\n      \
    \  }\n        $n = $n >> 1;\n        $n = ($n * $n) % $p;\n    }\n    return $r;\n\
    }\n", "    $r = 1;\n    $b = $n;\n    while ($p > 0) {\n        if ($p & 1) {\n\
    \            $r = ($r * $b) % 101;\n        }\n        $p >>= 1;\n        $b =\
    \ ($b * $b) % 101;\n    }\n    return $r;\n}\n", "    $r = 1;\n    $b = $n;\n\
    \    while ($p > 0) {\n        if ($p & 1) {\n            $r = ($r * $b) % $p;\n\
    \        }\n        $p >>= 1;\n        $b = ($b * $b) % $p;\n    }\n    return\
    \ $r;\n}\n", "    $r = 1;\n    $b = $n;\n    while ($p > 0) {\n        $x = $p\
    \ & 1;\n        if ($x) $r = ($r * $b) % 101;\n        $b = ($b * $b) % 101;\n\
    \        $p = $p >> 1;\n    }\n    return $r;\n}\n", "    $r = 1;\n    while ($n\
    \ > 0) {\n        if ($n & 1) {\n            $r = ($r * $n) % $p;\n        }\n\
    \        $n = $n >> 1;\n    }\n    return $r;\n}\n", "\t$r = 1;\n\t$n = $n % $p;\n\
    \twhile ($n > 0) {\n\t\tif ($n & 1) {\n\t\t\t$r = ($r * $n) % $p;\n\t\t}\n\t\t\
    $n = $n >> 1;\n\t\t$n = ($n * $n) % $p;\n\t}\n\treturn $r;\n}\n", "    $r = 1;\n\
    \    $b = $n;\n    while ($p > 0) {\n        if ($p & 1) {\n            $r = ($r\
    \ * $b) % 1000000007;\n        }\n        $p >>= 1;\n        $b = ($b * $b) %\
    \ 1000000007;\n    }\n    return $r;\n}\n", "    $r = 1;\n    $b = $n;\n    while\
    \ ($n > 0) {\n        if ($n & 1) {\n            $r = ($r * $b) % $p;\n      \
    \  }\n        $b = ($b * $b) % $p;\n        $n >>= 1;\n    }\n    return $r;\n\
    }\n", "    $r = 1;\n    $b = $n;\n    while ($p > 0) {\n        if ($p & 1) {\n\
    \            $r = ($r * $b) % $n;\n        }\n        $p >>= 1;\n        $b =\
    \ ($b * $b) % $n;\n    }\n    return $r;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

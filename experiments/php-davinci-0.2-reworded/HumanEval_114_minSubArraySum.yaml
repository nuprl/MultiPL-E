name: HumanEval_114_minSubArraySum
language: php
prompt: "<?php\n// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2, 3, 4, 1, 2,\
  \ 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction minSubArraySum($nums)\
  \ {\n"
tests: "function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3,\
  \ 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
  \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
  \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10)) !== -10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(7)) !== 7) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -1)) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $minSum = 0;\n    $sum = 0;\n    $min = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > $minSum)\
    \ {\n            $minSum = $sum;\n        }\n    }\n    return $minSum - $min;\n\
    }\n", "    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n", "    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n", "    $min = $nums[0];\n    $sum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum >= $min)\
    \ {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n", "    $min =\
    \ PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n \
    \       $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n", " \
    \   $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n            $left = $i + 1;\n        }\n    }\n    return $min;\n\
    }\n", "    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n", "    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i\
    \ = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n  \
    \          $sum = 0;\n        }\n    }\n    return $min;\n}\n", "    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}\n", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        $min = min($min,\
    \ $sum);\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n \
    \   return $min;\n}\n", "    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i\
    \ = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n  \
    \          $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n", "    $min = PHP_INT_MAX;\n    $sum =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n", "    $min = $nums[0];\n    $sum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n", " \
    \   $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n", "    $minSum = PHP_INT_MAX;\n    $sum\
    \ = 0;\n    $start = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n       \
    \ $sum += $nums[$i];\n        while ($sum >= $minSum) {\n            $minSum =\
    \ min($minSum, $sum);\n            $sum -= $nums[$start];\n            $start++;\n\
    \        }\n    }\n    return $minSum;\n}\n", "    $minSum = $nums[0];\n    $currSum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $currSum =\
    \ min($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n\
    \    }\n    return $minSum;\n}\n", "    $minSum = $nums[0];\n    $sum = 0;\n \
    \   for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n    \
    \    if ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if\
    \ ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

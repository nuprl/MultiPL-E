language: php
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $s))\
    \ {\n            $s[] = $v;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $s)) {\n\t\
    \t\t$s[] = $v;\n\t\t}\n\t}\n\tsort($s);\n\treturn $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u)) {\n\t\
    \t\t$u[] = $e;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $s))\
    \ {\n            $s[] = $v;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $r))\
    \ {\n            $r[] = $v;\n        }\n    }\n    sort($r);\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $s))\
    \ {\n            $s[] = $v;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $r))\
    \ {\n            $r[] = $v;\n        }\n    }\n    sort($r);\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffau15x4.php:14\n\
    Stack trace:\n#0 /tmp/tmpffau15x4.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpffau15x4.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u)) {\n\t\
    \t\t$u[] = $e;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffau15x4.php:14\n\
    Stack trace:\n#0 /tmp/tmpffau15x4.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpffau15x4.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u)) {\n\t\
    \t\t$u[] = $e;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_flip($l);\n\t$l = array_flip($l);\n\tsort($l);\n\treturn $l;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $u = array();\n    $last = null;\n    foreach ($l as $v)\
    \ {\n        if ($v != $last) {\n            $u[] = $v;\n        }\n        $last\
    \ = $v;\n    }\n    return $u;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjnlka2.php:23\n\
    Stack trace:\n#0 /tmp/tmpdtjnlka2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdtjnlka2.php\
    \ on line 23\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmra6oe_5.php:14\n\
    Stack trace:\n#0 /tmp/tmpmra6oe_5.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpmra6oe_5.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u)) {\n\t\
    \t\t$u[] = $e;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffau15x4.php:14\n\
    Stack trace:\n#0 /tmp/tmpffau15x4.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpffau15x4.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $r))\
    \ {\n            $r[] = $v;\n        }\n    }\n    sort($r);\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffau15x4.php:14\n\
    Stack trace:\n#0 /tmp/tmpffau15x4.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpffau15x4.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5yskxj7.php:14\n\
    Stack trace:\n#0 /tmp/tmpo5yskxj7.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpo5yskxj7.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffau15x4.php:14\n\
    Stack trace:\n#0 /tmp/tmpffau15x4.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpffau15x4.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldsa1nk6.php:14\n\
    Stack trace:\n#0 /tmp/tmpldsa1nk6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpldsa1nk6.php\
    \ on line 14\n"
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmra6oe_5.php:14\n\
    Stack trace:\n#0 /tmp/tmpmra6oe_5.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpmra6oe_5.php\
    \ on line 14\n"
  timestamp: 1659730811
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730811

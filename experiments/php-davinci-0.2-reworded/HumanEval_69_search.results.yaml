language: php
name: HumanEval_69_search
results:
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $result = -1;\n    foreach ($counts as $key => $value) {\n        if ($key\
    \ <= $value) {\n            $result = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nfp2m6c.php:30\n\
    Stack trace:\n#0 /tmp/tmp8nfp2m6c.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp8nfp2m6c.php\
    \ on line 30\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bsmfeh.php:29\n\
    Stack trace:\n#0 /tmp/tmpv5bsmfeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv5bsmfeh.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $freq = array_count_values($lst);\n\
    \    foreach ($freq as $key => $value) {\n        if ($key > $value) {\n     \
    \       continue;\n        }\n        if ($key > $max) {\n            $max = $key;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $count =\
    \ array_count_values($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $freq = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($freq[$i])\
    \ && $freq[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $counts) && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n\
    \    return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bsmfeh.php:29\n\
    Stack trace:\n#0 /tmp/tmpv5bsmfeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv5bsmfeh.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $count = array_count_values($lst);\n\
    \    foreach ($count as $key => $value) {\n        if ($key > $value) {\n    \
    \        continue;\n        }\n        if ($key > $max) {\n            $max =\
    \ $key;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = 0;\n    $max_freq = 0;\n\
    \    $freq = array();\n    foreach ($lst as $item) {\n        if (!isset($freq[$item]))\
    \ {\n            $freq[$item] = 0;\n        }\n        $freq[$item] += 1;\n  \
    \      if ($freq[$item] >= $item) {\n            if ($item > $max) {\n       \
    \         $max = $item;\n                $max_freq = $freq[$item];\n         \
    \   }\n        }\n    }\n    if ($max_freq >= $max) {\n        return $max;\n\
    \    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lppi5fa.php:42\n\
    Stack trace:\n#0 /tmp/tmp4lppi5fa.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp4lppi5fa.php\
    \ on line 42\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $count =\
    \ array_count_values($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $count =\
    \ array_count_values($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $freq = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($freq[$i])\
    \ && $freq[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $count) && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n \
    \   return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value) {\n            $max = max($max, $key);\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyobttzkg.php:29\n\
    Stack trace:\n#0 /tmp/tmpyobttzkg.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpyobttzkg.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value) {\n            $max = max($max, $key);\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyobttzkg.php:29\n\
    Stack trace:\n#0 /tmp/tmpyobttzkg.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpyobttzkg.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = 0;\n    foreach ($counts as $key => $value) {\n        if ($key >\
    \ $value) {\n            continue;\n        }\n        if ($key > $max) {\n  \
    \          $max = $key;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rl6yub5.php:34\n\
    Stack trace:\n#0 /tmp/tmp9rl6yub5.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp9rl6yub5.php\
    \ on line 34\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >\
    \ $value) {\n            continue;\n        }\n        if ($key > $max) {\n  \
    \          $max = $key;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if ($counts[$i] >= $i) {\n            $result = $i;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\n$lst\
    \ = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\";\n$lst = array(5,\
    \ 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\necho\
    \ search(array(4, 1, 2, 2, 3, 1));\necho \"\\n\";\necho search(array(1, 2, 2,\
    \ 3, 3, 3, 4, 4, 4));\necho \"\\n\";\necho search(array(5, 5, 4, 4, 4));\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $count =\
    \ array_count_values($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $count = 0;\n  \
    \  $freq = array();\n    for ($i = 0; $i < count($lst); $i++) {\n        if (isset($freq[$lst[$i]]))\
    \ {\n            $freq[$lst[$i]] += 1;\n        } else {\n            $freq[$lst[$i]]\
    \ = 1;\n        }\n    }\n    foreach ($freq as $key => $value) {\n        if\
    \ ($key > $value) {\n            continue;\n        } else {\n            if ($key\
    \ > $max) {\n                $max = $key;\n            }\n        }\n    }\n \
    \   return $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $nums = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($nums as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\necho search([4, 1, 2, 2, 3, 1]);\necho search([1, 2, 2, 3, 3, 3,\
    \ 4, 4, 4]);\necho search([5, 5, 4, 4, 4]);\nfunction candidate(...$args) {\n\
    \    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "445\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1smqbx_.php:32\n\
    Stack trace:\n#0 /tmp/tmpz1smqbx_.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpz1smqbx_.php\
    \ on line 32\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = 0;\n    $count = 0;\n   \
    \ $result = -1;\n    foreach ($lst as $value) {\n        if ($value > $max) {\n\
    \            $max = $value;\n        }\n    }\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        $count = 0;\n        foreach ($lst as $value) {\n            if ($value\
    \ == $i) {\n                $count++;\n            }\n        }\n        if ($count\
    \ >= $i) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $result = -1;\n    $counts = array_count_values($lst);\n\
    \    foreach ($counts as $key => $value) {\n        if ($key <= $value && $key\
    \ > $result) {\n            $result = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if (isset($counts[$i]) && $counts[$i] >= $i) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $result = -1;\n    foreach ($counts as $key => $value) {\n        if ($key\
    \ <= $value) {\n            $result = max($result, $key);\n        }\n    }\n\
    \    return $result;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\n\
    echo \"\\n\";\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\n\
    echo \"\\n\";\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = 0;\n    foreach ($count as $key => $value) {\n        if ($key >=\
    \ $value) {\n            if ($key > $max) {\n                $max = $key;\n  \
    \          }\n        }\n    }\n    if ($max == 0) {\n        return -1;\n   \
    \ }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23zc8z_y.php:34\n\
    Stack trace:\n#0 /tmp/tmp23zc8z_y.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp23zc8z_y.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if (isset($counts[$i]) && $counts[$i] >= $i) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = 0;\n    $max_freq = 0;\n\
    \    $freq = array();\n    foreach ($lst as $num) {\n        if (!isset($freq[$num]))\
    \ {\n            $freq[$num] = 0;\n        }\n        $freq[$num] += 1;\n    \
    \    if ($freq[$num] >= $num && $num > $max_freq) {\n            $max = $num;\n\
    \            $max_freq = $freq[$num];\n        }\n    }\n    return $max;\n}\n\
    \nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwp5qpulf.php:37\n\
    Stack trace:\n#0 /tmp/tmpwp5qpulf.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpwp5qpulf.php\
    \ on line 37\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $count = 0;\n  \
    \  $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ 0; $j < $len; $j++) {\n            if ($lst[$i] == $lst[$j]) {\n           \
    \     $count++;\n            }\n        }\n        if ($count >= $lst[$i] && $lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n        $count = 0;\n  \
    \  }\n    return $max;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\n\
    function candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    foreach ($lst as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    $counts = array_count_values($lst);\n    for ($i = $max; $i > 0; $i--)\
    \ {\n        if (array_key_exists($i, $counts) && $counts[$i] >= $i) {\n     \
    \       return $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value) {\n            $max = max($max, $key);\n        }\n    }\n    return\
    \ $max;\n}\necho search([4, 1, 2, 2, 3, 1]);\necho search([1, 2, 2, 3, 3, 3, 4,\
    \ 4, 4]);\necho search([5, 5, 4, 4, 4]);\nfunction candidate(...$args) {\n   \
    \ return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "445\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx_snbga.php:31\n\
    Stack trace:\n#0 /tmp/tmpbx_snbga.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpbx_snbga.php\
    \ on line 31\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = 0;\n    foreach ($counts as $key => $value) {\n        if ($key >\
    \ $value) {\n            continue;\n        }\n        if ($key > $max) {\n  \
    \          $max = $key;\n        }\n    }\n    return $max > 0 ? $max : -1;\n\
    }\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = 0;\n    foreach ($count as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max > 0 ? $max : -1;\n}\n\necho search([4, 1, 2, 2, 3, 1]);\necho \"\\n\";\n\
    echo search([1, 2, 2, 3, 3, 3, 4, 4, 4]);\necho \"\\n\";\necho search([5, 5, 4,\
    \ 4, 4]);\necho \"\\n\";\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\n4\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcohgjeqw.php:35\n\
    Stack trace:\n#0 /tmp/tmpcohgjeqw.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpcohgjeqw.php\
    \ on line 35\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $counts) && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n\
    \    return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if ($counts[$i] >= $i) {\n            $result = $i;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bsmfeh.php:29\n\
    Stack trace:\n#0 /tmp/tmpv5bsmfeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv5bsmfeh.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $cnt = array_count_values($lst);\n\
    \    $max = max($lst);\n    $res = -1;\n    for ($i = 1; $i <= $max; $i++) {\n\
    \        if (isset($cnt[$i]) && $cnt[$i] >= $i) {\n            $res = $i;\n  \
    \      }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $count =\
    \ array_count_values($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($counts[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $freq = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($freq as $key => $value) {\n        if ($key >=\
    \ $value) {\n            if ($key > $max) {\n                $max = $key;\n  \
    \          }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2xged2g.php:31\n\
    Stack trace:\n#0 /tmp/tmpl2xged2g.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpl2xged2g.php\
    \ on line 31\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if ($counts[$i] >= $i) {\n            $result = $i;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bsmfeh.php:29\n\
    Stack trace:\n#0 /tmp/tmpv5bsmfeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv5bsmfeh.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $count) && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n \
    \   return -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho\
    \ \"\\n\";\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho\
    \ \"\\n\";\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $k => $v) {\n        if ($k >= $v &&\
    \ $k > $max) {\n            $max = $k;\n        }\n    }\n    return $max;\n}\n\
    \nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv4l5h63.php:29\n\
    Stack trace:\n#0 /tmp/tmprv4l5h63.php(56): test()\n#1 {main}\n  thrown in /tmp/tmprv4l5h63.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $count) && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n \
    \   return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key <=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $result = -1;\n    foreach ($count as $key => $value) {\n        if ($key\
    \ <= $value) {\n            $result = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogw5ow_2.php:30\n\
    Stack trace:\n#0 /tmp/tmpogw5ow_2.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpogw5ow_2.php\
    \ on line 30\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $count = array_count_values($lst);\n\
    \    foreach ($count as $key => $value) {\n        if ($key >= $value && $key\
    \ > $max) {\n            $max = $key;\n        }\n    }\n    return $max;\n}\n\
    echo search(array(4, 1, 2, 2, 3, 1));\necho search(array(1, 2, 2, 3, 3, 3, 4,\
    \ 4, 4));\necho search(array(5, 5, 4, 4, 4));\nfunction candidate(...$args) {\n\
    \    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "445\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14zj6hwa.php:31\n\
    Stack trace:\n#0 /tmp/tmp14zj6hwa.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp14zj6hwa.php\
    \ on line 31\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $result = -1;\n    foreach ($count as $key => $value) {\n        if ($key\
    \ <= $value) {\n            $result = $key;\n        }\n    }\n    return $result;\n\
    }\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\";\n$lst\
    \ = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\";\n$lst\
    \ = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\n3\n-1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiu9t4p72.php:39\n\
    Stack trace:\n#0 /tmp/tmpiu9t4p72.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpiu9t4p72.php\
    \ on line 39\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $counts) && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n\
    \    return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = 0;\n    $count = 0;\n   \
    \ $arr = array();\n    foreach ($lst as $value) {\n        if (isset($arr[$value]))\
    \ {\n            $arr[$value]++;\n        } else {\n            $arr[$value] =\
    \ 1;\n        }\n    }\n    foreach ($arr as $key => $value) {\n        if ($key\
    \ >= $value && $key > $max) {\n            $max = $key;\n        }\n    }\n  \
    \  return $max;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtqmafj4.php:39\n\
    Stack trace:\n#0 /tmp/tmpbtqmafj4.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpbtqmafj4.php\
    \ on line 39\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (array_key_exists($i,\
    \ $counts) && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n\
    \    return -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = max($lst);\n    $freq = array_count_values($lst);\n\
    \    for ($i = $max; $i > 0; $i--) {\n        if (isset($freq[$i]) && $freq[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $count = array_count_values($lst);\n\
    \    foreach ($count as $key => $value) {\n        if ($key > $value) {\n    \
    \        continue;\n        }\n        if ($key > $max) {\n            $max =\
    \ $key;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $max = -1;\n    $freq = array_count_values($lst);\n\
    \    foreach ($freq as $key => $value) {\n        if ($key >= $value && $key >\
    \ $max) {\n            $max = $key;\n        }\n    }\n    return $max;\n}\n\n\
    function candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8,\
    \ 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr578fnnl.php:29\n\
    Stack trace:\n#0 /tmp/tmpr578fnnl.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpr578fnnl.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = $max; $i > 0; $i--) {\n\
    \        if (isset($counts[$i]) && $counts[$i] >= $i) {\n            $result =\
    \ $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bsmfeh.php:29\n\
    Stack trace:\n#0 /tmp/tmpv5bsmfeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv5bsmfeh.php\
    \ on line 29\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if ($count[$i]\
    \ >= $i) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = -1;\n    foreach ($counts as $key => $value) {\n        if ($key >=\
    \ $value && $key > $max) {\n            $max = $key;\n        }\n    }\n    return\
    \ $max;\n}\necho search([4, 1, 2, 2, 3, 1]) . \"\\n\";\necho search([1, 2, 2,\
    \ 3, 3, 3, 4, 4, 4]) . \"\\n\";\necho search([5, 5, 4, 4, 4]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return search(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 3)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 8, 8, 8, 8,\
    \ 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 8, 2)) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7,\
    \ 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8,\
    \ 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(6, 9, 7, 5, 8, 7, 5,\
    \ 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2,\
    \ 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6,\
    \ 4, 10)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5,\
    \ 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4,\
    \ 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6,\
    \ 2, 3, 1)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(10)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 7, 7, 2, 4, 7,\
    \ 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9, 9, 9, 3, 4, 1,\
    \ 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\n4\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6irzhbij.php:31\n\
    Stack trace:\n#0 /tmp/tmp6irzhbij.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp6irzhbij.php\
    \ on line 31\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $counts = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($counts[$i])\
    \ && $counts[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\n$lst = array(4, 1, 2, 2, 3, 1);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(1, 2, 2, 3, 3, 3, 4, 4, 4);\necho search($lst);\necho \"\\n\"\
    ;\n$lst = array(5, 5, 4, 4, 4);\necho search($lst);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 5, 5, 5, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 4, 1, 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    3

    -1

    '
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    $result = -1;\n    for ($i = 1; $i <= $max; $i++)\
    \ {\n        if ($count[$i] >= $i) {\n            $result = $i;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1,\
    \ 4, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// You are given a non-empty array of positive integers. Return\
    \ the greatest integer that is greater than \n// zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n// The frequency of an integer\
    \ is the number of times it appears in the array.\n// If no such a value exist,\
    \ return -1.\n// Examples:\n// >>> search(array(4, 1, 2, 2, 3, 1))\n// 2\n// >>>\
    \ search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))\n// 3\n// >>> search(array(5, 5, 4,\
    \ 4, 4))\n// -1\nfunction search($lst) {\n    $count = array_count_values($lst);\n\
    \    $max = max($lst);\n    for ($i = $max; $i > 0; $i--) {\n        if (isset($count[$i])\
    \ && $count[$i] >= $i) {\n            return $i;\n        }\n    }\n    return\
    \ -1;\n}\n\nfunction candidate(...$args) {\n    return search(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 4, 1, 4, 4))\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 3)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
    \ 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8, 3, 6, 5, 6,\
    \ 4)) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 9, 10, 1, 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 8,\
    \ 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4,\
    \ 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7,\
    \ 3)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2,\
    \ 8, 10, 9, 4)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 8, 6,\
    \ 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10,\
    \ 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(10)) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 4, 10,\
    \ 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7,\
    \ 6, 7, 7, 6)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 10, 10, 9, 2)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379

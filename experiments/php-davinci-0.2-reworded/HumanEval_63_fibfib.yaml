name: HumanEval_63_fibfib
language: php
prompt: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n//\
  \ fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n// Please\
  \ write a function to efficiently compute the n-th element of the fibfib number\
  \ sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
  // 24\nfunction fibfib($n) {\n"
tests: "function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
  \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
  \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n\
    \        return 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n\
    \        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\n\
    echo fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\"\
    ;\n", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n    \
    \    return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(1) . \"\\\
    n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n == 0)\
    \ {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\\
    n\";\necho fibfib(8) . \"\\n\";", "    if ($n == 0) {\n        return 0;\n   \
    \ } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n      \
    \  return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n    }\n}\n", "    if ($n == 0) {\n        return 0;\n    } else if ($n\
    \ == 1) {\n        return 0;\n    } else if ($n == 2) {\n        return 1;\n \
    \   } else {\n        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n\
    \    }\n}\n\necho fibfib(5);\n", "    if ($n == 0) {\n        return 0;\n    }\n\
    \    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n",
  "    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n", "    if ($n\
    \ == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return 0;\n \
    \   } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(1) . \"\\n\"\
    ;\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";\n", "    if ($n < 2) {\n\
    \        return 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n\
    \        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n",
  "    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n\
    \ == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return 0;\n \
    \   } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(1) . \"\\n\"\
    ;\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n == 0) {\n\
    \        return 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if\
    \ ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(1) . \"\\n\";\n\
    echo fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";\n", "  if ($n < 0) {\n  \
    \  return -1;\n  }\n  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n \
    \   return 0;\n  }\n  if ($n == 2) {\n    return 1;\n  }\n  return fibfib($n -\
    \ 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n", "    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";", "    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i - 3];\n\
    \    }\n    return $fibfib[$n];\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(1) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\necho fibfib(8)\
    \ . PHP_EOL;", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1)\
    \ {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n\
    \    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n\
    \ == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return 0;\n \
    \   } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(1) . \"\\n\"\
    ;\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    $a = 0;\n    $b\
    \ = 0;\n    $c = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $d = $a + $b\
    \ + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return\
    \ $c;\n}\n", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n\
    \        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(1) . \"\\\
    n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_156_int_to_mini_roman
language: php
prompt: "<?php\n// Given a positive integer, obtain its roman numeral equivalent as\
  \ a string,\n// and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n\
  // Examples:\n// >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n\
  // \"clii\"\n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman($number)\
  \ {\n"
tests: "function candidate(...$args) {\n    return int_to_mini_roman(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(19) !== \"xix\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(152) !== \"clii\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(251) !== \"ccli\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(426) !== \"cdxxvi\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(500) !== \"d\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(1) !== \"i\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(4) !== \"iv\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(43) !== \"xliii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(90) !== \"xc\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(94) !== \"xciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(532) !== \"dxxxii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(900) !== \"cm\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(994) !== \"cmxciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1000) !== \"m\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $result = \"\";\n    $numerals = array(\n        \"m\" => 1000,\n\
    \        \"d\" => 500,\n        \"c\" => 100,\n        \"l\" => 50,\n        \"\
    x\" => 10,\n        \"v\" => 5,\n        \"i\" => 1\n    );\n    foreach ($numerals\
    \ as $numeral => $value) {\n        $result .= str_repeat($numeral, floor($number\
    \ / $value));\n        $number %= $value;\n    }\n    return $result;\n}\n", " \
    \ $roman_numerals = array(\n    'm' => 1000,\n    'cm' => 900,\n    'd' => 500,\n\
    \    'cd' => 400,\n    'c' => 100,\n    'xc' => 90,\n    'l' => 50,\n    'xl'\
    \ => 40,\n    'x' => 10,\n    'ix' => 9,\n    'v' => 5,\n    'iv' => 4,\n    'i'\
    \ => 1,\n  );\n  $result = '';\n  foreach ($roman_numerals as $roman => $int)\
    \ {\n    $matches = intval($number / $int);\n    $result .= str_repeat($roman,\
    \ $matches);\n    $number = $number % $int;\n  }\n  return $result;\n}\n", " \
    \ $roman_numerals = array(\n    'M' => 1000,\n    'CM' => 900,\n    'D' => 500,\n\
    \    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n    'L' => 50,\n    'XL'\
    \ => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n    'IV' => 4,\n    'I'\
    \ => 1\n  );\n  $result = '';\n  foreach ($roman_numerals as $roman => $int) {\n\
    \    $matches = intval($number / $int);\n    $result .= str_repeat($roman, $matches);\n\
    \    $number = $number % $int;\n  }\n  return $result;\n}\n", "    $result = '';\n\
    \    $numerals = array(\n        'm' => 1000,\n        'd' => 500,\n        'c'\
    \ => 100,\n        'l' => 50,\n        'x' => 10,\n        'v' => 5,\n       \
    \ 'i' => 1\n    );\n    foreach ($numerals as $numeral => $value) {\n        $result\
    \ .= str_repeat($numeral, floor($number / $value));\n        $number %= $value;\n\
    \    }\n    return $result;\n}\n", "    $numerals = [\n        'm' => 1000,\n\
    \        'cm' => 900,\n        'd' => 500,\n        'cd' => 400,\n        'c'\
    \ => 100,\n        'xc' => 90,\n        'l' => 50,\n        'xl' => 40,\n    \
    \    'x' => 10,\n        'ix' => 9,\n        'v' => 5,\n        'iv' => 4,\n \
    \       'i' => 1\n    ];\n    $result = '';\n    foreach ($numerals as $numeral\
    \ => $value) {\n        $result .= str_repeat($numeral, $number / $value);\n \
    \       $number %= $value;\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    $numerals = array(\n        'm' => 1000,\n        'd' => 500,\n        'c'\
    \ => 100,\n        'l' => 50,\n        'x' => 10,\n        'v' => 5,\n       \
    \ 'i' => 1\n    );\n    foreach ($numerals as $numeral => $value) {\n        $result\
    \ .= str_repeat($numeral, $number / $value);\n        $number %= $value;\n   \
    \ }\n    return $result;\n}\n", "    $result = '';\n    $numerals = array(\n \
    \       'm' => 1000,\n        'd' => 500,\n        'c' => 100,\n        'l' =>\
    \ 50,\n        'x' => 10,\n        'v' => 5,\n        'i' => 1\n    );\n    foreach\
    \ ($numerals as $key => $value) {\n        $result .= str_repeat($key, floor($number\
    \ / $value));\n        $number %= $value;\n    }\n    return $result;\n}\n", " \
    \   $result = '';\n    $roman_numerals = [\n        'm' => 1000,\n        'cm'\
    \ => 900,\n        'd' => 500,\n        'cd' => 400,\n        'c' => 100,\n  \
    \      'xc' => 90,\n        'l' => 50,\n        'xl' => 40,\n        'x' => 10,\n\
    \        'ix' => 9,\n        'v' => 5,\n        'iv' => 4,\n        'i' => 1\n\
    \    ];\n    foreach ($roman_numerals as $roman => $int) {\n        $matches =\
    \ intdiv($number, $int);\n        $result .= str_repeat($roman, $matches);\n \
    \       $number = $number % $int;\n    }\n    return $result;\n}\n", "  $numerals\
    \ = array(\n    'm' => 1000,\n    'cm' => 900,\n    'd' => 500,\n    'cd' => 400,\n\
    \    'c' => 100,\n    'xc' => 90,\n    'l' => 50,\n    'xl' => 40,\n    'x' =>\
    \ 10,\n    'ix' => 9,\n    'v' => 5,\n    'iv' => 4,\n    'i' => 1\n  );\n  $result\
    \ = '';\n  foreach ($numerals as $numeral => $value) {\n    while ($number >=\
    \ $value) {\n      $result .= $numeral;\n      $number -= $value;\n    }\n  }\n\
    \  return $result;\n}\n", "    $roman_numerals = array(\n        'm' => 1000,\n\
    \        'cm' => 900,\n        'd' => 500,\n        'cd' => 400,\n        'c'\
    \ => 100,\n        'xc' => 90,\n        'l' => 50,\n        'xl' => 40,\n    \
    \    'x' => 10,\n        'ix' => 9,\n        'v' => 5,\n        'iv' => 4,\n \
    \       'i' => 1,\n    );\n    $result = '';\n    foreach ($roman_numerals as\
    \ $roman => $int) {\n        $matches = intval($number / $int);\n        $result\
    \ .= str_repeat($roman, $matches);\n        $number = $number % $int;\n    }\n\
    \    return $result;\n}", "    $result = \"\";\n    $roman_numerals = array(\n\
    \        'm' => 1000,\n        'cm' => 900,\n        'd' => 500,\n        'cd'\
    \ => 400,\n        'c' => 100,\n        'xc' => 90,\n        'l' => 50,\n    \
    \    'xl' => 40,\n        'x' => 10,\n        'ix' => 9,\n        'v' => 5,\n\
    \        'iv' => 4,\n        'i' => 1\n    );\n    foreach ($roman_numerals as\
    \ $roman => $num) {\n        $matches = intval($number / $num);\n        $result\
    \ .= str_repeat($roman, $matches);\n        $number = $number % $num;\n    }\n\
    \    return $result;\n}\n", "    $result = '';\n    $numerals = array(\n     \
    \   'm' => 1000,\n        'd' => 500,\n        'c' => 100,\n        'l' => 50,\n\
    \        'x' => 10,\n        'v' => 5,\n        'i' => 1\n    );\n    foreach\
    \ ($numerals as $roman => $arabic) {\n        $matches = intval($number / $arabic);\n\
    \        $result .= str_repeat($roman, $matches);\n        $number = $number %\
    \ $arabic;\n    }\n    return $result;\n}\n", "    $roman_numerals = array(\n\
    \        'm' => 1000,\n        'cm' => 900,\n        'd' => 500,\n        'cd'\
    \ => 400,\n        'c' => 100,\n        'xc' => 90,\n        'l' => 50,\n    \
    \    'xl' => 40,\n        'x' => 10,\n        'ix' => 9,\n        'v' => 5,\n\
    \        'iv' => 4,\n        'i' => 1,\n    );\n    $result = '';\n    foreach\
    \ ($roman_numerals as $roman => $int) {\n        $matches = intval($number / $int);\n\
    \        $result .= str_repeat($roman, $matches);\n        $number = $number %\
    \ $int;\n    }\n    return $result;\n}\n", "    $result = \"\";\n    $numerals\
    \ = array(\n        'M' => 1000,\n        'D' => 500,\n        'C' => 100,\n \
    \       'L' => 50,\n        'X' => 10,\n        'V' => 5,\n        'I' => 1\n\
    \    );\n    foreach ($numerals as $numeral => $value) {\n        $result .= str_repeat($numeral,\
    \ floor($number / $value));\n        $number %= $value;\n    }\n    return $result;\n\
    }", "    $result = '';\n    $numerals = array(\n        'M' => 1000,\n       \
    \ 'CM' => 900,\n        'D' => 500,\n        'CD' => 400,\n        'C' => 100,\n\
    \        'XC' => 90,\n        'L' => 50,\n        'XL' => 40,\n        'X' =>\
    \ 10,\n        'IX' => 9,\n        'V' => 5,\n        'IV' => 4,\n        'I'\
    \ => 1\n    );\n    foreach ($numerals as $numeral => $value) {\n        $result\
    \ .= str_repeat($numeral, $number / $value);\n        $number %= $value;\n   \
    \ }\n    return $result;\n}\n", "    $result = \"\";\n    $roman = array(\n  \
    \      'M' => 1000,\n        'CM' => 900,\n        'D' => 500,\n        'CD' =>\
    \ 400,\n        'C' => 100,\n        'XC' => 90,\n        'L' => 50,\n       \
    \ 'XL' => 40,\n        'X' => 10,\n        'IX' => 9,\n        'V' => 5,\n   \
    \     'IV' => 4,\n        'I' => 1\n    );\n    foreach ($roman as $key => $value)\
    \ {\n        $matches = intval($number / $value);\n        $result .= str_repeat($key,\
    \ $matches);\n        $number = $number % $value;\n    }\n    return $result;\n\
    }", "  $result = '';\n  $numerals = array(\n    'm' => 1000,\n    'd' => 500,\n\
    \    'c' => 100,\n    'l' => 50,\n    'x' => 10,\n    'v' => 5,\n    'i' => 1\n\
    \  );\n  foreach ($numerals as $numeral => $value) {\n    $result .= str_repeat($numeral,\
    \ $number / $value);\n    $number %= $value;\n  }\n  return $result;\n}\n", " \
    \   $roman = '';\n    $numerals = array(\n        'm' => 1000,\n        'd' =>\
    \ 500,\n        'c' => 100,\n        'l' => 50,\n        'x' => 10,\n        'v'\
    \ => 5,\n        'i' => 1\n    );\n    foreach ($numerals as $numeral => $value)\
    \ {\n        $roman .= str_repeat($numeral, $number / $value);\n        $number\
    \ %= $value;\n    }\n    return $roman;\n}\n", "    $result = '';\n    $numerals\
    \ = array(\n        'm' => 1000,\n        'd' => 500,\n        'c' => 100,\n \
    \       'l' => 50,\n        'x' => 10,\n        'v' => 5,\n        'i' => 1\n\
    \    );\n    foreach ($numerals as $numeral => $value) {\n        $result .= str_repeat($numeral,\
    \ floor($number / $value));\n        $number %= $value;\n    }\n    return $result;\n\
    }\n", "    $result = '';\n    $numerals = array(\n        'm' => 1000,\n     \
    \   'd' => 500,\n        'c' => 100,\n        'l' => 50,\n        'x' => 10,\n\
    \        'v' => 5,\n        'i' => 1\n    );\n    foreach ($numerals as $numeral\
    \ => $value) {\n        $result .= str_repeat($numeral, floor($number / $value));\n\
    \        $number %= $value;\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_111_histogram
results:
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdze8ard.php:46\n\
    Stack trace:\n#0 /tmp/tmptdze8ard.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptdze8ard.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$test = array_count_values($test);\n\tarsort($test);\n\t$max = max($test);\n\
    \t$result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbabg9del.php:41\n\
    Stack trace:\n#0 /tmp/tmpbabg9del.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbabg9del.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    $max = 0;\n    foreach ($test as $value) {\n    \
    \    if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n        if ($result[$value]\
    \ > $max) {\n            $max = $result[$value];\n        }\n    }\n    foreach\
    \ ($result as $key => $value) {\n        if ($value < $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat87q6_a.php:49\n\
    Stack trace:\n#0 /tmp/tmpat87q6_a.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpat87q6_a.php\
    \ on line 49\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$test = array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\
    \tforeach ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzknnfkzn.php:40\n\
    Stack trace:\n#0 /tmp/tmpzknnfkzn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzknnfkzn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgr6uxuj.php:46\n\
    Stack trace:\n#0 /tmp/tmpbgr6uxuj.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbgr6uxuj.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekxeaqvx.php:35\n\
    Stack trace:\n#0 /tmp/tmpekxeaqvx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpekxeaqvx.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($counts);\n  $results = array();\n  foreach ($counts\
    \ as $key => $value) {\n    if ($value == $max) {\n      $results[$key] = $value;\n\
    \    }\n  }\n  return $results;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzksicmn.php:47\n\
    Stack trace:\n#0 /tmp/tmpnzksicmn.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnzksicmn.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter]++;\n        } else {\n           \
    \ $counts[$letter] = 1;\n        }\n    }\n    return $counts;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdlyjhz_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpdlyjhz_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdlyjhz_a.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjmrl5rl.php:35\n\
    Stack trace:\n#0 /tmp/tmpsjmrl5rl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsjmrl5rl.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8cjpu_i.php:44\n\
    Stack trace:\n#0 /tmp/tmpn8cjpu_i.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn8cjpu_i.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = str_replace(\" \", \"\
    \", $test);\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzgcz756.php:40\n\
    Stack trace:\n#0 /tmp/tmpuzgcz756.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuzgcz756.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewqgn_4v.php:46\n\
    Stack trace:\n#0 /tmp/tmpewqgn_4v.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpewqgn_4v.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    foreach\
    \ ($result as $key => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgalxd201.php:46\n\
    Stack trace:\n#0 /tmp/tmpgalxd201.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpgalxd201.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = str_replace(\" \", \"\"\
    , $test);\n  $test = str_split($test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = array();\n  foreach ($test as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_cg47f9.php:41\n\
    Stack trace:\n#0 /tmp/tmph_cg47f9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph_cg47f9.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $newArr\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $newArr[$key] = $value;\n        }\n    }\n    return $newArr;\n\
    }\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\n</pre><pre>Array\n\
    (\n    [a] => 2\n    [b] => 2\n)\n</pre><pre>Array\n(\n    [a] => 2\n    [b] =>\
    \ 2\n)\n</pre><pre>Array\n(\n    [b] => 4\n)\n</pre><pre>Array\n(\n    [] => 1\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgeptkkf.php:54\n\
    Stack trace:\n#0 /tmp/tmpdgeptkkf.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpdgeptkkf.php\
    \ on line 54\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ce7mfgc.php:35\n\
    Stack trace:\n#0 /tmp/tmp4ce7mfgc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4ce7mfgc.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3i6irw1.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3i6irw1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe3i6irw1.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $test = array_count_values($test);\n  $max = max($test);\n  $result = array();\n\
    \  foreach ($test as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_qlf6xb.php:40\n\
    Stack trace:\n#0 /tmp/tmpn_qlf6xb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpn_qlf6xb.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $result = array();\n \
    \   foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcy1o876.php:47\n\
    Stack trace:\n#0 /tmp/tmppcy1o876.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppcy1o876.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    foreach ($histogram\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($histogram[$key]);\n\
    \        }\n    }\n    return $histogram;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7mc9x7t.php:45\n\
    Stack trace:\n#0 /tmp/tmpm7mc9x7t.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpm7mc9x7t.php\
    \ on line 45\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm1v051n.php:39\n\
    Stack trace:\n#0 /tmp/tmpzm1v051n.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzm1v051n.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$test = array_count_values($test);\n\tarsort($test);\n\t$max = reset($test);\n\
    \tforeach ($test as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\
    \t\t}\n\t}\n\treturn $test;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65jac0lr.php:40\n\
    Stack trace:\n#0 /tmp/tmp65jac0lr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp65jac0lr.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $hist = array();\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $hist)) {\n            $hist[$value]++;\n        } else {\n            $hist[$value]\
    \ = 1;\n        }\n    }\n    $max = max($hist);\n    $result = array();\n   \
    \ foreach ($hist as $key => $value) {\n        if ($value == $max) {\n       \
    \     $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6phbs2j0.php:47\n\
    Stack trace:\n#0 /tmp/tmp6phbs2j0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6phbs2j0.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $result = [];\n    $test_array\
    \ = explode(\" \", $test);\n    foreach ($test_array as $value) {\n        if\
    \ (array_key_exists($value, $result)) {\n            $result[$value] += 1;\n \
    \       } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjsqwdl3.php:35\n\
    Stack trace:\n#0 /tmp/tmpqjsqwdl3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqjsqwdl3.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($counts);\n  $result = array();\n  foreach ($counts\
    \ as $key => $value) {\n    if ($value == $max) {\n      $result[$key] = $value;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuce9v_s.php:47\n\
    Stack trace:\n#0 /tmp/tmppuce9v_s.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppuce9v_s.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]++;\n\
    \        } else {\n            $letter_count[$letter] = 1;\n        }\n    }\n\
    \    $max_count = max($letter_count);\n    $max_letters = array();\n    foreach\
    \ ($letter_count as $letter => $count) {\n        if ($count == $max_count) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c62z6n4.php:47\n\
    Stack trace:\n#0 /tmp/tmp5c62z6n4.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5c62z6n4.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = str_replace(\" \", \"\"\
    , $test);\n\t$test = str_split($test);\n\t$test = array_count_values($test);\n\
    \tarsort($test);\n\t$max = max($test);\n\t$result = array();\n\tforeach ($test\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmxdkkc4.php:42\n\
    Stack trace:\n#0 /tmp/tmpzmxdkkc4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzmxdkkc4.php\
    \ on line 42\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    foreach ($test\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx4nm31e.php:38\n\
    Stack trace:\n#0 /tmp/tmphx4nm31e.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphx4nm31e.php\
    \ on line 38\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oxqecw8.php:44\n\
    Stack trace:\n#0 /tmp/tmp4oxqecw8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4oxqecw8.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test_array = explode(\" \", $test);\n\
    \  $count_array = array_count_values($test_array);\n  $max_count = max($count_array);\n\
    \  $result = array();\n  foreach ($count_array as $key => $value) {\n    if ($value\
    \ == $max_count) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphg9clwfs.php:39\n\
    Stack trace:\n#0 /tmp/tmphg9clwfs.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphg9clwfs.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8cjpu_i.php:44\n\
    Stack trace:\n#0 /tmp/tmpn8cjpu_i.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn8cjpu_i.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3i6irw1.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3i6irw1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe3i6irw1.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $result = array();\n  foreach ($test as $letter) {\n    if (isset($result[$letter]))\
    \ {\n      $result[$letter]++;\n    } else {\n      $result[$letter] = 1;\n  \
    \  }\n  }\n  $max = max($result);\n  $result = array_filter($result, function($value)\
    \ use ($max) {\n    return $value == $max;\n  });\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvicx58i.php:44\n\
    Stack trace:\n#0 /tmp/tmpfvicx58i.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfvicx58i.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $histogram = array_filter($histogram,\
    \ function($value) use ($max) {\n    return $value == $max;\n  });\n  return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk6buzg7.php:44\n\
    Stack trace:\n#0 /tmp/tmpfk6buzg7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfk6buzg7.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n$test = \"a b c\";\n$test1 = \"a b b a\";\n$test2 = \"a b c a b\";\n$test3\
    \ = \"b b b b a\";\n$test4 = \"\";\n\nprint_r(histogram($test));\nprint_r(histogram($test1));\n\
    print_r(histogram($test2));\nprint_r(histogram($test3));\nprint_r(histogram($test4));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n    [a]\
    \ => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n)\nArray\n(\n \
    \   [b] => 4\n)\nArray\n(\n    [] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmptuzzqntr.php:52\nStack trace:\n#0 /tmp/tmptuzzqntr.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptuzzqntr.php on line 52\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59db2cbd.php:40\n\
    Stack trace:\n#0 /tmp/tmp59db2cbd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp59db2cbd.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdsf0bwa.php:40\n\
    Stack trace:\n#0 /tmp/tmpkdsf0bwa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkdsf0bwa.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($array as $value) {\n        if (array_key_exists($value,\
    \ $histogram)) {\n            $histogram[$value]++;\n        } else {\n      \
    \      $histogram[$value] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfoeqc_w.php:47\n\
    Stack trace:\n#0 /tmp/tmpbfoeqc_w.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbfoeqc_w.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $result = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $result)) {\n      $result[$value] += 1;\n    } else {\n      $result[$value]\
    \ = 1;\n    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\n$result = histogram($test);\n\
    print_r($result);\n\n$test = \"a b b a\";\n$result = histogram($test);\nprint_r($result);\n\
    \n$test = \"a b c a b\";\n$result = histogram($test);\nprint_r($result);\n\n$test\
    \ = \"b b b b a\";\n$result = histogram($test);\nprint_r($result);\n\n$test =\
    \ \"\";\n$result = histogram($test);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n    [a]\
    \ => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n    [c] => 1\n\
    )\nArray\n(\n    [b] => 4\n    [a] => 1\n)\nArray\n(\n    [] => 1\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmppplyiwo2.php:54\nStack trace:\n\
    #0 /tmp/tmppplyiwo2.php(63): test()\n#1 {main}\n  thrown in /tmp/tmppplyiwo2.php\
    \ on line 54\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslb48uiu.php:46\n\
    Stack trace:\n#0 /tmp/tmpslb48uiu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpslb48uiu.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (isset($counts[$letter]))\
    \ {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter] = 1;\n  \
    \  }\n  }\n  $max = max($counts);\n  $result = array();\n  foreach ($counts as\
    \ $letter => $count) {\n    if ($count == $max) {\n      $result[$letter] = $count;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0zicige.php:47\n\
    Stack trace:\n#0 /tmp/tmpd0zicige.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd0zicige.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (!array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] = 1;\n        } else {\n   \
    \         $histogram[$letter]++;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsptvh4ri.php:35\n\
    Stack trace:\n#0 /tmp/tmpsptvh4ri.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsptvh4ri.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $letter_count = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $letter_count)) {\n      $letter_count[$letter]++;\n    } else {\n      $letter_count[$letter]\
    \ = 1;\n    }\n  }\n  $max_count = max($letter_count);\n  $max_letters = array();\n\
    \  foreach ($letter_count as $letter => $count) {\n    if ($count == $max_count)\
    \ {\n      $max_letters[$letter] = $count;\n    }\n  }\n  return $max_letters;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_ioe1ie.php:47\n\
    Stack trace:\n#0 /tmp/tmpb_ioe1ie.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpb_ioe1ie.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($array as $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value] += 1;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpov4k9ef9.php:35\n\
    Stack trace:\n#0 /tmp/tmpov4k9ef9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpov4k9ef9.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach\
    \ ($histogram as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp43i5h5.php:47\n\
    Stack trace:\n#0 /tmp/tmpfp43i5h5.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpfp43i5h5.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] += 1;\n        } else {\n        \
    \    $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxr3yqt9.php:35\n\
    Stack trace:\n#0 /tmp/tmpdxr3yqt9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdxr3yqt9.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jdr7hee.php:35\n\
    Stack trace:\n#0 /tmp/tmp0jdr7hee.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0jdr7hee.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = str_replace(' ', '',\
    \ $test);\n    $test = str_split($test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value]++;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hkjg46v.php:45\n\
    Stack trace:\n#0 /tmp/tmp9hkjg46v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp9hkjg46v.php\
    \ on line 45\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphj58at1o.php:39\n\
    Stack trace:\n#0 /tmp/tmphj58at1o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphj58at1o.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprg7ifpir.php:46\n\
    Stack trace:\n#0 /tmp/tmprg7ifpir.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprg7ifpir.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = str_replace(\" \", \"\"\
    , $test);\n  $test = str_split($test);\n  $test = array_count_values($test);\n\
    \  $max = max($test);\n  $result = array();\n  foreach ($test as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_cg47f9.php:41\n\
    Stack trace:\n#0 /tmp/tmph_cg47f9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph_cg47f9.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon08nsb4.php:47\n\
    Stack trace:\n#0 /tmp/tmpon08nsb4.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpon08nsb4.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $result = array();\n  foreach ($test as $value) {\n    if (array_key_exists($value,\
    \ $result)) {\n      $result[$value]++;\n    } else {\n      $result[$value] =\
    \ 1;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpao3bgtvj.php:35\n\
    Stack trace:\n#0 /tmp/tmpao3bgtvj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpao3bgtvj.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdsf0bwa.php:40\n\
    Stack trace:\n#0 /tmp/tmpkdsf0bwa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkdsf0bwa.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4myg280d.php:39\n\
    Stack trace:\n#0 /tmp/tmp4myg280d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4myg280d.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslb48uiu.php:46\n\
    Stack trace:\n#0 /tmp/tmpslb48uiu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpslb48uiu.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $output = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $output)) {\n      $output[$value] += 1;\n    } else {\n      $output[$value]\
    \ = 1;\n    }\n  }\n  return $output;\n}\n\nfunction candidate(...$args) {\n \
    \   return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfavenf1v.php:35\n\
    Stack trace:\n#0 /tmp/tmpfavenf1v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfavenf1v.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8cjpu_i.php:44\n\
    Stack trace:\n#0 /tmp/tmpn8cjpu_i.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn8cjpu_i.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oxqecw8.php:44\n\
    Stack trace:\n#0 /tmp/tmp4oxqecw8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4oxqecw8.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $result = array();\n  $test =\
    \ explode(\" \", $test);\n  $max = 0;\n  foreach ($test as $key => $value) {\n\
    \    if (array_key_exists($value, $result)) {\n      $result[$value]++;\n    }\
    \ else {\n      $result[$value] = 1;\n    }\n    if ($result[$value] > $max) {\n\
    \      $max = $result[$value];\n    }\n  }\n  foreach ($result as $key => $value)\
    \ {\n    if ($value != $max) {\n      unset($result[$key]);\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuh6km3bh.php:49\n\
    Stack trace:\n#0 /tmp/tmpuh6km3bh.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpuh6km3bh.php\
    \ on line 49\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$array = explode(\" \", $test);\n\
    \t$count = array_count_values($array);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w7md725.php:40\n\
    Stack trace:\n#0 /tmp/tmp2w7md725.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2w7md725.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n    [a]\
    \ => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n)\nArray\n(\n \
    \   [b] => 4\n)\nArray\n(\n    [] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsbpi0flk.php:44\nStack trace:\n#0 /tmp/tmpsbpi0flk.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsbpi0flk.php on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (isset($counts[$letter]))\
    \ {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter] = 1;\n  \
    \  }\n  }\n  $max = max($counts);\n  $max_letters = array();\n  foreach ($counts\
    \ as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwt4dphnz.php:47\n\
    Stack trace:\n#0 /tmp/tmpwt4dphnz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwt4dphnz.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59db2cbd.php:40\n\
    Stack trace:\n#0 /tmp/tmp59db2cbd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp59db2cbd.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\tarsort($count);\n\t$max = max($count);\n\
    \t$result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9prdrqn.php:41\n\
    Stack trace:\n#0 /tmp/tmpo9prdrqn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo9prdrqn.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value] += 1;\n\t\t} else {\n\t\t\t$result[$value]\
    \ = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplegpblks.php:35\n\
    Stack trace:\n#0 /tmp/tmplegpblks.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplegpblks.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    foreach\
    \ ($count as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx3pjj0b.php:39\n\
    Stack trace:\n#0 /tmp/tmpnx3pjj0b.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnx3pjj0b.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxt778wq.php:47\n\
    Stack trace:\n#0 /tmp/tmpcxt778wq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpcxt778wq.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result2 = array();\n\
    \    foreach ($result as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result2[$key] = $value;\n        }\n    }\n    return $result2;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw7l8ik1.php:46\n\
    Stack trace:\n#0 /tmp/tmpkw7l8ik1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpkw7l8ik1.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter] += 1;\n        } else {\n        \
    \    $counts[$letter] = 1;\n        }\n    }\n    $max = max($counts);\n    $keys\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($keys as\
    \ $key) {\n        $result[$key] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5id69o9.php:46\n\
    Stack trace:\n#0 /tmp/tmpm5id69o9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm5id69o9.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $result = array();\n  foreach ($test as $value) {\n    if (!isset($result[$value]))\
    \ {\n      $result[$value] = 1;\n    } else {\n      $result[$value]++;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fxl9d8r.php:35\n\
    Stack trace:\n#0 /tmp/tmp2fxl9d8r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2fxl9d8r.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $letterCount = array();\n    foreach ($letters as $letter) {\n        if\
    \ (isset($letterCount[$letter])) {\n            $letterCount[$letter]++;\n   \
    \     } else {\n            $letterCount[$letter] = 1;\n        }\n    }\n   \
    \ $max = max($letterCount);\n    $result = array();\n    foreach ($letterCount\
    \ as $letter => $count) {\n        if ($count == $max) {\n            $result[$letter]\
    \ = $count;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpziuez3o9.php:47\n\
    Stack trace:\n#0 /tmp/tmpziuez3o9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpziuez3o9.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvw6ezxq0.php:46\n\
    Stack trace:\n#0 /tmp/tmpvw6ezxq0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpvw6ezxq0.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (!isset($letter_count[$letter])) {\n            $letter_count[$letter] = 0;\n\
    \        }\n        $letter_count[$letter]++;\n    }\n    $max_count = max($letter_count);\n\
    \    $max_letters = array();\n    foreach ($letter_count as $letter => $count)\
    \ {\n        if ($count == $max_count) {\n            $max_letters[$letter] =\
    \ $count;\n        }\n    }\n    return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9eesqd3j.php:46\n\
    Stack trace:\n#0 /tmp/tmp9eesqd3j.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp9eesqd3j.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nArray\n(\n    [a]\
    \ => 2\n    [b] => 2\n)\nArray\n(\n    [a] => 2\n    [b] => 2\n)\nArray\n(\n \
    \   [b] => 4\n)\nArray\n(\n    [] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfb3y0gre.php:44\nStack trace:\n#0 /tmp/tmpfb3y0gre.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfb3y0gre.php on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value]++;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach\
    \ ($histogram as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5o1bc27.php:47\n\
    Stack trace:\n#0 /tmp/tmpi5o1bc27.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpi5o1bc27.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\n$test2 =\
    \ \"a b b a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\"\
    ;\n\necho \"Test 1: \" . $test . \"\\n\";\nprint_r(histogram($test));\necho \"\
    \\n\";\necho \"Test 2: \" . $test2 . \"\\n\";\nprint_r(histogram($test2));\necho\
    \ \"\\n\";\necho \"Test 3: \" . $test3 . \"\\n\";\nprint_r(histogram($test3));\n\
    echo \"\\n\";\necho \"Test 4: \" . $test4 . \"\\n\";\nprint_r(histogram($test4));\n\
    echo \"\\n\";\necho \"Test 5: \" . $test5 . \"\\n\";\nprint_r(histogram($test5));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test 1: a b c\nArray\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\n\n\
    Test 2: a b b a\nArray\n(\n    [a] => 2\n    [b] => 2\n)\n\nTest 3: a b c a b\n\
    Array\n(\n    [a] => 2\n    [b] => 2\n)\n\nTest 4: b b b b a\nArray\n(\n    [b]\
    \ => 4\n)\n\nTest 5: \nArray\n(\n    [] => 1\n)\n\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpidh7_gys.php:61\nStack trace:\n#0 /tmp/tmpidh7_gys.php(65):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpidh7_gys.php on line 61\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprukra_x5.php:35\n\
    Stack trace:\n#0 /tmp/tmprukra_x5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprukra_x5.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test_array = explode(\" \"\
    , $test);\n    $count_array = array_count_values($test_array);\n    $max_value\
    \ = max($count_array);\n    $max_keys = array_keys($count_array, $max_value);\n\
    \    $result = array();\n    foreach ($max_keys as $key) {\n        $result[$key]\
    \ = $max_value;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7msh28l.php:38\n\
    Stack trace:\n#0 /tmp/tmpm7msh28l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm7msh28l.php\
    \ on line 38\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3i6irw1.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3i6irw1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe3i6irw1.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    foreach ($test\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\n\nfunction candidate(...$args) {\n  \
    \  return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5qh4efl.php:39\n\
    Stack trace:\n#0 /tmp/tmpq5qh4efl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq5qh4efl.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($array as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $max_array = array();\n\
    \    foreach ($result as $key => $value) {\n        if ($value == $max) {\n  \
    \          $max_array[$key] = $value;\n        }\n    }\n    return $max_array;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4f0m28y.php:47\n\
    Stack trace:\n#0 /tmp/tmpf4f0m28y.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpf4f0m28y.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8rhbvp0.php:40\n\
    Stack trace:\n#0 /tmp/tmpx8rhbvp0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx8rhbvp0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxvg8mm8.php:44\n\
    Stack trace:\n#0 /tmp/tmpyxvg8mm8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyxvg8mm8.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprukra_x5.php:35\n\
    Stack trace:\n#0 /tmp/tmprukra_x5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprukra_x5.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59db2cbd.php:40\n\
    Stack trace:\n#0 /tmp/tmp59db2cbd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp59db2cbd.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  return $counts;\n}\n\nfunction candidate(...$args) {\n \
    \   return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsyatq8z.php:35\n\
    Stack trace:\n#0 /tmp/tmptsyatq8z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptsyatq8z.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test_array = explode(\" \", $test);\n\
    \  $test_array_count = array_count_values($test_array);\n  $max_count = max($test_array_count);\n\
    \  $max_count_array = array();\n  foreach ($test_array_count as $key => $value)\
    \ {\n    if ($value == $max_count) {\n      $max_count_array[$key] = $value;\n\
    \    }\n  }\n  return $max_count_array;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaadelxdq.php:40\n\
    Stack trace:\n#0 /tmp/tmpaadelxdq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpaadelxdq.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4myg280d.php:39\n\
    Stack trace:\n#0 /tmp/tmp4myg280d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4myg280d.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $histogram = array();\n  $test\
    \ = explode(\" \", $test);\n  foreach ($test as $letter) {\n    if (isset($histogram[$letter]))\
    \ {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter] = 1;\n\
    \    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach ($histogram\
    \ as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjosq57sr.php:47\n\
    Stack trace:\n#0 /tmp/tmpjosq57sr.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpjosq57sr.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdf9w8048.php:34\n\
    Stack trace:\n#0 /tmp/tmpdf9w8048.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdf9w8048.php\
    \ on line 34\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qrwyr0g.php:46\n\
    Stack trace:\n#0 /tmp/tmp2qrwyr0g.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2qrwyr0g.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxvg8mm8.php:44\n\
    Stack trace:\n#0 /tmp/tmpyxvg8mm8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyxvg8mm8.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4myg280d.php:39\n\
    Stack trace:\n#0 /tmp/tmp4myg280d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4myg280d.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $test = array_count_values($test);\n  arsort($test);\n  $max = max($test);\n\
    \  foreach ($test as $key => $value) {\n    if ($value != $max) {\n      unset($test[$key]);\n\
    \    }\n  }\n  return $test;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3e6b57g.php:40\n\
    Stack trace:\n#0 /tmp/tmpc3e6b57g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc3e6b57g.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value] += 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function ($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pasum23.php:44\n\
    Stack trace:\n#0 /tmp/tmp3pasum23.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3pasum23.php\
    \ on line 44\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $words = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($words as $word) {\n        if (isset($histogram[$word]))\
    \ {\n            $histogram[$word]++;\n        } else {\n            $histogram[$word]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7sy9qsm.php:47\n\
    Stack trace:\n#0 /tmp/tmps7sy9qsm.php(51): test()\n#1 {main}\n  thrown in /tmp/tmps7sy9qsm.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdsf0bwa.php:40\n\
    Stack trace:\n#0 /tmp/tmpkdsf0bwa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkdsf0bwa.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8rhbvp0.php:40\n\
    Stack trace:\n#0 /tmp/tmpx8rhbvp0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx8rhbvp0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($counts);\n  $max_letters = array();\n  foreach\
    \ ($counts as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrfatnu9.php:47\n\
    Stack trace:\n#0 /tmp/tmpkrfatnu9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpkrfatnu9.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zp31xcn.php:40\n\
    Stack trace:\n#0 /tmp/tmp_zp31xcn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_zp31xcn.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprukra_x5.php:35\n\
    Stack trace:\n#0 /tmp/tmprukra_x5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprukra_x5.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = str_replace(\" \", \"\"\
    , $test);\n\t$test = str_split($test);\n\t$test = array_count_values($test);\n\
    \t$max = max($test);\n\t$result = array();\n\tforeach ($test as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74rddwgh.php:41\n\
    Stack trace:\n#0 /tmp/tmp74rddwgh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp74rddwgh.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm3mqsmw.php:47\n\
    Stack trace:\n#0 /tmp/tmpkm3mqsmw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpkm3mqsmw.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (!isset($histogram[$letter]))\
    \ {\n            $histogram[$letter] = 1;\n        } else {\n            $histogram[$letter]++;\n\
    \        }\n    }\n    $max = max($histogram);\n    $result = array();\n    foreach\
    \ ($histogram as $key => $value) {\n        if ($value == $max) {\n          \
    \  $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx26j2rv.php:47\n\
    Stack trace:\n#0 /tmp/tmphx26j2rv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphx26j2rv.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_as4_mh.php:46\n\
    Stack trace:\n#0 /tmp/tmp3_as4_mh.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp3_as4_mh.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($array as $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value] += 1;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpov4k9ef9.php:35\n\
    Stack trace:\n#0 /tmp/tmpov4k9ef9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpov4k9ef9.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"\\n\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"\\n\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"\\n\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"\\n\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\n\nArray\n(\n   \
    \ [a] => 2\n    [b] => 2\n)\n\nArray\n(\n    [a] => 2\n    [b] => 2\n)\n\nArray\n\
    (\n    [b] => 4\n)\n\nArray\n(\n    [] => 1\n)\n\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpga6xpjoz.php:55\nStack trace:\n#0 /tmp/tmpga6xpjoz.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpga6xpjoz.php on line 55\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach\
    \ ($histogram as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8phi3k6.php:47\n\
    Stack trace:\n#0 /tmp/tmpp8phi3k6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpp8phi3k6.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach\
    \ ($histogram as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8phi3k6.php:47\n\
    Stack trace:\n#0 /tmp/tmpp8phi3k6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpp8phi3k6.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jdr7hee.php:35\n\
    Stack trace:\n#0 /tmp/tmp0jdr7hee.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0jdr7hee.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8rhbvp0.php:40\n\
    Stack trace:\n#0 /tmp/tmpx8rhbvp0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx8rhbvp0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $max_letters = array();\n  foreach\
    \ ($histogram as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8phi3k6.php:47\n\
    Stack trace:\n#0 /tmp/tmpp8phi3k6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpp8phi3k6.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm1v051n.php:39\n\
    Stack trace:\n#0 /tmp/tmpzm1v051n.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzm1v051n.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $newArr = [];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $newArr)) {\n            $newArr[$value]++;\n        } else {\n            $newArr[$value]\
    \ = 1;\n        }\n    }\n    return $newArr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjzcjhws.php:35\n\
    Stack trace:\n#0 /tmp/tmpgjzcjhws.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgjzcjhws.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdsf0bwa.php:40\n\
    Stack trace:\n#0 /tmp/tmpkdsf0bwa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkdsf0bwa.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($array as $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value] += 1;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  $max = max($histogram);\n  $result = array();\n  foreach\
    \ ($histogram as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpkk3fuf.php:47\n\
    Stack trace:\n#0 /tmp/tmplpkk3fuf.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplpkk3fuf.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]\
    \ += 1;\n        } else {\n            $letter_count[$letter] = 1;\n        }\n\
    \    }\n    $max_count = max($letter_count);\n    $max_letters = array();\n  \
    \  foreach ($letter_count as $letter => $count) {\n        if ($count == $max_count)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsg6xc3fl.php:47\n\
    Stack trace:\n#0 /tmp/tmpsg6xc3fl.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpsg6xc3fl.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    $max = reset($histogram);\n    $result = array();\n    foreach ($histogram\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizn68gh7.php:48\n\
    Stack trace:\n#0 /tmp/tmpizn68gh7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpizn68gh7.php\
    \ on line 48\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fw99eka.php:39\n\
    Stack trace:\n#0 /tmp/tmp2fw99eka.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2fw99eka.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    foreach ($test\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\n\nfunction candidate(...$args) {\n  \
    \  return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5qh4efl.php:39\n\
    Stack trace:\n#0 /tmp/tmpq5qh4efl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq5qh4efl.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $letter => $count) {\n   \
    \     if ($count == $max) {\n            $result[$letter] = $count;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4qpgxog.php:46\n\
    Stack trace:\n#0 /tmp/tmpr4qpgxog.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpr4qpgxog.php\
    \ on line 46\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $histogram)) {\n            $histogram[$value]++;\n        } else {\n      \
    \      $histogram[$value] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value != $max) {\n\
    \            unset($histogram[$key]);\n        }\n    }\n    return $histogram;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmp8qwqz.php:45\n\
    Stack trace:\n#0 /tmp/tmpkmp8qwqz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkmp8qwqz.php\
    \ on line 45\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8rhbvp0.php:40\n\
    Stack trace:\n#0 /tmp/tmpx8rhbvp0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx8rhbvp0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $letter => $count) {\n   \
    \     if ($count == $max) {\n            $result[$letter] = $count;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr0ynkgv.php:47\n\
    Stack trace:\n#0 /tmp/tmpsr0ynkgv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpsr0ynkgv.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter] += 1;\n        } else {\n        \
    \    $counts[$letter] = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters\
    \ = array();\n    foreach ($counts as $letter => $count) {\n        if ($count\
    \ == $max) {\n            $max_letters[$letter] = $count;\n        }\n    }\n\
    \    return $max_letters;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5o_329h.php:47\n\
    Stack trace:\n#0 /tmp/tmpr5o_329h.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpr5o_329h.php\
    \ on line 47\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g07b46z.php:40\n\
    Stack trace:\n#0 /tmp/tmp6g07b46z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6g07b46z.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce3_ztda.php:40\n\
    Stack trace:\n#0 /tmp/tmpce3_ztda.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpce3_ztda.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphj58at1o.php:39\n\
    Stack trace:\n#0 /tmp/tmphj58at1o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphj58at1o.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\n$test1 = \"a b c\";\n$test2 =\
    \ \"a b b a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\"\
    ;\n\necho \"Test 1: \";\nprint_r(histogram($test1));\necho \"Test 2: \";\nprint_r(histogram($test2));\n\
    echo \"Test 3: \";\nprint_r(histogram($test3));\necho \"Test 4: \";\nprint_r(histogram($test4));\n\
    echo \"Test 5: \";\nprint_r(histogram($test5));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test 1: Array\n(\n    [a] => 1\n    [b] => 1\n    [c] => 1\n)\nTest 2:\
    \ Array\n(\n    [a] => 2\n    [b] => 2\n)\nTest 3: Array\n(\n    [a] => 2\n  \
    \  [b] => 2\n)\nTest 4: Array\n(\n    [b] => 4\n)\nTest 5: Array\n(\n    [] =>\
    \ 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifhyodv.php:56\n\
    Stack trace:\n#0 /tmp/tmp6ifhyodv.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp6ifhyodv.php\
    \ on line 56\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    arsort($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3uhdw7d.php:41\n\
    Stack trace:\n#0 /tmp/tmpl3uhdw7d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl3uhdw7d.php\
    \ on line 41\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3i6irw1.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3i6irw1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe3i6irw1.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $count = array_count_values($test);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kamzfen.php:40\n\
    Stack trace:\n#0 /tmp/tmp1kamzfen.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kamzfen.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yiswd9_.php:40\n\
    Stack trace:\n#0 /tmp/tmp9yiswd9_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9yiswd9_.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $test = explode(\" \", $test);\n\
    \  $histogram = array();\n  foreach ($test as $key => $value) {\n    if (array_key_exists($value,\
    \ $histogram)) {\n      $histogram[$value]++;\n    } else {\n      $histogram[$value]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipf58dz1.php:35\n\
    Stack trace:\n#0 /tmp/tmpipf58dz1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpipf58dz1.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprukra_x5.php:35\n\
    Stack trace:\n#0 /tmp/tmprukra_x5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprukra_x5.php\
    \ on line 35\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7fs10d0.php:40\n\
    Stack trace:\n#0 /tmp/tmpc7fs10d0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc7fs10d0.php\
    \ on line 40\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n  $arr = explode(\" \", $test);\n\
    \  $count = array_count_values($arr);\n  $max = max($count);\n  $keys = array_keys($count,\
    \ $max);\n  $result = array();\n  foreach ($keys as $key) {\n    $result[$key]\
    \ = $max;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebvk4iig.php:39\n\
    Stack trace:\n#0 /tmp/tmpebvk4iig.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpebvk4iig.php\
    \ on line 39\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return an array\n// of the letter with the most repetition and containing the\
    \ corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1,\
    \ \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2,\
    \ \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" =>\
    \ 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\
    \")\n// array()\nfunction histogram($test) {\n    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $result[$letter] = $count;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6wz1l8k.php:47\n\
    Stack trace:\n#0 /tmp/tmpb6wz1l8k.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpb6wz1l8k.php\
    \ on line 47\n"
  timestamp: 1659730748

language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n    \
    \    return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3en1k51.php:27\n\
    Stack trace:\n#0 /tmp/tmpo3en1k51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3en1k51.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) {\n        return 0;\n    }\n \
    \   sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vmudg43.php:26\n\
    Stack trace:\n#0 /tmp/tmp9vmudg43.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9vmudg43.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($c % 2 == 0) {\n        return ($l[$c / 2]\
    \ + $l[$c / 2 - 1]) / 2;\n    } else {\n        return $l[$c / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe27teqrl.php:26\n\
    Stack trace:\n#0 /tmp/tmpe27teqrl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe27teqrl.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5_741rp.php:22\n\
    Stack trace:\n#0 /tmp/tmpb5_741rp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb5_741rp.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($c / 2);\n    if ($c % 2 == 0) {\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu9uixle.php:27\n\
    Stack trace:\n#0 /tmp/tmpsu9uixle.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsu9uixle.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n    \
    \    return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3en1k51.php:27\n\
    Stack trace:\n#0 /tmp/tmpo3en1k51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3en1k51.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ywl64vn.php:27\n\
    Stack trace:\n#0 /tmp/tmp8ywl64vn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8ywl64vn.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $h = intval($c / 2);\n    if ($c % 2 == 0)\
    \ {\n        return ($l[$h] + $l[$h - 1]) / 2;\n    } else {\n        return $l[$h];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6l4dwnx.php:27\n\
    Stack trace:\n#0 /tmp/tmpt6l4dwnx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt6l4dwnx.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ywl64vn.php:27\n\
    Stack trace:\n#0 /tmp/tmp8ywl64vn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8ywl64vn.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $s = sort($l);\n    if ($n % 2\
    \ == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n \
    \       return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpox8iednn.php:23\n\
    Stack trace:\n#0 /tmp/tmpox8iednn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpox8iednn.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqkgehxz.php:22\n\
    Stack trace:\n#0 /tmp/tmpuqkgehxz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuqkgehxz.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m1\
    \ = $l[$n / 2 - 1];\n        $m2 = $l[$n / 2];\n        return ($m1 + $m2) / 2;\n\
    \    } else {\n        return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpblc8h05x.php:23\n\
    Stack trace:\n#0 /tmp/tmpblc8h05x.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpblc8h05x.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $i = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$i - 1] + $l[$i]) / 2;\n    } else {\n        return $l[$i];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c2ztjwd.php:27\n\
    Stack trace:\n#0 /tmp/tmp6c2ztjwd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6c2ztjwd.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) {\n    return null;\n\
    \  }\n  sort($l);\n  $m = floor($n / 2);\n  if ($n % 2 == 0) {\n    return ($l[$m\
    \ - 1] + $l[$m]) / 2;\n  } else {\n    return $l[$m];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0bgdisl.php:27\n\
    Stack trace:\n#0 /tmp/tmpn0bgdisl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn0bgdisl.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek2u40qd.php:25\n\
    Stack trace:\n#0 /tmp/tmpek2u40qd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpek2u40qd.php\
    \ on line 25\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$n = count($l);\n\tif ($n == 0) {\n\t\treturn null;\n\
    \t}\n\tsort($l);\n\t$m = floor($n / 2);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$m\
    \ - 1] + $l[$m]) / 2;\n\t} else {\n\t\treturn $l[$m];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7k1hlf9h.php:27\n\
    Stack trace:\n#0 /tmp/tmp7k1hlf9h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7k1hlf9h.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2\
    \ == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n \
    \       return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp73_3hu43.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp73_3hu43.php:22\nStack trace:\n#0 /tmp/tmp73_3hu43.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp73_3hu43.php on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n       \
    \ return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17s1pdmw.php:27\n\
    Stack trace:\n#0 /tmp/tmp17s1pdmw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17s1pdmw.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n    \
    \    return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3en1k51.php:27\n\
    Stack trace:\n#0 /tmp/tmpo3en1k51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3en1k51.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n    \
    \    return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3en1k51.php:27\n\
    Stack trace:\n#0 /tmp/tmpo3en1k51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3en1k51.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqkgehxz.php:22\n\
    Stack trace:\n#0 /tmp/tmpuqkgehxz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuqkgehxz.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7mhv4uq.php:22\n\
    Stack trace:\n#0 /tmp/tmpl7mhv4uq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl7mhv4uq.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n       \
    \ return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17s1pdmw.php:27\n\
    Stack trace:\n#0 /tmp/tmp17s1pdmw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17s1pdmw.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk01ebxb6.php:22\n\
    Stack trace:\n#0 /tmp/tmpk01ebxb6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk01ebxb6.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($c % 2 == 0) {\n        return ($l[$c / 2]\
    \ + $l[$c / 2 - 1]) / 2;\n    } else {\n        return $l[$c / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe27teqrl.php:26\n\
    Stack trace:\n#0 /tmp/tmpe27teqrl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe27teqrl.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m1\
    \ = $l[$n / 2 - 1];\n        $m2 = $l[$n / 2];\n        return ($m1 + $m2) / 2;\n\
    \    } else {\n        return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnkhn4gt.php:23\n\
    Stack trace:\n#0 /tmp/tmpfnkhn4gt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfnkhn4gt.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort the list.\n    sort($l);\n    $n = count($l);\n\
    \    // If the number of elements is odd, return the middle element.\n    if ($n\
    \ % 2 == 1) {\n        return $l[($n - 1) / 2];\n    }\n    // Otherwise, return\
    \ the average of the two middle elements.\n    return ($l[$n / 2] + $l[$n / 2\
    \ - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_0zd7oe.php:25\n\
    Stack trace:\n#0 /tmp/tmpn_0zd7oe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn_0zd7oe.php\
    \ on line 25\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  $m = $n / 2;\n  if ($n % 2 == 0) {\n\
    \    return ($l[$m - 1] + $l[$m]) / 2;\n  } else {\n    return $l[$m];\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtngcy7a.php:22\n\
    Stack trace:\n#0 /tmp/tmpvtngcy7a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvtngcy7a.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7mhv4uq.php:22\n\
    Stack trace:\n#0 /tmp/tmpl7mhv4uq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl7mhv4uq.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m]\
    \ + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinhcw_v1.php:25\n\
    Stack trace:\n#0 /tmp/tmpinhcw_v1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpinhcw_v1.php\
    \ on line 25\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l) / 2;\n    sort($l);\n    if (count($l)\
    \ % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3tvdxrq.php:23\n\
    Stack trace:\n#0 /tmp/tmpq3tvdxrq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq3tvdxrq.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m]\
    \ + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinhcw_v1.php:25\n\
    Stack trace:\n#0 /tmp/tmpinhcw_v1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpinhcw_v1.php\
    \ on line 25\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n       \
    \ return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17s1pdmw.php:27\n\
    Stack trace:\n#0 /tmp/tmp17s1pdmw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17s1pdmw.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n       \
    \ return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17s1pdmw.php:27\n\
    Stack trace:\n#0 /tmp/tmp17s1pdmw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17s1pdmw.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqkgehxz.php:22\n\
    Stack trace:\n#0 /tmp/tmpuqkgehxz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuqkgehxz.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ft4x34p.php:26\n\
    Stack trace:\n#0 /tmp/tmp9ft4x34p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9ft4x34p.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2\
    \ == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n \
    \       return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp73_3hu43.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp73_3hu43.php:22\nStack trace:\n#0 /tmp/tmp73_3hu43.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp73_3hu43.php on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\
    \treturn ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[($n - 1)\
    \ / 2];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_pdyxy8.php:23\n\
    Stack trace:\n#0 /tmp/tmp8_pdyxy8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8_pdyxy8.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m\
    \ - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lsrzf5g.php:25\n\
    Stack trace:\n#0 /tmp/tmp4lsrzf5g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4lsrzf5g.php\
    \ on line 25\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2\
    \ == 0) {\n        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n\
    \        return $l[$len / 2];\n    }\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z_vn03b.php:23\n\
    Stack trace:\n#0 /tmp/tmp1z_vn03b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1z_vn03b.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7mhv4uq.php:22\n\
    Stack trace:\n#0 /tmp/tmpl7mhv4uq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl7mhv4uq.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1off6h1g.php:23\n\
    Stack trace:\n#0 /tmp/tmp1off6h1g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1off6h1g.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_otajk5.php:26\n\
    Stack trace:\n#0 /tmp/tmps_otajk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps_otajk5.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2\
    \ == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n \
    \       return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpmviorm3q.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmviorm3q.php:22\nStack trace:\n#0 /tmp/tmpmviorm3q.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmviorm3q.php on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uolcmxq.php:27\n\
    Stack trace:\n#0 /tmp/tmp8uolcmxq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8uolcmxq.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bpi7mwv.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bpi7mwv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6bpi7mwv.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xgwapp.php:21\n\
    Stack trace:\n#0 /tmp/tmp10xgwapp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10xgwapp.php\
    \ on line 21\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7mhv4uq.php:22\n\
    Stack trace:\n#0 /tmp/tmpl7mhv4uq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl7mhv4uq.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n       \
    \ return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17s1pdmw.php:27\n\
    Stack trace:\n#0 /tmp/tmp17s1pdmw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17s1pdmw.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3gyp2zo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3gyp2zo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3gyp2zo.php\
    \ on line 26\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqkgehxz.php:22\n\
    Stack trace:\n#0 /tmp/tmpuqkgehxz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuqkgehxz.php\
    \ on line 22\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n    \
    \    return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3en1k51.php:27\n\
    Stack trace:\n#0 /tmp/tmpo3en1k51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo3en1k51.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1vb5o4.php:27\n\
    Stack trace:\n#0 /tmp/tmpzh1vb5o4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzh1vb5o4.php\
    \ on line 27\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqu0idxy.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqu0idxy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjqu0idxy.php\
    \ on line 23\n"
  timestamp: 1659729887

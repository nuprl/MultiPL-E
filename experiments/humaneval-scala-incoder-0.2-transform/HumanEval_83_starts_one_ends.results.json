{
  "language": "scala",
  "name": "HumanEval_83_starts_one_ends",
  "results": [
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var start = 1\n        var end = 1\n        while(start <= n) {\n            while(start <= n && end <= n) {\n                if(start == end) {\n                    count += 1\n                }\n                start += 1\n                end += 1\n            }\n            start += 1\n            end = start\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp78m6me6h.scala:25)\n\tat Problem.main(tmp78m6me6h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i <- 0 until n){\n            if((i%10)==1 && (i%100)!=0 && (i%1000)!=0){\n                count += 1\n                last = i\n            }\n        }\n        count += last\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4f5gvf1z.scala:9:25 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until n){\n\u001b[31m\u001b[31m  |\u001b[0m                         ^\u001b[0m\n\u001b[31m  |\u001b[0m                         Found:    (n : Long)\n\u001b[31m  |\u001b[0m                         Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = scala.collection.mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            }\n        }\n        for (i <- ones) {\n            if (i % 10 == 1) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5g7x5brv.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798795
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val onesOnes = mutable.Map[Long, Long]()\n        val zerosZeros = mutable.Map[Long, Long]()\n        val onesZeroOnes = mutable.Map[Long, Long]()\n        val zerosOneOnes = mutable.Map[Long, Long]()\n        val onesOneOnes = mutable.Map[Long, Long]()\n        val zerosZeroOnes = mutable.Map[Long, Long]()\n        val onesZeroZeros = mutable.Map[Long, Long]()\n        val zerosOneZeros = mutable.Map[Long, Long]()\n        val onesOneZeros = mutable.Map[Long, Long]()\n        val zerosOneOneZeros = mutable.Map[Long, Long]()\n        val onesOneOneZeros = mutable.Map[Long, Long]()\n        val zerosZeroOneZeros = mutable.Map[Long, Long]()\n        val onesZeroZeroOnes = mutable.Map[Long, Long]()\n        val zerosOneZeroOnes = mutable.Map[Long, Long]()\n        val onesOneZeroOnes = mutable.Map[Long, Long]()\n        val zerosOneOneZeroOnes = mutable.Map[Long, Long]()\n        val onesOneOneZeroOnes = mutable.Map[Long, Long]()\n        val zerosZeroOneOneZeros = mutable.Map[Long, Long]()\n        val onesZeroZeroOneOnes = mutable.Map[Long, Long]()\n        val zerosOneZeroOneOnes = mutable.Map[Long, Long]()\n        val onesOneZeroOneOnes = mutable.Map[Long, Long]()\n        val zerosOneOneZeroOneOnes = mutable.Map[Long, Long]()\n        val onesOneOneZeroOneOnes = mutable.Map[Long, Long]()\n        val zerosZeroOneOneOneZeros = mutable.Map[Long, Long]()\n        val onesZeroZeroOneOneOnes = mutable.Map[Long, Long]()\n        val zeros\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp684hzggr.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp684hzggr.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp684hzggr.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp684hzggr.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp684hzggr.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp684hzggr.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanat",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for (i <- 0 until n) if (i % 10 == 1) ones += i\n        for (i <- 0 until n) if (i % 10 != 1 && i % 10 != 9) count += ones.length\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubw9x9b.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoubw9x9b.scala:9:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until n) \u001b[33mif\u001b[0m (i % \u001b[31m10\u001b[0m == \u001b[31m1\u001b[0m) ones += i\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (n : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoubw9x9b.scala:10:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until n) \u001b[33mif\u001b[0m (i % \u001b[31m10\u001b[0m != \u001b[31m1\u001b[0m && i % \u001b[31m10\u001b[0m != \u001b[31m9\u001b[0m) count += ones.length\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n        val digits = n.toString.reverse.grouped(2).map(_.reverse.toInt)\n        val digit = digits.head\n        val digitCount = digits.count(_ == digit)\n        val oneCount = digits.count(_ == 1)\n        val zeroCount = digits.count(_ == 0)\n        val oneDigitCount = digits.count(_ == digit)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.head\n        val zeroDigit = digits.last\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigit = digits.head\n        val zeroDigit = digits.last\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigit = digits.head\n        val zeroDigit = digits.last\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.count(_ == oneDigit)\n        val zeroDigitCount = digits.count(_ == zeroDigit)\n        val oneDigitCount = digits.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk4ttza3e.scala:50:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpk4ttza3e.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneDigitCount\u001b[0m = digits.count(_ == oneDigit)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpk4ttza3e.scala:20:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroDigitCount\u001b[0m = digits.count(_ == zeroDigit)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpk4ttza3e.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneDigitCount\u001b[0m = digits.count(_ == oneDigit)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpk4ttza3e.scala:22:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroDigitCount\u001b[0m = digits.count(_ == zeroDigit)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined i",
      "stdout": "",
      "timestamp": 1659798797
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val starts = mutable.ListBuffer[Long]()\n        val ends = mutable.ListBuffer[Long]()\n        val zeroIndex = mutable.ListBuffer[Long]()\n        val oneIndex = mutable.ListBuffer[Long]()\n        val zeroCount = mutable.ListBuffer[Long]()\n        val oneCount = mutable.ListBuffer[Long]()\n        while(n > 0) {\n            val digit = n % 10\n            if(digit == 1) {\n                ones += digit\n                oneIndex += digit\n                oneCount += digit\n            } else if(digit == 0) {\n                zeros += digit\n                zeroIndex += digit\n                zeroCount += digit\n            } else {\n                counts += digit\n                starts += digit\n                ends += digit\n            }\n            n /= 10\n        }\n        val zeroCount = ones.size - zeros.size\n        val oneCount = ones.size - ones.tail.head\n        val zeroIndex = ones.size - zeros.size - ones.tail.head\n        val oneIndex = ones.size - ones.tail.head\n        val zeros = zeros.tail\n        val ones = ones.tail\n        val zeroIndex = zeroIndex.tail\n        val oneIndex = oneIndex.tail\n        val zeroCount = zeroCount.tail\n        val oneCount = oneCount.tail\n        val starts = starts.tail\n        val ends = ends.tail\n        val counts = counts.tail\n        val zeros = zeros.take(zeroCount.size)\n        val ones = ones.take(oneCount.size)\n        val zeroIndex = zeroIndex.take(zeroCount.size)\n        val oneIndex = oneIndex.take(oneCount.size)\n        val zeroCount = zeroCount.take(zeroCount.size)\n        val oneCount = oneCount.take(oneCount.size)\n        val starts = starts.take(starts.size)\n        val ends = ends.take(ends.size)\n        val counts = counts.take(counts.size)\n        val zeros = zeros.toList\n        val ones = ones.toList\n        val zeroIndex = zeroIndex.toList\n        val oneIndex = oneIndex.toList\n        val zeroCount = zeroCount.toList\n        val oneCount = oneCount.toList\n        val starts = starts.toList\n        val ends = ends.toList\n        val counts = counts.toList\n        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpva2nqer9.scala:33:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroCount\u001b[0m = ones.size - zeros.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpva2nqer9.scala:34:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneCount\u001b[0m = ones.size - ones.tail.head\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpva2nqer9.scala:35:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroIndex\u001b[0m = ones.size - zeros.size - ones.tail.head\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroIndex is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroIndex\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpva2nqer9.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneIndex\u001b[0m = ones.size - ones.tail.head\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneIndex is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneIndex\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpva2nqer9.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = zeros.tail\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeros i",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val digits = n.toString.reverse.grouped(10).toList\n        for (i <- 0 until digits.size) {\n            val digit = digits(i)\n            if (digit == 1)\n                ones += digits(i)\n            else if (digit == 0)\n                zeros += digits(i)\n            else {\n                val count = counts.getOrElse(digits(i), 0) + 1\n                counts += digit -> (count + 1)\n            }\n        }\n        val oneCount = ones.toList.size\n        val zeroCount = zeros.toList.size\n        val count = oneCount + zeroCount\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgakkzeus.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgakkzeus.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgakkzeus.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgakkzeus.scala:13:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mif\u001b[0m (digit == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         Values of types String and Int cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgakkzeus.scala:15:21 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (digit == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         Values of types String and Int cannot be compared with == or !=\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        val limit = math.pow(10, math.ceil(math.log10(n)))\n        val starts = mutable.ArrayBuffer.empty[Long]\n        val ends = mutable.ArrayBuffer.empty[Long]\n        val current = 1\n        while(current <= limit) {\n            val remainder = n % current\n            n /= current\n            val newCount = if (remainder == 0) 1 else 0\n            counts += newCount\n            if (newCount == 1 && current == 1) {\n                starts += current\n            } else if (newCount == 1 && current == 0) {\n                ends += current\n            }\n            current += 1\n        }\n        val result = counts.sum\n        val startsOne = starts.sum\n        val endsOne = ends.sum\n        val startsOneEnd = startsOne + endsOne\n        val endsOneEnd = startsOne + endsOne + ones.size\n        val startsZero = starts.size - ends.size - ones.size\n        val endsZero = startsZero + ends.size - ones.size\n        val startsZeroEnd = startsZero + ends.size - ones.size\n        val endsZeroEnd = startsZeroEnd + ends.size - ones.size\n        val startsOneEnd = startsOne + endsOne + ones.size\n        val endsOneEnd = startsOne + endsOne + ones.size\n        val startsZeroEnd = startsZero + ends.size - ends.size - ones.size\n        val endsZeroEnd = startsZeroEnd + ends.size - ends.size - ones.size\n        val startsOneEnd = startsOne + endsOne + ones.size\n        val endsOneEnd = startsOne + endsOne + ones.size\n        val startsZeroEnd = startsZero + ends.size - ends.size - ones.size\n        val endsZeroEnd = startsZeroEnd + ends.size - ends.size - ones.size\n        val startsOneEnd = startsOne + endsOne + ones.size\n        val endsOneEnd = startsOne + endsOne + ones.size\n        val startsZeroEnd = startsZero + ends.size - ends.size - ones.size\n        val endsZeroEnd = startsZeroEnd + ends.size - ends.size - ones.size\n        val startsOneEnd = startsOne + endsOne + ones.size\n        val endsOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjhuqbdbp.scala:49:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpjhuqbdbp.scala:35:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mstartsOneEnd\u001b[0m = startsOne + endsOne + ones.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mstartsOneEnd is already defined as \u001b[33mvalue\u001b[0m \u001b[35mstartsOneEnd\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpjhuqbdbp.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mendsOneEnd\u001b[0m = startsOne + endsOne + ones.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mendsOneEnd is already defined as \u001b[33mvalue\u001b[0m \u001b[35mendsOneEnd\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpjhuqbdbp.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mstartsZeroEnd\u001b[0m = startsZero + ends.size - ends.size - ones.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mstartsZeroEnd is already defined as \u001b[33mvalue\u001b[0m \u001b[35mstartsZeroEnd\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpjhuqbdbp.scala:38:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mendsZeroEnd\u001b[0m = startsZeroEnd + ends.size - ends.size - ones.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mendsZeroEnd is already defined as \u001b[33mvalue\u001b[0m \u001b[35mendsZeroEnd\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[",
      "stdout": "",
      "timestamp": 1659798797
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n        var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n        var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n        var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n        var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n        var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n        var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix = 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountZeros = mutable.Map[Long, Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n                onesCount += 1\n                onesCounts += i -> onesCount.getOrElse(i, 0)\n            }\n            if (i % 10 == 0) {\n                zeros += i\n                zerosCount += 1\n                zerosCounts += i -> zerosCount.getOrElse(i, 0)\n            }\n        }\n        for (i <- 1 to n) {\n            if (onesCount.getOrElse(i, 0) == 1) {\n                onesCountZeros += i -> onesCount.getOrElse(i, 0)\n            }\n            if (zerosCount.getOrElse(i, 0) == 1) {\n                zerosCountZeros += i -> zerosCount.getOrElse(i, 0)\n            }\n        }\n        val onesCountZeros = onesCountZeros.toSeq\n        val zerosCountZeros = zerosCountZeros.toSeq\n        val onesCounts = onesCounts.toSeq\n        val zerosCounts = zerosCounts.toSeq\n        val onesCountZeros = onesCountZeros.toSeq\n        val zerosCountZeros = zerosCountZeros.toSeq\n        val onesCountZeros = onesCountZeros.toSeq\n        val zerosCountZeros = zerosCountZeros.toSeq\n        val onesCounts = onesCounts.toSeq\n        val zerosCounts = zerosCounts.toSeq\n        val onesCountZeros = onesCountZeros.toSeq\n        val zerosCountZeros = zerosCountZeros.toSeq\n        val onesCounts = onesCounts.toSeq\n        val zerosCounts = zerosCounts.toSeq\n        val onesCountZeros = onesCountZeros.toSeq\n        val zerosCountZeros = zerosCountZeros.toSeq\n        val onesCounts = onesCounts.toSeq\n        val zerosCounts = zerosCounts.toSeq\n        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpoiejiii1.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeros\u001b[0m = onesCountZeros.toSeq\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpoiejiii1.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountZeros\u001b[0m = zerosCountZeros.toSeq\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpoiejiii1.scala:38:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = onesCounts.toSeq\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpoiejiii1.scala:39:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = zerosCounts.toSeq\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpoiejiii1.scala:40:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeros\u001b[0m = onesCountZeros.toSeq\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = scala.collection.mutable.ArrayBuffer(1)\n        val zeros = scala.collection.mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x <= n).length\n        val zerosCount = zeros.takeWhile(x => x <= n).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val zerosOnes = zeros.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosZeros = zeros.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosOnes = zeros.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosZeros = zeros.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosOnes = zeros.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosZeros = zeros.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesZeros = ones.takeWhile(x => x <= n).takeWhile(x => x == 0).length\n        val onesOnes = ones.takeWhile(x => x <= n).takeWhile(x => x == 1).length\n        val zerosOnes = zeros.takeWhile(x => x <= n).takeWhile(x \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_shdy43u.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_shdy43u.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x <= n).takeWhile(\u001b[36mx\u001b[0m => x == \u001b[31m0\u001b[0m).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_shdy43u.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnes\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x <= n).takeWhile(\u001b[36mx\u001b[0m => x == \u001b[31m1\u001b[0m).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_shdy43u.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x <= n).takeWhile(\u001b[36mx\u001b[0m => x == \u001b[31m1\u001b[0m).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_shdy43u.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x <= n).takeWhile(\u001b[36mx\u001b[0m => x == \u001b[31m0\u001b[0m).length\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCountss = mutable.ListBuffer[Long]()\n        val zerosCountss = mutable.ListBuffer[Long]()\n        val onesCountsss = mutable.ListBuffer[Long]()\n        val zerosCountsss = mutable.ListBuffer[Long]()\n        val onesCountssss = mutable.ListBuffer[Long]()\n        val zerosCountssss = mutable.ListBuffer[Long]()\n        val onesCountsssss = mutable.ListBuffer[Long]()\n        val zerosCountsssss = mutable.ListBuffer[Long]()\n        val onesCountssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long]()\n        val zerosCountssssss = mutable.ListBuffer[Long]()\n        val onesCountsssssss = mutable.ListBuffer[Long\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpusrpq64p.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpusrpq64p.scala:25:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountssssss\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountssssss is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountssssss\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpusrpq64p.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountsssssss\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountsssssss is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountsssssss\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpusrpq64p.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountssssss\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountssssss is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountssssss\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpusrpq64p.scala:28:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountsssssss\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountsssssss is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountsssssss\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        for(i <- 1 to n){\n            val digit = i / 10\n            val remainder = i % 10\n            if(remainder == 1){\n                ones += digit\n            }\n            else if(remainder == 0){\n                zeros += digit\n            }\n            else{\n                counts += digit -> (counts(digit) + 1)\n            }\n        }\n        ones.size + zeros.size + counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk1xbbosn.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk1xbbosn.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk1xbbosn.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1xbbosn.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val countsCount = counts.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x == 0).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x == 1).length\n        val countsOnes = counts.takeWhile(x => x < n).takeWhile(x => x == 1).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x == 1).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x == 0).length\n        val countsZeros = counts.takeWhile(x => x < n).takeWhile(x => x == 0).length\n        val onesZeroZeros = ones.takeWhile(x => x < n).takeWhile(x => x == 0).takeWhile(x => x == 0).length\n        val zerosOneZeros = zeros.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 0).length\n        val countsOneZeros = counts.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 0).length\n        val onesOneZeros = ones.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 0).length\n        val zerosOneOnes = zeros.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 1).length\n        val countsOneOnes = counts.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 1).length\n        val onesOneOnes = ones.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 1).length\n        val zerosOneZeroZeros = zeros.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile(x => x == 0).takeWhile(x => x == 0).length\n        val countsOneZeroZeros = counts.takeWhile(x => x < n).takeWhile(x => x == 1).takeWhile\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lw_4ls2.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lw_4ls2.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lw_4ls2.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lw_4ls2.scala:28:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659798795
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdo53j0jg.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnes\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).le",
      "stdout": "",
      "timestamp": 1659798795
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        var i = 0\n        while (i < n) {\n            if (ones.contains(i)) {\n                counts += i\n            }\n            i += 1\n        }\n        while (i < n) {\n            if (zeros.contains(i)) {\n                counts += i\n            }\n            i += 1\n        }\n        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y126s_o.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y126s_o.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y126s_o.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659798793
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n > 1) {\n            val temp = n % 10\n            if(temp == 1) {\n                count += 1\n            }\n            n /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9prqgfrx.scala:14:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798796
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        var count = 0\n        for(i <- 1 to n) {\n            val temp = i\n            while(temp > 0) {\n                if(temp % 10 == 1) {\n                    ones += i\n                    onesCount += i\n                    count += 1\n                }\n                temp /= 10\n            }\n        }\n        onesCount.toList.sortBy(_ * -1).toList.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8puim8ks.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8puim8ks.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8puim8ks.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8puim8ks.scala:18:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                temp /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean temp.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n        val zerosZeros = mutable.ListBuffer[Long]()\n        val onesZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOnes = mutable.ListBuffer[Long]()\n        val onesOneOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOnes = mutable.ListBuffer[Long]()\n        val onesZeroZeros = mutable.ListBuffer[Long]()\n        val zerosOneZeros = mutable.ListBuffer[Long]()\n        val onesOneZeros = mutable.ListBuffer[Long]()\n        val zerosOneOneZeros = mutable.ListBuffer[Long]()\n        val onesOneOneZeros = mutable.ListBuffer[Long]()\n        val zerosZeroOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOnes = mutable.ListBuffer[Long]()\n        val onesOneZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOnes = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOneOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val onesOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOneOneOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOneOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5chzlleb.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val zeros = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.Array\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6mux085c.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6mux085c.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6mux085c.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6mux085c.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6mux085c.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCo",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesZeros = mutable.ListBuffer[Long]()\n        val zerosOnes = mutable.ListBuffer[Long]()\n        val onesOnes = mutable.ListBuffer[Long]()\n        val zerosZeros = mutable.ListBuffer[Long]()\n        val onesZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOnes = mutable.ListBuffer[Long]()\n        val onesOneOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOnes = mutable.ListBuffer[Long]()\n        val onesZeroZeros = mutable.ListBuffer[Long]()\n        val zerosOneZeros = mutable.ListBuffer[Long]()\n        val onesOneZeros = mutable.ListBuffer[Long]()\n        val zerosOneOneZeros = mutable.ListBuffer[Long]()\n        val onesOneOneZeros = mutable.ListBuffer[Long]()\n        val zerosZeroOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOnes = mutable.ListBuffer[Long]()\n        val onesOneZeroOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOnes = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOneOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val onesOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val onesOneOneZeroOneOnes = mutable.ListBuffer[Long]()\n        val zerosZeroOneOneOneZeros = mutable.ListBuffer[Long]()\n        val onesZeroZeroOneOneOnes = mutable.ListBuffer[Long]()\n        val zerosOneZeroOneOneOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5chzlleb.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5chzlleb.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val zerosCounts_ = mutable.Set[Long]()\n        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpbyf4mjxl.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpbyf4mjxl.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpbyf4mjxl.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpbyf4mjxl.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpbyf4mjxl.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n        val maxDigit = math.pow(10, math.ceil(math.log10(n)))\n        val digits = math.ceil(n/maxDigit).toInt\n        val starts = mutable.ListBuffer[Long]()\n        val ends = mutable.ListBuffer[Long]()\n        val digit = math.pow(10, math.floor(math.log10(n)))\n        val digits = math.ceil(n/digit).toInt\n        val startOnes = mutable.ListBuffer[Long]()\n        val endOnes = mutable.ListBuffer[Long]()\n        val startZeros = mutable.ListBuffer[Long]()\n        val endZeros = mutable.ListBuffer[Long]()\n        val startCount = mutable.ListBuffer[Long]()\n        val endCount = mutable.ListBuffer[Long]()\n        val startOneCount = mutable.ListBuffer[Long]()\n        val endOneCount = mutable.ListBuffer[Long]()\n        val startZeroCount = mutable.ListBuffer[Long]()\n        val endZeroCount = mutable.ListBuffer[Long]()\n        val startOneCounts = mutable.ListBuffer[Long]()\n        val endOneCounts = mutable.ListBuffer[Long]()\n        val startZeroCounts = mutable.ListBuffer[Long]()\n        val endZeroCounts = mutable.ListBuffer[Long]()\n        val startOneCountOnes = mutable.ListBuffer[Long]()\n        val endOneCountOnes = mutable.ListBuffer[Long]()\n        val startZeroCountOnes = mutable.ListBuffer[Long]()\n        val endZeroCountOnes = mutable.ListBuffer[Long]()\n        val startOneCountZeros = mutable.ListBuffer[Long]()\n        val endOneCountZeros = mutable.ListBuffer[Long]()\n        val startZeroCountZeros = mutable.ListBuffer[Long]()\n        val endZeroCountZeros = mutable.ListBuffer[Long]()\n        val startOneCountOnesZeros = mutable.ListBuffer[Long]()\n        val endOneCountOnesZeros = mutable.ListBuffer[Long]()\n        val startZeroCountOnesZeros = mutable.ListBuffer[Long]()\n        val endZeroCountOnesZeros = mutable.ListBuffer\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpio6vnv7u.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigits\u001b[0m = math.ceil(n/digit).toInt\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigits is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigits\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpio6vnv7u.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpio6vnv7u.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpio6vnv7u.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpio6vnv7u.scala:12:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mstarts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpio6vnv7u.scala:13:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val countsZero = mutable.Map[Long, Long]()\n        val countsOne = mutable.Map[Long, Long]()\n        val countsZeroOne = mutable.Map[Long, Long]()\n        val countsOneOne = mutable.Map[Long, Long]()\n        val countsZeroZero = mutable.Map[Long, Long]()\n        val countsOneZero = mutable.Map[Long, Long]()\n        val countsZeroOneZero = mutable.Map[Long, Long]()\n        val countsOneOneZero = mutable.Map[Long, Long]()\n        val countsZeroZeroOne = mutable.Map[Long, Long]()\n        val countsOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsOneOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroZeroOneZero = mutable.Map[Long, Long]()\n        val countsOneZeroOneZero = mutable.Map[Long, Long]()\n        val countsZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsOneOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsOneZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroOneZeroOneZero = mutable.Map[Long, Long]()\n        val countsOneOneZeroOneZero = mutable.Map[Long, Long]()\n        val countsZeroZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsOneZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroOneZeroOneZero = mutable.Map[Long, Long]()\n        val countsOneOneZeroOneZero = mutable.Map[Long, Long]()\n        val countsZeroZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsOneZeroOneZeroOne = mutable.Map[Long, Long]()\n        val countsZeroOneZeroOneZero = mutable.Map[Long, \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ihtr408.scala:37:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_ihtr408.scala:24:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcountsZeroOneZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mcountsZeroOneZeroOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35mcountsZeroOneZeroOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_ihtr408.scala:25:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcountsOneOneZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mcountsOneOneZeroOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35mcountsOneOneZeroOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_ihtr408.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcountsZeroZeroOneZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mcountsZeroZeroOneZeroOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35mcountsZeroZeroOneZeroOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_ihtr408.scala:31:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcountsOneZeroOneZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp0_5heod1.scala:44:26 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount18\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        while(n > 0){\n            val next = (n % 10).toInt\n            if(next == 1){\n                count += 1\n            }\n            n /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpirbehbez.scala:14:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976173
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        val n = n.toInt\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val count = (onesCount + zerosCount).toLong\n        val newCount = count + onesCount + zerosCount\n        val newZeros = zeros.takeWhile(x => x < n).length\n        val newOnes = ones.takeWhile(x => x < n).length\n        val newCounts = mutable.ArrayBuffer.empty[Long]\n        newCounts += newCount\n        newCounts += newCount + onesCount\n        newCounts += newCount + zerosCount\n        newCounts += newCount + onesCount + zerosCount\n        newCounts += newCount + onesCount + zerosCount + onesCount + zerosCount\n        newCounts += newCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount\n        newCounts += newCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCount + zerosCount + onesCoun\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdlya1ru.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdlya1ru.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdlya1ru.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmphdlya1ru.scala:10:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = n.toInt\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdlya1ru.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnewCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976169
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        var count = 0\n        while(n > 0){\n            val nextDigit = n % 10\n            ones += nextDigit\n            n /= 10\n            zeros += nextDigit * 10\n            count += 1\n        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo1wny_at.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo1wny_at.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo1wny_at.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        val digit = digits.head\n        val digitCount = digits.tail.count(_ == digit)\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digitCount = digitCount.toLong\n        val digit\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprdh2egr9.scala:58:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmprdh2egr9.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitCount\u001b[0m = digitCount.toLong\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmprdh2egr9.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitCount\u001b[0m = digitCount.toLong\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmprdh2egr9.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitCount\u001b[0m = digitCount.toLong\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmprdh2egr9.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitCount\u001b[0m = digitCount.toLong\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmprdh2egr9.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b",
      "stdout": "",
      "timestamp": 1659976175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOneOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpff1jz55o.scala:34:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpff1jz55o.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroZeroZeroZeroZeroZeroZeroZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroZeroZeroZeroZeroZeroZeroZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroZeroZeroZeroZeroZeroZeroZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpff1jz55o.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpff1jz55o.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpff1jz55o.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpff1jz55o.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val n = n.toInt\n        val onesCount = ones.size\n        val zerosCount = zeros.size\n        val countsCount = counts.size\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(zeros.toSet)\n        val onesCount = ones.toSet.size + (ones.toSet.size - onesZeros)\n        val zerosCount = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n        val countsCount = counts.size + (counts.size - onesZeros)\n        val onesZeros = ones.toSet.intersect(\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpwmz03kt9.scala:38:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.toSet.intersect(\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwmz03kt9.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = ones.toSet.size + (ones.toSet.size - onesZeros)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwmz03kt9.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = zeros.toSet.size + (zeros.toSet.size - onesZeros)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwmz03kt9.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcountsCount\u001b[0m = counts.size + (counts.size - onesZeros)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mcountsCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mcountsCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwmz03kt9.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mone",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n        val onesZeros = mutable.ArrayBuffer(0)\n        val zerosOnes = mutable.ArrayBuffer(0)\n        val onesOnes = mutable.ArrayBuffer(0)\n        val zerosZeros = mutable.ArrayBuffer(0)\n        val onesZeroOnes = mutable.ArrayBuffer(0)\n        val zerosOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOnes = mutable.ArrayBuffer(0)\n        val onesZeroOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosOneOneZeroOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val zerosZeroOneOneOneOneOneZeros = mutable.ArrayBuffer(0)\n        val onesOneZeroOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5j7x__2k.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp5j7x__2k.scala:35:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneOneZeroOneOneOneZeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOneOneZeroOneOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOneOneZeroOneOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp5j7x__2k.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneOneOneOneOneOneZeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOneOneOneOneOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOneOneOneOneOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp5j7x__2k.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeroOneOneOneOneOneZeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeroOneOneOneOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeroOneOneOneOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp5j7x__2k.scala:38:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneZeroOneOneOneOneZeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976173
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n                ones += i\n                count += 1\n            }\n        }\n        ones.size\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgnd30743.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgnd30743.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        while(digits.hasNext) {\n            val digit = digits.next()\n            val digitCount = digits.count(_ == digit)\n            val digitZeroCount = digits.count(_ == 0)\n            val digitOneCount = digits.count(_ == 1)\n            val digitZeroZeroCount = digits.count(_ == 0)\n            val digitOneOneCount = digits.count(_ == 1)\n            val digitZeroOneCount = digits.count(_ == 0)\n            val digitOneZeroCount = digits.count(_ == 1)\n            val digitZeroZeroZeroCount = digits.count(_ == 0)\n            val digitOneOneOneCount = digits.count(_ == 1)\n            val digitZeroOneOneCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneZeroCount = digits.count(_ == 1)\n            val digitZeroOneZeroCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneOneCount = digits.count(_ == 1)\n            val digitZeroOneOneCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneZeroCount = digits.count(_ == 1)\n            val digitZeroOneZeroCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneOneCount = digits.count(_ == 1)\n            val digitZeroOneOneCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneZeroCount = digits.count(_ == 1)\n            val digitZeroOneZeroCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0)\n            val digitOneOneOneCount = digits.count(_ == 1)\n            val digitZeroOneOneCount = digits.count(_ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1)\n            val digitZeroZero\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkecw39r4.scala:49:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkecw39r4.scala:59:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkecw39r4.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkecw39r4.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkecw39r4.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpkecw39r4.scala:27:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mdigitOneZeroOneCount\u001b[0m = digits.count(_ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitOneZeroOneCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitOneZeroOneCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpkecw39r4.scala:28:16 ------------------",
      "stdout": "",
      "timestamp": 1659976175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        var i = n\n        while(i > 0) {\n            ones += i\n            i /= 10\n        }\n        i = n\n        while(i > 0) {\n            zeros += i\n            i /= 10\n        }\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += i)\n        zeros.foreach(i => zerosCount += i)\n        ones.foreach(i => onesCount += \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpjqg7ia80.scala:55:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m        ones.foreach(\u001b[36mi\u001b[0m => onesCount += \n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjqg7ia80.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjqg7ia80.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjqg7ia80.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjqg7ia80.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976169
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val maxDigit = math.pow(10, math.ceil(math.log10(n)))\n        for(i <- 0 until n) {\n            val digit = math.floor(i / maxDigit)\n            val remainder = i % maxDigit\n            val digitCount = if (remainder == 0) 1 else 0\n            val digitZeroCount = if (digit == 0) 1 else 0\n            val digitOneCount = if (digit == 1) 1 else 0\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCount == 0)\n            val digitOneCount = digitOneCount + (digitZeroCount == 0)\n            val digitCount = digitCount + (digitZeroCount + digitOneCount)\n            val digitZeroCount = digitZeroCount + (digitOneCoun\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn1niulip.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn1niulip.scala:53:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn1niulip.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn1niulip.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn1niulip.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1niulip.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         Found:    (n : Long)\n\u001b[31m   |\u001b[0m                         Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpn1niulip.scala:17:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mdigitCount\u001b[0m = digit",
      "stdout": "",
      "timestamp": 1659976175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var current = 0\n        var next = 1\n        var remainder = n\n        while (next <= n) {\n            current = next\n            next = current * 10 + remainder\n            if (next > n) {\n                remainder = next - n\n                last = 1\n            } else {\n                last = 0\n            }\n            if (last == 1) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpshca2a_s.scala:14:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            next = current * \u001b[31m10\u001b[0m + remainder\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    Long\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n > 0){\n            val next = (last * 10 + n) % 100\n            count += next == 1\n            last = next\n            n -= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsz5aoe6p.scala:11:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            count += next == \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsz5aoe6p.scala:12:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            last = next\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (next : Long)\n\u001b[31m   |\u001b[0m                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsz5aoe6p.scala:13:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            n -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976175
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        while(n > 1) {\n            val lastDigit = n % 10\n            val lastDigitCount = if (lastDigit == 1) ones.size else zeros.size\n            val newCount = lastDigitCount + 1\n            counts += newCount\n            n /= 10\n        }\n        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1gkyjpqn.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1gkyjpqn.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1gkyjpqn.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1gkyjpqn.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybcks5yp.scala:8:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val twos = mutable.ListBuffer[Long]()\n        val threes = mutable.ListBuffer[Long]()\n        val fours = mutable.ListBuffer[Long]()\n        val fives = mutable.ListBuffer[Long]()\n        val sixes = mutable.ListBuffer[Long]()\n        val sevens = mutable.ListBuffer[Long]()\n        val eights = mutable.ListBuffer[Long]()\n        val nines = mutable.ListBuffer[Long]()\n        val tens = mutable.ListBuffer[Long]()\n        val hundreds = mutable.ListBuffer[Long]()\n        val thousands = mutable.ListBuffer[Long]()\n        val millions = mutable.ListBuffer[Long]()\n        val billions = mutable.ListBuffer[Long]()\n        val trillions = mutable.ListBuffer[Long]()\n        val quadrillions = mutable.ListBuffer[Long]()\n        val quintillions = mutable.ListBuffer[Long]()\n        val sextillions = mutable.ListBuffer[Long]()\n        val septillions = mutable.ListBuffer[Long]()\n        val octillions = mutable.ListBuffer[Long]()\n        val nonillions = mutable.ListBuffer[Long]()\n        val decillions = mutable.ListBuffer[Long]()\n        val undecillions = mutable.ListBuffer[Long]()\n        val duodecillions = mutable.ListBuffer[Long]()\n        val tredecillions = mutable.ListBuffer[Long]()\n        val quattuordecillions = mutable.ListBuffer[Long]()\n        val quindecillions = mutable.ListBuffer[Long]()\n        val sexdecillions = mutable.ListBuffer[Long]()\n        val septendecillions = mutable.ListBuffer[Long]()\n        val octodecillions = mutable.ListBuffer[Long]()\n        val novemdecillions = mutable.ListBuffer[Long]()\n        val vigintillions = mutable.ListBuffer[Long]()\n        val unvigintillions = mutable.ListBuffer[Long]()\n        val duovigintilli\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprriq6_vg.scala:41:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprriq6_vg.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprriq6_vg.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtwos\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprriq6_vg.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mthrees\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprriq6_vg.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfours\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprriq6_vg.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfives\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-expl",
      "stdout": "",
      "timestamp": 1659976182
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        while(n > 0){\n            ones += n\n            n -= 1\n        }\n        ones.foreach(n => {\n            if(n % 10 == 1){\n                count += 1\n            }\n        })\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kt89z2_.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5kt89z2_.scala:11:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            n -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean n.!=?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976181
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val count = mutable.ListBuffer[Long]()\n        while(n > 0){\n            val tmp = n % 10\n            if(tmp == 1){\n                ones += tmp\n                count += ones.length\n            }else{\n                zeros += tmp\n            }\n            n /= 10\n        }\n        ones.length + zeros.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpavs8ft2b.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpavs8ft2b.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpavs8ft2b.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpavs8ft2b.scala:18:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976184
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var start = 0\n        var end = n\n        while (start < end) {\n            if (start % 10 == 1 && end % 10 != 1) {\n                count += 1\n            }\n            start += 1\n            end -= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpybwxq_72.scala:20)\n\tat Problem.main(tmpybwxq_72.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659976185
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastStart = 0\n        var lastEnd = 0\n        for(i <- 1 to n){\n            val current = i\n            val start = current - 1\n            val end = current + 1\n            if(start == lastStart && end == lastEnd){\n                count += 1\n            }\n            lastStart = start\n            lastEnd = end\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmtwdyjha.scala:11:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976185
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountZeros = mutable.Map[Long, Long]()\n        val onesCountOnes = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountZeroZeros = mutable.Map[Long, Long]()\n        val onesCountOneZeros = mutable.Map[Long, Long]()\n        val zerosCountOneZeros = mutable.Map[Long, Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountOneZeroOnes = mutable.Map[Long, Long]()\n        val onesCountZeroOneOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOneOnes = mutable.Map[Long, Long]()\n        val onesCountOneOneZeros = mutable.Map[Long, Long]()\n        val zerosCountOneOneZeros = mutable.Map[Long, Long]()\n        val onesCountZeroZeroOnes = mutable.Map[Long, Long]()\n        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp25_lauzs.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp25_lauzs.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountZeroOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp25_lauzs.scala:38:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroZeroOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp25_lauzs.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp25_lauzs.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong",
      "stdout": "",
      "timestamp": 1659976185
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n        val zeroOnes = mutable.Set[Long]()\n        val onesZeroOnes = mutable.Set[Long]()\n        val zerosZeroOnes = mutable.Set[Long]()\n        val onesOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnes = mutable.Set[Long]()\n        val onesZeroOnesOnes = mutable.Set[Long]()\n        val zerosZeroOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesOnes = mutable.Set[Long]()\n        val onesZeroOnesOnesOnes = mutable.Set[Long]()\n        val zerosZeroOnesOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesZeroOnesOnesOnesOnes = mutable.Set[Long]()\n        val zerosZeroOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesZeroOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val zerosZeroOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesOnesOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val zerosOnesOnesOnesOnesOnesOnes = mutable.Set[Long]()\n        val onesZeroOnesOnesOnesOnesOnesOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpajylha8w.scala:37:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpajylha8w.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpajylha8w.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpajylha8w.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpajylha8w.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpajylha8w.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "stdout": "",
      "timestamp": 1659976184
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n by 10) {\n            if (i.toString.toLong == 1) {\n                ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2p7qtv1.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn2p7qtv1.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n by \u001b[31m10\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        while(n > 0) {\n            val digit = n % 10\n            n /= 10\n            val newCount = if (digit == 1) ones.size + zeros.size else zeros.size + ones.size\n            counts += newCount\n        }\n        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmero9_4e.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmero9_4e.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmero9_4e.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmero9_4e.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976184
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n        val onesCount = mutable.HashSet.empty[Long]\n        val zerosCount = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val zerosCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.Hash\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v33z1hr.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v33z1hr.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v33z1hr.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v33z1hr.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v33z1hr.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.HashSet.empty",
      "stdout": "",
      "timestamp": 1659976185
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n > 0) {\n            val next = (n % 10) + 1\n            n /= 10\n            if(next == 1) {\n                count += 1\n                last = next\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp63we7k0x.scala:11:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63we7k0x.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                last = next\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (next : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val iter = Iterator.from(1).takeWhile(_ < n).iterator\n        while (iter.hasNext) {\n            val next = iter.next\n            if (next == 1)\n                ones += next\n            else\n                zeros += next\n        }\n        val oneCount = ones.toSet.size + 1\n        val zeroCount = zeros.toSet.size + 1\n        val count = oneCount + zeroCount\n        counts += n -> count\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q_xwe6k.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q_xwe6k.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q_xwe6k.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976181
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3t8bbqqu.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3t8bbqqu.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3t8bbqqu.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3t8bbqqu.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3t8bbqqu.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = m",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        var next = 1\n        while(n > 1) {\n            count += 1\n            next *= 10\n            next += last\n            last = next\n            n -= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyw_w0z0d.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        val remainder = n\n        val remainders = mutable.ArrayBuffer.empty[Long]\n        val zeroCount = 0\n        val oneCount = 0\n        while(zeroCount < n && oneCount < n) {\n            val remainders = remainder / 10\n            val remaindersRemainder = remainders % 10\n            val remaindersRemainders = remaindersRemainder / 10\n            val remaindersRemaindersRemainder = remaindersRemainders % 10\n            val remaindersRemaindersRemainders = remaindersRemaindersRemainder / 10\n            val remaindersRemaindersRemaindersRemainder = remaindersRemaindersRemainders % 10\n            val remaindersRemaindersRemaindersRemainders = remaindersRemaindersRemaindersRemainder / 10\n            val remaindersRemaindersRemaindersRemaindersRemainder = remaindersRemaindersRemaindersRemainders % 10\n            val remaindersRemaindersRemaindersRemaindersRemainders = remaindersRemaindersRemaindersRemaindersRemainder / 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemainder = remaindersRemaindersRemaindersRemaindersRemainders % 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemainders = remaindersRemaindersRemaindersRemaindersRemaindersRemainder / 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemainder = remaindersRemaindersRemaindersRemaindersRemaindersRemainders % 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemainders = remaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemainders % 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemainder = remaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemaindersRemainder / 10\n            val remaindersRemaindersRemaindersRemaindersRemaindersRemainder\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ko0gytn.scala:30:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ko0gytn.scala:40:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ko0gytn.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ko0gytn.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ko0gytn.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ko0gytn.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mremainders\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_ko0gytn.scala:27:89 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mremaindersRemaindersRemaindersR",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdo53j0jg.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpdo53j0jg.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnes\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).le",
      "stdout": "",
      "timestamp": 1659798795
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        for(i <- 1 to n){\n            if(last == 1){\n                count += 1\n            }\n            last -= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp806jgg3j.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976185
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastStart = 0\n        var lastEnd = 0\n        var lastStartOne = 0\n        var lastEndOne = 0\n        var lastStartOneEnd = 0\n        var lastEndOneEnd = 0\n        var lastStartOneEndOne = 0\n        var lastEndOneEndOne = 0\n        var lastStartOneEndOneOne = 0\n        var lastEndOneEndOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEndOneOneOne = 0\n        var lastStartOneEndOneOneOne = 0\n        var lastEndOneEnd\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4y8f1ig_.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp4y8f1ig_.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlastStartOneEndOneOneOne\u001b[0m = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastStartOneEndOneOneOne is already defined as \u001b[33mvariable\u001b[0m \u001b[35mlastStartOneEndOneOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp4y8f1ig_.scala:22:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlastEndOneEndOneOneOne\u001b[0m = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastEndOneEndOneOneOne is already defined as \u001b[33mvariable\u001b[0m \u001b[35mlastEndOneEndOneOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp4y8f1ig_.scala:23:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlastStartOneEndOneOneOne\u001b[0m = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastStartOneEndOneOneOne is already defined as \u001b[33mvariable\u001b[0m \u001b[35mlastStartOneEndOneOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp4y8f1ig_.scala:24:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlastEndOneEndOneOneOne\u001b[0m = \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastEndOneEndOneOneOne is already defined as \u001b[33mvariable\u001b[0m \u001b[35mlastEndOneEndOneOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of to",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer.empty[Long]\n        for (i <- 1 to n) {\n            if (i % 10 == 1) ones += i\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx09h99k5.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx09h99k5.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var start = 1\n        var end = 1\n        while (start <= n) {\n            while (start <= n && n % start == 0) {\n                count += 1\n                start += 1\n            }\n            while (end <= n && n % end == 0) {\n                count += 1\n                end += 1\n            }\n            start += 1\n            end += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpmt18d1ul.scala:25)\n\tat Problem.main(tmpmt18d1ul.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(Long.MaxValue)\n        val zeros = mutable.ArrayBuffer(Long.MinValue)\n        val onesCount = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCount = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(Long.MaxValue)\n        val zerosCounts = mutable.ArrayBuffer(Long.MinValue)\n        val onesCounts = mutable.ArrayBuffer(\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpla70fgdo.scala:42:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer(\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpla70fgdo.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer(Long.MaxValue)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpla70fgdo.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer(Long.MinValue)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpla70fgdo.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer(Long.MaxValue)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpla70fgdo.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer(Long.MinValue)\n\u001b[31m\u001b[31m  ",
      "stdout": "",
      "timestamp": 1659976187
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        var count = 0\n        while(n > 0){\n            val x = n % 10\n            if(x == 1){\n                ones += x\n                count += ones.length\n            }\n            if(x == 0){\n                zeros += x\n                count += zeros.length\n            }\n            n /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80gyi6d7.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80gyi6d7.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp80gyi6d7.scala:20:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgg03ixch.scala:44:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpgg03ixch.scala:9:12 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpgg03ixch.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpgg03ixch.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpgg03ixch.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same gr",
      "stdout": "",
      "timestamp": 1659976186
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        val digitCount = digits.count(_ > 0)\n        val oneCount = digits.count(_ == 1)\n        val zeroCount = digits.count(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.find(_ == 1)\n        val zeroDigit = digits.find(_ == 0)\n        val oneDigitCount = digits.count(_ == 1)\n        val zeroDigitCount = digits.count(_ == 0)\n        val oneDigit = digits.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwq07vjwg.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwq07vjwg.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneDigitCount\u001b[0m = digits.count(_ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwq07vjwg.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroDigitCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroDigitCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroDigitCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwq07vjwg.scala:20:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneDigit\u001b[0m = digits.find(_ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneDigit is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneDigit\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpwq07vjwg.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroDigit\u001b[0m = digits.find(_ == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroDigit is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroDigit\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming ",
      "stdout": "",
      "timestamp": 1659976187
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCounts = mutable.ListBuffer[Long]()\n        val zerosCounts = mutable.ListBuffer[Long]()\n        val onesCountZeros = mutable.ListBuffer[Long]()\n        val zerosCountZeros = mutable.ListBuffer[Long]()\n        val onesCountOnes = mutable.ListBuffer[Long]()\n        val zerosCountOnes = mutable.ListBuffer[Long]()\n        val onesCountZeroOnes = mutable.ListBuffer[Long]()\n        val zerosCountZeroOnes = mutable.ListBuffer[Long]()\n        val onesCountOneOnes = mutable.ListBuffer[Long]()\n        val zerosCountOneOnes = mutable.ListBuffer[Long]()\n        val onesCountZeroZeros = mutable.ListBuffer[Long]()\n        val zerosCountZeroZeros = mutable.ListBuffer[Long]()\n        val onesCountOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneZeros = mutable.ListBuffer[Long]()\n        val onesCountOneOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneOneZeros = mutable.ListBuffer[Long]()\n        val onesCountZeroOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountZeroOneZeros = mutable.ListBuffer[Long]()\n        val onesCountOneZeroZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneZeroZeros = mutable.ListBuffer[Long]()\n        val onesCountOneOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneOneZeros = mutable.ListBuffer[Long]()\n        val onesCountZeroZeroOneZeros = mutable.ListBuffer[Long]()\n        val zerosCountZeroZeroOneZeros = mutable.ListBuffer[Long]()\n        val onesCountOneZeroZeros = mutable.ListBuffer[Long]()\n        val zerosCountOneZeroZeros = mutable.ListBuffer[Long]()\n        val onesCountOneOneZeroZeros = mutable.ListBuffer[Long]\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpv5ukj5w9.scala:32:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountOneOneZeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpv5ukj5w9.scala:33:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountOneOneZeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpv5ukj5w9.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountOneZeroZeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountOneZeroZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountOneZeroZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpv5ukj5w9.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountOneZeroZeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountOneZeroZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountOneZeroZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E0",
      "stdout": "",
      "timestamp": 1659976192
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastDigit = 0\n        while(n > 0){\n            val digit = n % 10\n            if(digit == 1){\n                count += 1\n            }\n            n /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmbjmilhx.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976193
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountZeros = mutable.Map[Long, Long]()\n        val onesCountOnes = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountZeroZeros = mutable.Map[Long, Long]()\n        val onesCountOneZeros = mutable.Map[Long, Long]()\n        val zerosCountOneZeros = mutable.Map[Long, Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountZeroZeroZeros = mutable.Map[Long, Long]()\n        val onesCountOneZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountOneZeroZeros = mutable.Map[Long, Long]()\n        val onesCountZeroOneZeros = mutable.Map[Long, Long]()\n        val zerosCountZeroOneZeros = mutable.Map[Long, Long]()\n        val onesCountOneOneOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeros = mutable.Map[Long, Long]\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9d7q8y4z.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9d7q8y4z.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountZeroOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d7q8y4z.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d7q8y4z.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d7q8y4z.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m",
      "stdout": "",
      "timestamp": 1659976193
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        while(n > 0) {\n            val next = (n % 10).toInt\n            val last = (last % 10).toInt\n            if((next == 1) || (last == 1)) {\n                count += 1\n            }\n            n /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmps7_pqhdd.scala:11:24 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mlast\u001b[0m = (last % \u001b[31m10\u001b[0m).toInt\n\u001b[31m\u001b[31m   |\u001b[0m                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                        Recursive \u001b[33mvalue\u001b[0m \u001b[35mlast\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps7_pqhdd.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976195
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val start = n\n        val end = n\n        while (start > 0) {\n            val digit = start % 10\n            if (digit == 1) {\n                ones += digit\n            } else {\n                zeros += digit\n            }\n            start /= 10\n        }\n        while (end > 0) {\n            val digit = end % 10\n            if (digit == 1) {\n                ones += digit\n            } else {\n                zeros += digit\n            }\n            end /= 10\n        }\n        val onesCount = ones.size\n        val zerosCount = zeros.size\n        val onesZeroCount = ones.size + zeros.size\n        val onesZeroZeroCount = ones.size + zeros.size + ones.size\n        val onesZeroOnesCount = ones.size + zeros.size + ones.size + ones.size\n        val onesOnesCount = ones.size + ones.size + ones.size\n        val onesOnesZeroCount = ones.size + ones.size + ones.size + zeros.size\n        val onesOnesOnesCount = ones.size + ones.size + ones.size + ones.size + ones.size\n        val onesOnesOnesZeroCount = ones.size + ones.size + ones.size + ones.size + ones.size + zeros.size\n        val onesOnesOnesOnesCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size\n        val onesOnesOnesOnesZeroCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + zeros.size\n        val onesOnesOnesOnesOnesCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size\n        val onesOnesOnesOnesOnesZeroCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + zeros.size\n        val onesOnesOnesOnesOnesCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size\n        val onesOnesOnesOnesOnesZeroCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + zeros.size\n        val onesOnesOnesOnesOnesOnesCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size\n        val onesOnesOnesOnesOnesOnesZeroCount = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpcw87ezbk.scala:46:119 --------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnesOnesOnesOnesOnesZeroCount\u001b[0m = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + \n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpcw87ezbk.scala:43:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnesOnesOnesOnesCount\u001b[0m = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOnesOnesOnesOnesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOnesOnesOnesOnesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpcw87ezbk.scala:44:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnesOnesOnesOnesZeroCount\u001b[0m = ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + ones.size + zeros.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOnesOnesOnesOnesZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOnesOnesOnesOnesZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcw87ezbk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneOneOneOneOneOneOneOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroZeroZeroZeroZeroZeroZeroZeroZero = mutable.Map[Long, \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzy4gzd2o.scala:35:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpzy4gzd2o.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroZeroZeroZeroZeroZeroZeroZero\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroZeroZeroZeroZeroZeroZeroZero is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroZeroZeroZeroZeroZeroZeroZero\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy4gzd2o.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy4gzd2o.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy4gzd2o.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy4gzd2o.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCou",
      "stdout": "",
      "timestamp": 1659976195
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i.toString.toLong == 1) {\n                ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc74jp6xn.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc74jp6xn.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976196
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 0 until n){\n            if (i.toString.toLong == 1){\n                ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vvu34fg.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vvu34fg.scala:8:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until n){\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (n : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976196
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                count += 1\n                ones += i\n            }\n        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fg4tx5o.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2fg4tx5o.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976196
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val zerosCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val zerosCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val zerosCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val zerosCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val zerosCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val zerosCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val zerosCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val zerosCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val zerosCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val zerosCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val zerosCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val zerosCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val zerosCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val zerosCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val zerosCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosC",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var next = 1\n        while(next <= n) {\n            val nextDigit = next\n            val lastDigit = last\n            val lastDigitNext = lastDigit + next\n            val lastDigitNextNext = lastDigitNext + next\n            val lastDigitNextNextNext = lastDigitNextNext + next\n            val lastDigitNextNextNextNext = lastDigitNextNextNext + next\n            val lastDigitNextNextNextNextNext = lastDigitNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNext = lastDigitNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNextNextNext = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n            val lastDigitNextNextNextNextNextNextNextNext\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpemkyqvzp.scala:33:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpemkyqvzp.scala:43:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpemkyqvzp.scala:21:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mlastDigitNextNextNextNextNextNextNextNext\u001b[0m = lastDigitNextNextNextNextNextNextNextNext + next\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastDigitNextNextNextNextNextNextNextNext is already defined as \u001b[33mvalue\u001b[0m \u001b[35mlastDigitNextNextNextNextNextNextNextNext\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpemkyqvzp.scala:24:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mlastDigitNextNextNextNextNextNextNextNextNextNext\u001b[0m = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mlastDigitNextNextNextNextNextNextNextNextNextNext is already defined as \u001b[33mvalue\u001b[0m \u001b[35mlastDigitNextNextNextNextNextNextNextNextNextNext\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpemkyqvzp.scala:25:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mlastDigitNextNextNextNextNextNextNextNextNextNext\u001b[0m = lastDigitNextNextNextNextNextNextNextNextNextNext + next\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        val starts = mutable.ArrayBuffer(0)\n        val ends = mutable.ArrayBuffer(0)\n        val nums = mutable.ArrayBuffer(n)\n        val numsLen = nums.length\n        val numsLenMinusOne = numsLen - 1\n        val numsLenMinusOneMinusOne = numsLen - 2\n        val numsLenMinusOneMinusOneMinusOne = numsLen - 3\n        val numsLenMinusOneMinusOneMinusOneMinusOne = numsLen - 4\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 5\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 6\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 7\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 8\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 9\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 10\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 11\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 12\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne = numsLen - 13\n        val numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinus\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi91lf2w3.scala:28:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi91lf2w3.scala:25:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\u001b[0m = numsLen - \u001b[31m12\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnumsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35m\n\u001b[31m   |\u001b[0m  numsLenMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\u001b[31m   |\u001b[0m\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi91lf2w3.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi91lf2w3.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi91lf2w3.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explan",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Int]\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val zeros = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.ArrayBuffer.empty[Long]\n        val zerosCounts = mutable.ArrayBuffer.empty[Long]\n        val onesCounts = mutable.Array\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpq_h9tz7n.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpq_h9tz7n.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpq_h9tz7n.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpq_h9tz7n.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpq_h9tz7n.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCo",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        while(n > 1) {\n            val digit = n % 10\n            n /= 10\n            val digitCount = if (digit == 1) ones.size else zeros.size\n            counts += digitCount\n        }\n        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaza75w4s.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaza75w4s.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaza75w4s.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpaza75w4s.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n        var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n        var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n        var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n        var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n        var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n        var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix = 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        for (i <- 1 to n) {\n            val digit = i / 10\n            if (digit == 1) {\n                ones += i\n            } else if (digit == 0) {\n                zeros += i\n            } else {\n                counts(digit) += 1\n            }\n        }\n        val oneCount = ones.count(_ == 1)\n        val zeroCount = zeros.count(_ == 0)\n        val count = oneCount + zeroCount\n        counts(n) += count\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfx_dyu.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfx_dyu.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfx_dyu.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqgfx_dyu.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount = mutable.ArrayBuffer.empty[Long]\n        val onesZeros = mutable.ArrayBuffer.empty[Long]\n        val zerosOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosZeros = mutable.ArrayBuffer.empty[Long]\n        val onesZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val onesZeroZeros = mutable.ArrayBuffer.empty[Long]\n        val zerosOneZeros = mutable.ArrayBuffer.empty[Long]\n        val onesOneZeros = mutable.ArrayBuffer.empty[Long]\n        val zerosOneOneZeros = mutable.ArrayBuffer.empty[Long]\n        val onesOneOneZeros = mutable.ArrayBuffer.empty[Long]\n        val zerosZeroOneZeros = mutable.ArrayBuffer.empty[Long]\n        val onesZeroZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOneZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneOneZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOneOneZeroOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosZeroOneOneZeros = mutable.ArrayBuffer.empty[Long]\n        val onesZeroZeroOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneZeroOneOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOneZeroOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneOneZeroOneOnes = mutable.ArrayBuffer.empty[Long]\n        val onesOneOneZeroOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosZeroOneOneOneZeros = mutable.ArrayBuffer.empty[Long]\n        val onesZeroZeroOneOneOnes = mutable.ArrayBuffer.empty[Long]\n        val zerosOneZeroOneOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbrsbghlh.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbrsbghlh.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbrsbghlh.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbrsbghlh.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbrsbghlh.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbrsbghlh.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var start = 1\n        var end = n\n        while (start < end) {\n            if (start % 10 == 1 && end % 10 != 1) {\n                count += 1\n            }\n            start += 1\n            end -= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmphmbq_bka.scala:20)\n\tat Problem.main(tmphmbq_bka.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659976198
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val zeros = mutable.ArrayBuffer.empty[Long]\n        val onesCount = mutable.ArrayBuffer.empty[Long]\n        val zerosCount = mutable.ArrayBuffer.empty[Long]\n        val onesCount2 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount2 = mutable.ArrayBuffer.empty[Long]\n        val onesCount3 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount3 = mutable.ArrayBuffer.empty[Long]\n        val onesCount4 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount4 = mutable.ArrayBuffer.empty[Long]\n        val onesCount5 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount5 = mutable.ArrayBuffer.empty[Long]\n        val onesCount6 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount6 = mutable.ArrayBuffer.empty[Long]\n        val onesCount7 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount7 = mutable.ArrayBuffer.empty[Long]\n        val onesCount8 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount8 = mutable.ArrayBuffer.empty[Long]\n        val onesCount9 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount9 = mutable.ArrayBuffer.empty[Long]\n        val onesCount10 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount10 = mutable.ArrayBuffer.empty[Long]\n        val onesCount11 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount11 = mutable.ArrayBuffer.empty[Long]\n        val onesCount12 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount12 = mutable.ArrayBuffer.empty[Long]\n        val onesCount13 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount13 = mutable.ArrayBuffer.empty[Long]\n        val onesCount14 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount14 = mutable.ArrayBuffer.empty[Long]\n        val onesCount15 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount15 = mutable.ArrayBuffer.empty[Long]\n        val onesCount16 = mutable.ArrayBuffer.empty[Long]\n        val zerosCount16 = mutable.ArrayBuffer.empty[Long]\n        val onesCount17 = mutable.ArrayBuffer.empty[Long]\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1ayevwl.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m       ",
      "stdout": "",
      "timestamp": 1659976198
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = scala.collection.mutable.ArrayBuffer(1)\n        val zeros = scala.collection.mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(_ < n).length\n        val zerosCount = zeros.takeWhile(_ < n).length\n        val onesZeros = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == 1).length\n        val onesOnes = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).length\n        val onesZeroOnes = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == 1).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).length\n        val onesOneOnes = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(zeros.takeWhile(_ < n)).filter(_._1 == 1).length\n        val onesZeroZeros = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == 1).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).length\n        val onesOneZeros = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).length\n        val onesZeroOnes = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).length\n        val onesOneZeros = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).length\n        val onesZeroZeros = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).length\n        val onesOneOnes = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(ones.takeWhile(_ < n)).filter(_._1 == 1).zip(zeros.takeWhile(_ < n)).filter(_._1 == 0).length\n        val onesZeroZeros = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxwsrv475.scala:22:87 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroZeros\u001b[0m = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxwsrv475.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroOnes\u001b[0m = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).filter(_._1 == \u001b[31m0\u001b[0m).zip(ones.takeWhile(_ < n)).filter(_._1 == \u001b[31m1\u001b[0m).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxwsrv475.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneZeros\u001b[0m = ones.takeWhile(_ < n).zip(ones.takeWhile(_ < n)).filter(_._1 == \u001b[31m1\u001b[0m).zip(zeros.takeWhile(_ < n)).filter(_._1 == \u001b[31m0\u001b[0m).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxwsrv475.scala:20:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroZeros\u001b[0m = ones.takeWhile(_ < n).zip(zeros.takeWhile(_ < n)).fi",
      "stdout": "",
      "timestamp": 1659976199
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val ones\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp03hev14g.scala:46:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp03hev14g.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp03hev14g.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp03hev14g.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp03hev14g.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp03hev14",
      "stdout": "",
      "timestamp": 1659976198
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val zerosCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val zerosCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val zerosCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val zerosCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val zerosCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val zerosCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val zerosCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val zerosCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val zerosCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val zerosCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val zerosCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val zerosCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val zerosCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val zerosCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val zerosCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosC",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var current = 1\n        while(current <= n) {\n            if(current == 1) {\n                count += 1\n            } else {\n                count = 0\n            }\n            last = current\n            current = current * 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpis7wjga9.scala:23)\n\tat Problem.main(tmpis7wjga9.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659976198
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n        val digits = mutable.ArrayBuffer(n)\n        while(digits.size > 0) {\n            val digit = digits.head\n            digits.remove(digit)\n            val digitCount = digits.count(_ == digit)\n            if(digit == 1) {\n                ones += digitCount\n            } else if(digit == 0) {\n                zeros += digitCount\n            } else {\n                counts += digitCount\n                count += digitCount\n            }\n        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpggb_j3mr.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpggb_j3mr.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpggb_j3mr.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpggb_j3mr.scala:10:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpggb_j3mr.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigits\u001b[0m = mutable.ArrayBuffer(n)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976194
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val twos = mutable.ListBuffer[Long]()\n        val threes = mutable.ListBuffer[Long]()\n        val fours = mutable.ListBuffer[Long]()\n        val fives = mutable.ListBuffer[Long]()\n        val sixes = mutable.ListBuffer[Long]()\n        val sevens = mutable.ListBuffer[Long]()\n        val eights = mutable.ListBuffer[Long]()\n        val nines = mutable.ListBuffer[Long]()\n        val tens = mutable.ListBuffer[Long]()\n        val hundreds = mutable.ListBuffer[Long]()\n        val thousands = mutable.ListBuffer[Long]()\n        val millions = mutable.ListBuffer[Long]()\n        val billions = mutable.ListBuffer[Long]()\n        val trillions = mutable.ListBuffer[Long]()\n        val quadrillions = mutable.ListBuffer[Long]()\n        val quintillions = mutable.ListBuffer[Long]()\n        val sextillions = mutable.ListBuffer[Long]()\n        val septillions = mutable.ListBuffer[Long]()\n        val octillions = mutable.ListBuffer[Long]()\n        val nonillions = mutable.ListBuffer[Long]()\n        val decillions = mutable.ListBuffer[Long]()\n        val undecillions = mutable.ListBuffer[Long]()\n        val duodecillions = mutable.ListBuffer[Long]()\n        val tredecillions = mutable.ListBuffer[Long]()\n        val quattuordecillions = mutable.ListBuffer[Long]()\n        val quindecillions = mutable.ListBuffer[Long]()\n        val sexdecillions = mutable.ListBuffer[Long]()\n        val septendecillions = mutable.ListBuffer[Long]()\n        val octodecillions = mutable.ListBuffer[Long]()\n        val novemdecillions = mutable.ListBuffer[Long]()\n        val vigintillions = mutable.ListBuffer[Long]()\n        val unvigintillions = mutable.ListBuffer\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:9:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtwos\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:10:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mthrees\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfours\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jfds9hf.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfives\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n",
      "stdout": "",
      "timestamp": 1659976198
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n > 1) {\n            count += 1\n            last += 1\n            n -= last\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1h7a184r.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n -= last\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976203
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        var count = 0\n        while(n > 1) {\n            ones += n\n            n -= 1\n        }\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += n\n        ones += \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmph61piov3.scala:109:15 --------------------------\u001b[0m\u001b[0m\n\u001b[31m109 |\u001b[0m        ones += \n\u001b[31m\u001b[31m    |\u001b[0m               ^\u001b[0m\n\u001b[31m    |\u001b[0m               expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph61piov3.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph61piov3.scala:11:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            n -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976204
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        for(i <- 1 to n){\n            if((i.toString.toLong % 10) == 1){\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzr77bw9s.scala:8:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976203
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp0_5heod1.scala:44:26 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount18\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesAndZeros = mutable.ListBuffer[Long]()\n        val onesAndZerosCount = mutable.ListBuffer[Long]()\n        val onesAndZerosCount2 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount3 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount4 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount5 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount6 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount7 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount8 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount9 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount10 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount11 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount12 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount13 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount14 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount15 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount16 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount17 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount18 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount19 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount20 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount21 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount22 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount23 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount24 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount25 = mutable.ListBuffer[Long]()\n        val onesAndZerosCount26\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9a_leadr.scala:36:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9a_leadr.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9a_leadr.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9a_leadr.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesAndZeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                           Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9a_leadr.scala:10:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesAndZerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9a_leadr.scala:11:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesAndZerosCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Not fo",
      "stdout": "",
      "timestamp": 1659976205
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n        var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n        var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n        var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n        var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n        var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n        var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix = 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeroOnes = mutable.Set[Long]()\n        val zerosOneOnes = mutable.Set[Long]()\n        val onesOneOnes = mutable.Set[Long]()\n        val zerosZeroOnes = mutable.Set[Long]()\n        val onesZeroZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroOnes = mutable.Set[Long]()\n        val onesOneZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneOnes = mutable.Set[Long]()\n        val onesZeroZeroOneOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOneOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOneOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOneOnes = mutable.Set[Long]()\n        val onesZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroZeroOneOneOnes = mutable.Set[Long]()\n        val onesZeroZeroOneZeroZeroOneOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val onesZeroZeroOneZeroZeroOneOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOneZeroOneOnes = mutable.Set[Long]()\n        val zerosZeroOne\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpde4t8h2k.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpde4t8h2k.scala:32:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneZeroZeroOneZeroOneOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOneZeroZeroOneZeroOneOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOneZeroZeroOneZeroOneOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpde4t8h2k.scala:33:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneZeroZeroOneZeroOneOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOneZeroZeroOneZeroOneOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOneZeroZeroOneZeroOneOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpde4t8h2k.scala:35:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroZeroOneZeroZeroOneOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroZeroOneZeroZeroOneOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroZeroOneZeroZeroOneOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpde4t8h2k.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneZeroZeroOneZeroOneOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976207
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesEnds = mutable.ListBuffer[Long]()\n        val zerosEnds = mutable.ListBuffer[Long]()\n        val onesStarts = mutable.ListBuffer[Long]()\n        val zerosStarts = mutable.ListBuffer[Long]()\n        val onesEndsCount = mutable.ListBuffer[Long]()\n        val zerosEndsCount = mutable.ListBuffer[Long]()\n        val onesStartsCount = mutable.ListBuffer[Long]()\n        val zerosStartsCount = mutable.ListBuffer[Long]()\n        val onesEndsCounts = mutable.ListBuffer[Long]()\n        val zerosEndsCounts = mutable.ListBuffer[Long]()\n        val onesStartsCounts = mutable.ListBuffer[Long]()\n        val zerosStartsCounts = mutable.ListBuffer[Long]()\n        val onesEndsCounts = mutable.ListBuffer[Long]()\n        val zerosEndsCounts = mutable.ListBuffer[Long]()\n        val onesStartsCounts = mutable.ListBuffer[Long]()\n        val zerosStartsCounts = mutable.ListBuffer[Long]()\n        val onesEndsCounts = mutable.ListBuffer[Long]()\n        val zerosEndsCounts = mutable.ListBuffer[Long]()\n        val onesStartsCounts = mutable.ListBuffer[Long]()\n        val zerosStartsCounts = mutable.ListBuffer[Long]()\n        val onesEndsCounts = mutable.ListBuffer[Long]()\n        val zerosEndsCounts = mutable.ListBuffer[Long]()\n        val onesStartsCounts = mutable.ListBuffer[Long]()\n        val zerosStartsCounts = mutable.ListBuffer[Long]()\n        val onesEndsCounts = mutable.ListBuffer[Long]()\n        val zerosEndsCounts = mutable.ListBuffer[Long]()\n        val onesStartsCounts = mutable.ListBuffer[Long]()\n        val zerosStartsCounts = mutable.ListBuffer[Long]()\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp1q7j3axt.scala:40:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m        \u001b[33mval\u001b[0m \n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1q7j3axt.scala:24:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesEndsCounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesEndsCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesEndsCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1q7j3axt.scala:25:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosEndsCounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosEndsCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosEndsCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1q7j3axt.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesStartsCounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesStartsCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesStartsCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1q7j3axt.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosStartsCounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosS",
      "stdout": "",
      "timestamp": 1659976206
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        var count = 0\n        while(n > 0){\n            val digit = n % 10\n            n /= 10\n            if(digit == 1){\n                ones += digit\n            }\n            else{\n                zeros += digit\n            }\n        }\n        count += ones.size - zeros.size\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbnqp_2hj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbnqp_2hj.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbnqp_2hj.scala:12:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976207
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp870p1n7s.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp870p1n7s.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp870p1n7s.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp870p1n7s.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountOnes\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp870p1n7s.scala:20:12 ---------------------------\u001b[0m\u001b[0m\n\u001b",
      "stdout": "",
      "timestamp": 1659976208
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val starts = mutable.Set[Long]()\n        val ends = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp56_ued8a.scala:43:25 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp56_ued8a.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp56_ued8a.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp56_ued8a.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp56_ued8a.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976207
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val counts = mutable.ListBuffer[Long]()\n        val starts = mutable.ListBuffer[Long]()\n        val ends = mutable.ListBuffer[Long]()\n        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        val digitCount = digits.count(_ > 0)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n        val digitZeroCount = digits.count(_ == 0)\n        val digitOneCount = digits.count(_ == 1)\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi89mm22n.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitZeroCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi89mm22n.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitOneCount\u001b[0m = digits.count(_ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitOneCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitOneCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi89mm22n.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitZeroCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi89mm22n.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitOneCount\u001b[0m = digits.count(_ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitOneCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitOneCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpi89mm22n.scala:20:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitZeroCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b",
      "stdout": "",
      "timestamp": 1659976208
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.Array[Long]()\n        val zeros = mutable.Array[Long]()\n        val onesCount = mutable.Array[Long]()\n        val zerosCount = mutable.Array[Long]()\n        for (i <- 1 to n) {\n            val digit = i / 10\n            if (i % 10 == 1) {\n                onesCount += digit\n                ones += digit\n            } else {\n                zerosCount += digit\n                zeros += digit\n            }\n        }\n        for (i <- onesCount.indices) {\n            val digit = onesCount(i)\n            val count = counts.getOrElse(digit, 0)\n            counts.put(digit, count + 1)\n        }\n        for (i <- zerosCount.indices) {\n            val digit = zerosCount(i)\n            val count = counts.getOrElse(digit, 0)\n            counts.put(digit, count + 1)\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz6xr5uu.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz6xr5uu.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Array[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz6xr5uu.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Array[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz6xr5uu.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Array[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnz6xr5uu.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Array[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnz6xr5uu.scala:12:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b",
      "stdout": "",
      "timestamp": 1659976207
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n        var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n        var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n        var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n        var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n        var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n        var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix = 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val starts = mutable.Set[Long]()\n        val ends = mutable.Set[Long]()\n        val max = (n / 10).floor\n        val min = (n / 10).ceil\n        val digits = math.pow(10, math.ceil(math.log(max, 10)))\n        val digit = math.pow(10, math.ceil(math.log(min, 10)))\n        val maxDigit = math.pow(10, math.ceil(math.log(max, 10)))\n        val minDigit = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitCount = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMax = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMin = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigit = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigit = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMin = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMin = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigit = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigit = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMin = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMinDigit = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigitMinDigit = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMinDigit = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigitMinDigit = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMinDigitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(min, 10)))\n        val digitMaxDigitMinDigitMinDigitMin = math.pow(10, math.ceil(math.log(max, 10)))\n        val digitMin\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc4sib1dy.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc4sib1dy.scala:31:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitMaxDigitMinDigitMinDigit\u001b[0m = math.pow(\u001b[31m10\u001b[0m, math.ceil(math.log(max, \u001b[31m10\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitMaxDigitMinDigitMinDigit is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitMaxDigitMinDigitMinDigit\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc4sib1dy.scala:32:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitMinDigitMinDigitMinDigit\u001b[0m = math.pow(\u001b[31m10\u001b[0m, math.ceil(math.log(min, \u001b[31m10\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitMinDigitMinDigitMinDigit is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitMinDigitMinDigitMinDigit\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc4sib1dy.scala:35:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdigitMaxDigitMinDigitMinDigitMin\u001b[0m = math.pow(\u001b[31m10\u001b[0m, math.ceil(math.log(max, \u001b[31m10\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mdigitMaxDigitMinDigitMinDigitMin is already defined as \u001b[33mvalue\u001b[0m \u001b[35mdigitMaxDigitMinDigitMinDigitMin\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc4sib1dy.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[3",
      "stdout": "",
      "timestamp": 1659976212
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = scala.collection.mutable.ListBuffer[Long]()\n        for(i <- 1 to n){\n            val temp = i\n            while(temp > 0){\n                ones += temp % 10\n                temp /= 10\n            }\n        }\n        val onesSet = scala.collection.mutable.Set[Long](ones)\n        for(i <- 1 to n){\n            val temp = i\n            while(temp > 0){\n                if(onesSet.contains(temp % 10)) count += 1\n                temp /= 10\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hhz9wa6.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hhz9wa6.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                temp /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean temp.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hhz9wa6.scala:16:57 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesSet\u001b[0m = scala.collection.mutable.Set[\u001b[35mLong\u001b[0m](ones)\n\u001b[31m\u001b[31m   |\u001b[0m                                                         ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    (ones : scala.collection.mutable.ListBuffer[Long])\n\u001b[31m   |\u001b[0m            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hhz9wa6.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hhz9wa6.scala:21:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                temp /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value /= is not a member of Int - did you mean temp.!=?\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mutable.Set[Long]()\n        val onesCounts_ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp7o3ivdrt.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp7o3ivdrt.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp7o3ivdrt.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp7o3ivdrt.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts_ is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts_\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp7o3ivdrt.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts_\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^",
      "stdout": "",
      "timestamp": 1659976208
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n        val onesCount = mutable.ArrayBuffer(0)\n        val zerosCount = mutable.ArrayBuffer(0)\n        val onesCounts = mutable.ArrayBuffer(0)\n        val zerosCounts = mutable.ArrayBuffer(0)\n        val onesCountZeros = mutable.ArrayBuffer(0)\n        val zerosCountZeros = mutable.ArrayBuffer(0)\n        val onesCountOnes = mutable.ArrayBuffer(0)\n        val zerosCountOnes = mutable.ArrayBuffer(0)\n        val onesCountZeroOnes = mutable.ArrayBuffer(0)\n        val zerosCountZeroOnes = mutable.ArrayBuffer(0)\n        val onesCountOneOnes = mutable.ArrayBuffer(0)\n        val zerosCountOneOnes = mutable.ArrayBuffer(0)\n        val onesCountZeroZeros = mutable.ArrayBuffer(0)\n        val zerosCountZeroZeros = mutable.ArrayBuffer(0)\n        val onesCountOneZeros = mutable.ArrayBuffer(0)\n        val zerosCountOneZeros = mutable.ArrayBuffer(0)\n        val onesCountZeroOnes = mutable.ArrayBuffer(0)\n        val zerosCountZeroOnes = mutable.ArrayBuffer(0)\n        val onesCountOneOne = mutable.ArrayBuffer(0)\n        val zerosCountOneOne = mutable.ArrayBuffer(0)\n        val onesCountZeroZero = mutable.ArrayBuffer(0)\n        val zerosCountZeroZero = mutable.ArrayBuffer(0)\n        val onesCountOneZero = mutable.ArrayBuffer(0)\n        val zerosCountOneZero = mutable.ArrayBuffer(0)\n        val onesCountZeroOne = mutable.ArrayBuffer(0)\n        val zerosCountZeroOne = mutable.ArrayBuffer(0)\n        val onesCountOneOne = mutable.ArrayBuffer(0)\n        val zerosCountOneOne = mutable.ArrayBuffer(0)\n        val onesCountZeroZero = mutable.ArrayBuffer(0)\n        val zerosCountZeroZero = mutable.ArrayBuffer(0)\n        val onesCountOneZero = mutable.ArrayBuffer(0)\n        val zerosCountOneZero = mutable.ArrayBuffer(0)\n        val onesCountZeroOne = mutable.ArrayBuffer(0)\n        val zerosCountZeroOne = mutable.ArrayBuffer(0)\n        val onesCountOneOne = mutable.ArrayBuffer(0)\n        val zerosCountOneOne = mutable.ArrayBuffer(0)\n        val onesCountZeroZero = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptiwbtkh5.scala:47:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptiwbtkh5.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroOnes\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptiwbtkh5.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountZeroOnes\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptiwbtkh5.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountOneOne\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountOneOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptiwbtkh5.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountOneOne\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountOneOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountOneOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that ",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer(0)\n        val start = ones.head\n        val end = zeros.head\n        val current = ones.head\n        val currentCount = ones.head\n        val currentCounts = ones.head\n        val currentCountZeros = ones.head\n        while(current <= n) {\n            counts += currentCount\n            currentCounts += currentCountZeros\n            currentCount += 1\n            currentCountZeros += 1\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            current = current + ones.size\n            current = current + zeros.size\n            \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpherr9lvg.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpherr9lvg.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpherr9lvg.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpherr9lvg.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpherr9lvg.scala:21:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            current = current + ones.size\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val current\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpherr9lvg.scala:22:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            current = current + zeros.size\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val current\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpherr9lvg.",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wq6plgf.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9wq6plgf.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val zerosCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val zerosCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val zerosCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val zerosCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val zerosCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val zerosCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val zerosCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val zerosCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val zerosCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val zerosCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val zerosCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val zerosCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val zerosCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val zerosCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val zerosCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val zerosCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val zerosCount18 = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp0_5heod1.scala:44:26 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount18\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_5heod1.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosOnes = mutable.Set[Long]()\n        val onesOnes = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeroOnes = mutable.Set[Long]()\n        val zerosOneOnes = mutable.Set[Long]()\n        val onesOneOnes = mutable.Set[Long]()\n        val zerosZeroOnes = mutable.Set[Long]()\n        val onesZeroZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroOnes = mutable.Set[Long]()\n        val onesOneZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneOnes = mutable.Set[Long]()\n        val onesZeroOneOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n        val onesZeroOneZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n        val onesZeroOneZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n        val onesZeroOneZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mutable.Set[Long]()\n        val onesOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosZeroOneZeroOnes = mutable.Set[Long]()\n        val onesZeroOneZeroOnes = mutable.Set[Long]()\n        val zerosOneZeroZeroOnes = mut\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9gmi9wux.scala:28:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneZeroZeroOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOneZeroZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOneZeroZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9gmi9wux.scala:29:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneZeroZeroOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOneZeroZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOneZeroZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9gmi9wux.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeroOneZeroOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeroOneZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeroOneZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9gmi9wux.scala:31:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroOneZeroOnes\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroOneZeroOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroOneZeroOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9gmi9wux.scala:32:12 ---------------------------\u001b[0m\u001b[",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).take\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpws9ca1bp.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpws9ca1bp.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpws9ca1bp.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnes\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOnes is alr",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val counter = mutable.Map[Long, Long]()\n        val counter2 = mutable.Map[Long, Long]()\n        val counter3 = mutable.Map[Long, Long]()\n        val counter4 = mutable.Map[Long, Long]()\n        val counter5 = mutable.Map[Long, Long]()\n        val counter6 = mutable.Map[Long, Long]()\n        val counter7 = mutable.Map[Long, Long]()\n        val counter8 = mutable.Map[Long, Long]()\n        val counter9 = mutable.Map[Long, Long]()\n        val counter10 = mutable.Map[Long, Long]()\n        val counter11 = mutable.Map[Long, Long]()\n        val counter12 = mutable.Map[Long, Long]()\n        val counter13 = mutable.Map[Long, Long]()\n        val counter14 = mutable.Map[Long, Long]()\n        val counter15 = mutable.Map[Long, Long]()\n        val counter16 = mutable.Map[Long, Long]()\n        val counter17 = mutable.Map[Long, Long]()\n        val counter18 = mutable.Map[Long, Long]()\n        val counter19 = mutable.Map[Long, Long]()\n        val counter20 = mutable.Map[Long, Long]()\n        val counter21 = mutable.Map[Long, Long]()\n        val counter22 = mutable.Map[Long, Long]()\n        val counter23 = mutable.Map[Long, Long]()\n        val counter24 = mutable.Map[Long, Long]()\n        val counter25 = mutable.Map[Long, Long]()\n        val counter26 = mutable.Map[Long, Long]()\n        val counter27 = mutable.Map[Long, Long]()\n        val counter28 = mutable.Map[Long, Long]()\n        val counter29 = mutable.Map[Long, Long]()\n        val counter30 = mutable.Map[Long, Long]()\n        val counter31 = mutable.Map[Long, Long]()\n        val counter32 = mutable.Map[Long, Long]()\n        val counter33 = mutable.Map[Long, Long]()\n        val counter34 = mutable.Map[Long, Long]()\n        val counter35 = mutable.Map[Long, Long]()\n        val counter36 = mutable.Map[\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppnfqbvwf.scala:45:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnfqbvwf.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnfqbvwf.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnfqbvwf.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounter\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnfqbvwf.scala:10:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounter2\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnfqbvwf.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounter3\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(1L)\n        val zeros = mutable.ArrayBuffer(0L)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp9ruzjlhu.scala:20:153 --------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => \n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9ruzjlhu.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp9ruzjlhu.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mz",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val zerosCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val zerosCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val zerosCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val zerosCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val zerosCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val zerosCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val zerosCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val zerosCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val zerosCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val zerosCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val zerosCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val zerosCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val zerosCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val zerosCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val zerosCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosC",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val zerosZeros = mutable.Set[Long]()\n        val onesZeros = mutable.Set[Long]()\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpz4twvwpl.scala:45:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz4twvwpl.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz4twvwpl.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz4twvwpl.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz4twvwpl.scala:19:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined ",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            } else {\n                zeros += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdgp88q4m.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdgp88q4m.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgp88q4m.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976212
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n                ones += i\n            }\n        }\n        for(i <- 1 to n){\n            if(i%10 == 0){\n                count += ones.size\n                ones.clear()\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy267ae08.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy267ae08.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy267ae08.scala:14:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976216
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpxc4gffnk.scala:21:23 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxc4gffnk.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxc4gffnk.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxc4gffnk.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOnes\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(",
      "stdout": "",
      "timestamp": 1659976215
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.HashSet.empty[Long]\n        val ends = mutable.HashSet.empty[Long]\n        val onesCount = mutable.HashSet.empty[Long]\n        val endsCount = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.HashSet.empty[Long]\n        val onesCounts = mutable.HashSet.empty[Long]\n        val endsCounts = mutable.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqbvjl_zf.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpqbvjl_zf.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpqbvjl_zf.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mendsCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mendsCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mendsCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpqbvjl_zf.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpqbvjl_zf.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mendsCounts\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mendsCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mendsCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of topl",
      "stdout": "",
      "timestamp": 1659976216
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(Long(1))\n        val zeros = mutable.ArrayBuffer(Long(0))\n        val onesCount = ones.count(n => n % 10 == 0)\n        val zerosCount = zeros.count(n => n % 10 == 0)\n        val onesZeros = ones.count(n => n % 10 == 1 && n % 100 != 0)\n        val zerosOnes = zeros.count(n => n % 10 == 1 && n % 100 != 0)\n        val onesOnes = ones.count(n => n % 10 == 1 && n % 100 == 0)\n        val zerosZeros = zeros.count(n => n % 10 == 0 && n % 100 != 0)\n        val zerosZeros = zeros.count(n => n % 10 == 0 && n % 100 == 0)\n        val onesZeroOnes = ones.count(n => n % 10 == 1 && n % 100 == 0 && n % 1000 == 0)\n        val zerosOneOnes = zeros.count(n => n % 10 == 1 && n % 100 == 0 && n % 1000 == 0)\n        val zerosZeroOnes = zeros.count(n => n % 10 == 0 && n % 100 == 0 && n % 1000 == 0)\n        val zerosOneZeros = zeros.count(n => n % 10 == 1 && n % 100 != 0 && n % 1000 == 0)\n        val zerosZeroZeros = zeros.count(n => n % 10 == 0 && n % 100 != 0 && n % 1000 == 0)\n        val zerosOneOnes = zeros.count(n => n % 10 == 1 && n % 100 == 0 && n % 100 != 0)\n        val zerosZeroOnes = zeros.count(n => n % 10 == 0 && n % 100 == 0 && n % 100 != 0)\n        val zerosOneZeros = zeros.count(n => n % 10 == 1 && n % 100 != 0 && n % 100 == 0)\n        val zerosZeroZeros = zeros.count(n => n % 10 == 0 && n % 100 != 0 && n % 100 == 0)\n        val zerosOneOnes = zeros.count(n => n % 10 == 1 && n % 100 == 0 && n % 100 != 0)\n        val zerosZeroOnes = zeros.count(n => n % 10 == 0 && n % 100 == 0 && n % 100 != 0)\n        val zerosOneZeros = zeros.count(n => n % 10 == 1 && n % 100 != 0 && n % 100 == 0)\n        val zerosZeroZeros = zeros.count(n => n % 10 == 0 && n % 100 != 0 && n % 100 == 0)\n        val zerosOneOnes = zeros.count(n => n % 10 == 1 && n % 100 == 0 && n % 100 != 0)\n        val zerosZeroOnes = zeros.count(n => n % 10 == 0 && n % \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp6kossnmn.scala:31:63 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeroOnes\u001b[0m = zeros.count(\u001b[36mn\u001b[0m => n % \u001b[31m10\u001b[0m == \u001b[31m0\u001b[0m && n % \n\u001b[31m\u001b[31m   |\u001b[0m                                                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6kossnmn.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeros\u001b[0m = zeros.count(\u001b[36mn\u001b[0m => n % \u001b[31m10\u001b[0m == \u001b[31m0\u001b[0m && n % \u001b[31m100\u001b[0m == \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6kossnmn.scala:22:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneOnes\u001b[0m = zeros.count(\u001b[36mn\u001b[0m => n % \u001b[31m10\u001b[0m == \u001b[31m1\u001b[0m && n % \u001b[31m100\u001b[0m == \u001b[31m0\u001b[0m && n % \u001b[31m100\u001b[0m != \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOneOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOneOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6kossnmn.scala:23:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeroOnes\u001b[0m = zeros.count(\u001b[36mn\u001b[0m => n % \u001b[31m10\u001b[0m == \u001b[31m0\u001b[0m && n % \u001b[31m100\u001b[0m == \u001b[31m0\u001b[0m && n % \u001b[31m100\u001b[0m != \u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeroOnes ",
      "stdout": "",
      "timestamp": 1659976217
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val count = new mutable.HashMap[Long, Long]()\n        val ones = new mutable.HashSet[Long]()\n        val zeros = new mutable.HashSet[Long]()\n        val onesCount = new mutable.HashMap[Long, Long]()\n        val zerosCount = new mutable.HashMap[Long, Long]()\n        val onesCount2 = new mutable.HashMap[Long, Long]()\n        val zerosCount2 = new mutable.HashMap[Long, Long]()\n        val onesCount3 = new mutable.HashMap[Long, Long]()\n        val zerosCount3 = new mutable.HashMap[Long, Long]()\n        val onesCount4 = new mutable.HashMap[Long, Long]()\n        val zerosCount4 = new mutable.HashMap[Long, Long]()\n        val onesCount5 = new mutable.HashMap[Long, Long]()\n        val zerosCount5 = new mutable.HashMap[Long, Long]()\n        val onesCount6 = new mutable.HashMap[Long, Long]()\n        val zerosCount6 = new mutable.HashMap[Long, Long]()\n        val onesCount7 = new mutable.HashMap[Long, Long]()\n        val zerosCount7 = new mutable.HashMap[Long, Long]()\n        val onesCount8 = new mutable.HashMap[Long, Long]()\n        val zerosCount8 = new mutable.HashMap[Long, Long]()\n        val onesCount9 = new mutable.HashMap[Long, Long]()\n        val zerosCount9 = new mutable.HashMap[Long, Long]()\n        val onesCount10 = new mutable.HashMap[Long, Long]()\n        val zerosCount10 = new mutable.HashMap[Long, Long]()\n        val onesCount11 = new mutable.HashMap[Long, Long]()\n        val zerosCount11 = new mutable.HashMap[Long, Long]()\n        val onesCount12 = new mutable.HashMap[Long, Long]()\n        val zerosCount12 = new mutable.HashMap[Long, Long]()\n        val onesCount13 = new mutable.HashMap[Long, Long]()\n        val zerosCount13 = new mutable.HashMap[Long, Long]()\n        val onesCount14 = new mutable.HashMap[Long, Long]()\n        val zerosCount14 = new mutable.HashMap[Long, Long]()\n        val onesCount15 = new mutable.HashMap[Long\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu6z6dh6c.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu6z6dh6c.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashMap[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu6z6dh6c.scala:8:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashSet[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu6z6dh6c.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashSet[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu6z6dh6c.scala:10:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashMap[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu6z6dh6c.scala:11:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = \u001b[33mnew\u001b[0m mutable.HashMap[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                       ",
      "stdout": "",
      "timestamp": 1659976218
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        val starts = mutable.ArrayBuffer(0)\n        val ends = mutable.ArrayBuffer(0)\n        val startsEnds = mutable.ArrayBuffer(0)\n        val endsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStarts = mutable.ArrayBuffer(0)\n        val endsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEnds = mutable.ArrayBuffer(0)\n        val startsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStartsEndsStarts = mutable.ArrayBuffer(0)\n        val startsEnd\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy8ab6k1n.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8ab6k1n.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8ab6k1n.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8ab6k1n.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8ab6k1n.scala:10:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mstarts\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy8ab6k1n.scala:11:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mends\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E",
      "stdout": "",
      "timestamp": 1659976218
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val digits = n.toString.reverse.grouped(2).map(_.toInt)\n        while(digits.hasNext) {\n            val digit = digits.next()\n            val count = digits.count(_ == digit)\n            counts += count\n            if(digit == 1) ones += count\n            if(digit == 0) zeros += count\n        }\n        ones.toList.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp62w1l1ig.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp62w1l1ig.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp62w1l1ig.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976216
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        var lastOne = 0\n        var lastTwo = 0\n        var lastThree = 0\n        var lastFour = 0\n        var lastFive = 0\n        var lastSix = 0\n        var lastSeven = 0\n        var lastEight = 0\n        var lastNine = 0\n        var lastTen = 0\n        var lastEleven = 0\n        var lastTwelve = 0\n        var lastThirteen = 0\n        var lastFourteen = 0\n        var lastFifteen = 0\n        var lastSixteen = 0\n        var lastSeventeen = 0\n        var lastEighteen = 0\n        var lastNineteen = 0\n        var lastTwenty = 0\n        var lastTwentyOne = 0\n        var lastTwentyTwo = 0\n        var lastTwentyThree = 0\n        var lastTwentyFour = 0\n        var lastTwentyFive = 0\n        var lastTwentySix = 0\n        var lastTwentySeven = 0\n        var lastTwentyEight = 0\n        var lastTwentyNine = 0\n        var lastThirty = 0\n        var lastThirtyOne = 0\n        var lastThirtyTwo = 0\n        var lastThirtyThree = 0\n        var lastThirtyFour = 0\n        var lastThirtyFive = 0\n        var lastThirtySix = 0\n        var lastThirtySeven = 0\n        var lastThirtyEight = 0\n        var lastThirtyNine = 0\n        var lastFourty = 0\n        var lastFourtyOne = 0\n        var lastFourtyTwo = 0\n        var lastFourtyThree = 0\n        var lastFourtyFour = 0\n        var lastFourtyFive = 0\n        var lastFourtySix = 0\n        var lastFourtySeven = 0\n        var lastFourtyEight = 0\n        var lastFourtyNine = 0\n        var lastFifty = 0\n        var lastFiftyOne = 0\n        var lastFiftyTwo = 0\n        var lastFiftyThree = 0\n        var lastFiftyFour = 0\n        var lastFiftyFive = 0\n        var lastFiftySix = 0\n        var lastFiftySeven = 0\n        var lastFiftyEight = 0\n        var lastFiftyNine = 0\n        var lastSixty = 0\n        var lastSixtyOne = 0\n        var lastSixtyTwo = 0\n        var lastSixtyThree = 0\n        var lastSixtyFour = 0\n        var lastSixtyFive = 0\n        var lastSixtySix = 0\n        var lastSixtySeven = 0\n        var lastSixtyEight = 0\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptku37em0.scala:77:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                count += 1\n                ones += i\n            }\n        }\n        ones.size\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgjuuh5qa.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgjuuh5qa.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976219
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            } else {\n                zeros += i\n            }\n        }\n        ones.toList.size + (zeros.toList.size - ones.toList.size)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpch3fpvqp.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpch3fpvqp.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpch3fpvqp.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976219
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val count = mutable.ArrayBuffer(0)\n        while(n > 0){\n            val temp = n % 10\n            if(temp == 1){\n                ones += temp\n                count += 1\n            }\n            else if(temp == 0){\n                zeros += temp\n            }\n            n /= 10\n        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp26ognhoc.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp26ognhoc.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp26ognhoc.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ognhoc.scala:19:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976219
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        for (i <- 1 to n) {\n            val str = i.toString\n            if (str.startsWith(\"1\") || str.endsWith(\"1\")) {\n                counts.put(i, counts.getOrElse(i, 0) + 1L)\n            }\n        }\n        counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmhfs6fe_.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap.empty[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhfs6fe_.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976220
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val zerosCount = mutable.Set[Long]()\n        val onesCounts = mutable.Set[Long]()\n        val zerosCounts = mutable.Set[Long]()\n        val onesCountZeros = mutable.Set[Long]()\n        val zerosCountZeros = mutable.Set[Long]()\n        val onesCountOnes = mutable.Set[Long]()\n        val zerosCountOnes = mutable.Set[Long]()\n        val onesCountZeroOnes = mutable.Set[Long]()\n        val zerosCountZeroOnes = mutable.Set[Long]()\n        val onesCountOneOnes = mutable.Set[Long]()\n        val zerosCountOneOnes = mutable.Set[Long]()\n        val onesCountZeroZeros = mutable.Set[Long]()\n        val zerosCountZeroZeros = mutable.Set[Long]()\n        val onesCountOneZeros = mutable.Set[Long]()\n        val zerosCountOneZeros = mutable.Set[Long]()\n        val onesCountOneOneZeros = mutable.Set[Long]()\n        val zerosCountOneOneZeros = mutable.Set[Long]()\n        val onesCountZeroOneOnes = mutable.Set[Long]()\n        val zerosCountZeroOneOnes = mutable.Set[Long]()\n        val onesCountOneZeroOnes = mutable.Set[Long]()\n        val zerosCountOneZeroOnes = mutable.Set[Long]()\n        val onesCountOneOneZeroOnes = mutable.Set[Long]()\n        val zerosCountOneOneZeroOnes = mutable.Set[Long]()\n        val onesCountZeroZeroOnes = mutable.Set[Long]()\n        val zerosCountZeroZeroOnes = mutable.Set[Long]()\n        val onesCountOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosCountOneZeroZeroOnes = mutable.Set[Long]()\n        val onesCountOneOneZeroZeroOnes = mutable.Set[Long]()\n        val zerosCountOneOneZeroZeroOnes = mutable.Set[Long]()\n        val onesCountZeroOneOneZeroOnes = mutable.Set[\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnn2lpdax.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn2lpdax.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn2lpdax.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn2lpdax.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn2lpdax.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnn2lpdax.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "stdout": "",
      "timestamp": 1659976219
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wq6plgf.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9wq6plgf.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976210
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var start = 1\n        while (start <= n) {\n            if (start == 1) {\n                count += 1\n            }\n            start *= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpopah84uj.scala:19)\n\tat Problem.main(tmpopah84uj.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659976222
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) {\n            if (i % 10 == 1) {\n                ones += i\n            } else {\n                zeros += i\n            }\n        }\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdgp88q4m.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdgp88q4m.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgp88q4m.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976212
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) ones += i\n        ones.count(i => i%10 == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzn_28x6a.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzn_28x6a.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) ones += i\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976220
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        for (i <- 1 to n) ones += i\n        ones.count(_ == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3fxu9d77.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3fxu9d77.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) ones += i\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976221
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mutable.ListBuffer[Long]()\n        val onesCount = scala.collection.mut\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpupavxgyx.scala:9:12 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = scala.collection.mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpupavxgyx.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = scala.collection.mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpupavxgyx.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = scala.collection.mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpupavxgyx.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = scala.collection.mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpupavxgyx.scala:13:12 --------------",
      "stdout": "",
      "timestamp": 1659976221
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val zeros = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n            val digit = i / 10\n            if (digits.contains(digit)) {\n                val count = digits(digit)\n                counts += digit -> count\n                if (count == 1) {\n                    ones += digit\n                } else {\n                    zeros += digit\n                }\n            }\n        }\n        val oneCount = ones.count(_ == 1)\n        val zeroCount = zeros.count(_ == 0)\n        counts + (oneCount + zeroCount) -> oneCount + zeroCount\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3g48emn4.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap.empty[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3g48emn4.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3g48emn4.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g48emn4.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3g48emn4.scala:12:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (digits.contains(digit)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: digits\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3g48emn4.scala:13:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = digits(d",
      "stdout": "",
      "timestamp": 1659976221
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 0\n        for(i <- 1 to n) {\n            if(i % 10 == 1) {\n                count += 1\n                last = i\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xup9ija.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976221
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            if(i % 10 == 1){\n                ones += i\n                count += 1\n            }\n        }\n        ones.length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfl24fi2q.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfl24fi2q.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976221
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        var i = 0\n        while (i < n) {\n            val x = ones + zeros\n            if (x == ones) {\n                counts += ones.length\n                i += 1\n            } else if (x == zeros) {\n                counts += zeros.length\n                i += 1\n            } else {\n                counts += x.size\n                i += 1\n            }\n        }\n        counts.sum\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq5kwhy3.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq5kwhy3.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq5kwhy3.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976219
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val onesZeroOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val onesZeroOnesOnesOnesOnesOnesOnesOnesOnesOnesOnesOnes = mutable.Map[Long, Long]()\n        val zerosOnesOnesOnesOnesOnes\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg6mr56g6.scala:32:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg6mr56g6.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg6mr56g6.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg6mr56g6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg6mr56g6.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg6mr56g6.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanat",
      "stdout": "",
      "timestamp": 1659976222
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n                ones += i\n                onesCount += i\n                count += 1\n            }\n        }\n        onesCount.toList.sortWith(_ < _).length\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0i6xuwjp.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0i6xuwjp.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i6xuwjp.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (n : Long)\n\u001b[31m   |\u001b[0m                      Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659976222
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount2 = mutable.Set[Long]()\n        val onesCount3 = mutable.Set[Long]()\n        val onesCount4 = mutable.Set[Long]()\n        val onesCount5 = mutable.Set[Long]()\n        val onesCount6 = mutable.Set[Long]()\n        val onesCount7 = mutable.Set[Long]()\n        val onesCount8 = mutable.Set[Long]()\n        val onesCount9 = mutable.Set[Long]()\n        val onesCount10 = mutable.Set[Long]()\n        val onesCount11 = mutable.Set[Long]()\n        val onesCount12 = mutable.Set[Long]()\n        val onesCount13 = mutable.Set[Long]()\n        val onesCount14 = mutable.Set[Long]()\n        val onesCount15 = mutable.Set[Long]()\n        val onesCount16 = mutable.Set[Long]()\n        val onesCount17 = mutable.Set[Long]()\n        val onesCount18 = mutable.Set[Long]()\n        val onesCount19 = mutable.Set[Long]()\n        val onesCount20 = mutable.Set[Long]()\n        val onesCount21 = mutable.Set[Long]()\n        val onesCount22 = mutable.Set[Long]()\n        val onesCount23 = mutable.Set[Long]()\n        val onesCount24 = mutable.Set[Long]()\n        val onesCount25 = mutable.Set[Long]()\n        val onesCount26 = mutable.Set[Long]()\n        val onesCount27 = mutable.Set[Long]()\n        val onesCount28 = mutable.Set[Long]()\n        val onesCount29 = mutable.Set[Long]()\n        val onesCount30 = mutable.Set[Long]()\n        val onesCount31 = mutable.Set[Long]()\n        val onesCount32 = mutable.Set[Long]()\n        val onesCount33 = mutable.Set[Long]()\n        val onesCount34 = mutable.Set[Long]()\n        val one\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa07ttchk.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa07ttchk.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer.empty[Long]\n        val zeros = mutable.ListBuffer.empty[Long]\n        val onesCount = mutable.ListBuffer.empty[Long]\n        val zerosCount = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.empty[Long]\n        val onesCounts = mutable.ListBuffer.empty[Long]\n        val zerosCounts = mutable.ListBuffer.\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1wgzzk9r.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1wgzzk9r.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ListBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1wgzzk9r.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ListBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1wgzzk9r.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCounts\u001b[0m = mutable.ListBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1wgzzk9r.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCounts\u001b[0m = mutable.ListBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCounts is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCounts\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be d",
      "stdout": "",
      "timestamp": 1659976223
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mut\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:9:12 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCou",
      "stdout": "",
      "timestamp": 1659976227
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val start = scala.math.pow(10, n).toLong\n        val end = scala.math.pow(10, n-1).toLong\n        while(start <= end) {\n            val mid = start + (end - start) / 2\n            val isOne = scala.math.pow(10, mid).toLong == 1\n            if(isOne) {\n                ones += mid\n            } else {\n                zeros += mid\n            }\n            counts(mid) += 1\n            start = mid + 1\n        }\n        ones.size + (zeros.size - ones.size)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68ha3xz9.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68ha3xz9.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68ha3xz9.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp68ha3xz9.scala:21:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            start = mid + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val start\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976224
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        while(n > 0){\n            val digit = n % 10\n            val digitCount = digits.count(_ == digit)\n            val digitZeroCount = digits.count(_ == 0)\n            val digitOneCount = digits.count(_ == 1)\n            val digitZeroOneCount = digits.count(_ == 0 && _ == 1)\n            val digitOneZeroCount = digits.count(_ == 1 && _ == 0)\n            val digitZeroZeroCount = digits.count(_ == 0 && _ == 0)\n            val digitOneOneCount = digits.count(_ == 1 && _ == 1)\n            val digitZeroOneOneCount = digits.count(_ == 0 && _ == 1 && _ == 0)\n            val digitOneZeroOneCount = digits.count(_ == 1 && _ == 0 && _ == 1)\n            val digitZeroZeroOneCount = digits.count(_ == 0 && _ == 0 && _ == 1)\n            val digitOneOneZeroCount = digits.count(_ == 1 && _ == 1 && _ == 0)\n            val digitZeroOneZeroCount = digits.count(_ == 0 && _ == 1 && _ == 0)\n            val digitOneZeroZeroCount = digits.count(_ == 1 && _ == 0 && _ == 0)\n            val digitZeroOneOneCount = digits.count(_ == 0 && _ == 1 && _ == 1)\n            val digitZeroOneOneZeroCount = digits.count(_ == 0 && _ == 1 && _ == 1 && _ == 0)\n            val digitOneZeroOneZeroCount = digits.count(_ == 1 && _ == 0 && _ == 1 && _ == 0)\n            val digitZeroOneZeroOneCount = digits.count(_ == 0 && _ == 1 && _ == 0 && _ == 1)\n            val digitZeroOneZeroOneZeroCount = digits.count(_ == 0 && _ == 1 && _ == 0 && _ == 1 && _ == 0)\n            val digitOneZeroZeroOneCount = digits.count(_ == 1 && _ == 0 && _ == 0 && _ == 1)\n            val digitZeroOneZeroOneZeroCount = digits.count(_ == 0 && _ == 1 && _ == 0 && _ == 1 && _ == 0)\n            val digitOneZeroOneZeroOneCount = digits.count(_ == 1 && _ == 0 && _ == 0 && _ == 1 && _ == 1)\n            val digitZeroOneZeroOneZeroOneCount = digits.count(_ == 0 && _ == 1 && _ == 0 && _ == 1 && _ == 1)\n            val digitOneZeroZeroOneCount = digits.count(_ == 1 && _ == 0 && _ == 0 && _ == 1)\n            val digitZeroOneZeroOneCount = digits.count(_ == 0 && _ == 1 && \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpsuq5s94w.scala:35:75 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mdigitZeroOneZeroOneCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b[0m && _ == \u001b[31m1\u001b[0m && \n\u001b[31m\u001b[31m   |\u001b[0m                                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsuq5s94w.scala:46:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuq5s94w.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuq5s94w.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuq5s94w.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpsuq5s94w.scala:25:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mdigitZeroOneOneCount\u001b[0m = digits.count(_ == \u001b[31m0\u001b[0m && _ == \u001b[31m1\u001b[0m && _ == \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[",
      "stdout": "",
      "timestamp": 1659976229
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val digits = n.toString.reverse.grouped(10).reverse\n        digits.foreach { x =>\n            val digit = x.toLong\n            if (digit == 1) ones += digit\n            if (digit == 0) zeros += digit\n            counts += digit -> counts.getOrElse(digit, 0) + 1\n        }\n        val oneCount = ones.size\n        val zeroCount = zeros.size\n        val count = oneCount + zeroCount\n        val onesCount = ones.toSeq.sum\n        val zerosCount = zeros.toSeq.sum\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n        val onesZeroCount = onesCount + zerosCount\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp2nevoxw5.scala:23:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroCount\u001b[0m = onesCount + zerosCount\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp2nevoxw5.scala:24:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroCount\u001b[0m = onesCount + zerosCount\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp2nevoxw5.scala:25:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroCount\u001b[0m = onesCount + zerosCount\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp2nevoxw5.scala:26:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroCount\u001b[0m = onesCount + zerosCount\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp2nevoxw5.scala:27:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroCount\u001b[0m = onesCount + zerosCount\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^",
      "stdout": "",
      "timestamp": 1659976229
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        while(n != 0) {\n            val next = (n % 10).toInt\n            if(next == 1) {\n                count += 1\n            }\n            last = next\n            n /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbs8_8w4p.scala:15:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n1 error found\n",
      "stdout": "",
      "timestamp": 1659976227
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = Vector.fill(n / 10)(1)\n        val zeros = Vector.fill(n / 10)(0)\n        val onesCount = ones.count(_ == 1)\n        val zerosCount = zeros.count(_ == 0)\n        if (onesCount == 1 && zerosCount == 0) {\n            count = n\n        } else if (onesCount == 1 && zerosCount > 0) {\n            count = onesCount + zerosCount\n        } else if (onesCount > 0 && zerosCount == 0) {\n            count = onesCount + n\n        } else {\n            count = onesCount + zerosCount + n\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb62xbjpf.scala:8:31 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               Found:    Long\n\u001b[31m  |\u001b[0m                               Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb62xbjpf.scala:9:32 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    Long\n\u001b[31m  |\u001b[0m                                Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb62xbjpf.scala:13:20 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            count = n\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    Found:    (n : Long)\n\u001b[31m   |\u001b[0m                    Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb62xbjpf.scala:17:20 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            count = onesCount + n\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Found:    Long\n\u001b[31m   |\u001b[0m                    Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb62xbjpf.scala:19:20 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            count = onesCount + zerosCount + n\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Found:    Long\n\u001b[31m   |\u001b[0m                    Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling",
      "stdout": "",
      "timestamp": 1659976230
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val count = mutable.ListBuffer[Long]()\n        var i = n\n        while (i > 0) {\n            val remainder = i % 10\n            if (remainder == 1) {\n                ones += i\n            } else if (remainder == 0) {\n                zeros += i\n            } else {\n                count += i\n            }\n            i /= 10\n        }\n        val oneCount = ones.count(_ == 1)\n        val zeroCount = zeros.count(_ == 0)\n        val count = count.sum\n        val oneEndCount = oneCount - zeroCount\n        oneEndCount\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpvkh_wywc.scala:24:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = count.sum\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mcount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mcount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvkh_wywc.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvkh_wywc.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvkh_wywc.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976226
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        for (i <- 1 to n) counts(i) = 1\n        val ones = mutable.HashSet[Long]()\n        for (i <- 1 to n) ones.add(i * 10)\n        ones.count(i => counts(i) == 1)\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppwxdh965.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppwxdh965.scala:8:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) counts(i) = \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (n : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppwxdh965.scala:9:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.HashSet[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppwxdh965.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) ones.add(i * \u001b[31m10\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = Vector.fill(n / 10)(1)\n        val zeros = Vector.fill(n / 10)(0)\n        val onesVector = ones.toVector\n        val zerosVector = zeros.toVector\n        val onesVectorSize = onesVector.length\n        val zerosVectorSize = zerosVector.length\n        val onesVectorIterator = onesVector.iterator\n        val zerosVectorIterator = zerosVector.iterator\n        val onesVectorIteratorSize = onesVectorIterator.size\n        val zerosVectorIteratorSize = zerosVectorIterator.size\n        while(onesVectorIterator.hasNext && zerosVectorIterator.hasNext) {\n            val onesVectorElement = onesVectorIterator.next()\n            val zerosVectorElement = zerosVectorIterator.next()\n            if(onesVectorElement == 1 && zerosVectorElement == 0) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuk7lp0_1.scala:8:31 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               Found:    Long\n\u001b[31m  |\u001b[0m                               Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuk7lp0_1.scala:9:32 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    Long\n\u001b[31m  |\u001b[0m                                Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesCounts = mutable.Map[Long, Long]()\n        val zerosCounts = mutable.Map[Long, Long]()\n        val onesCountZeros = mutable.Map[Long, Long]()\n        val zerosCountZeros = mutable.Map[Long, Long]()\n        val onesCountOnes = mutable.Map[Long, Long]()\n        val zerosCountOnes = mutable.Map[Long, Long]()\n        val onesCountZeroOnes = mutable.Map[Long, Long]()\n        val zerosCountZeroOnes = mutable.Map[Long, Long]()\n        val onesCountOneOnes = mutable.Map[Long, Long]()\n        val zerosCountOneOnes = mutable.Map[Long, Long]()\n        val onesCountZeroZeros = mutable.Map[Long, Long]()\n        val zerosCountZeroZeros = mutable.Map[Long, Long]()\n        val onesCountOneZero = mutable.Map[Long, Long]()\n        val zerosCountOneZero = mutable.Map[Long, Long]()\n        val onesCountZeroOne = mutable.Map[Long, Long]()\n        val zerosCountZeroOne = mutable.Map[Long, Long]()\n        val onesCountOneOne = mutable.Map[Long, Long]()\n        val zerosCountOneOne = mutable.Map[Long, Long]()\n        val onesCountZeroZeroOne = mutable.Map[Long, Long]()\n        val zerosCountZeroZeroOne = mutable.Map[Long, Long]()\n        val onesCountOneZeroZero = mutable.Map[Long, Long]()\n        val zerosCountOneZeroZero = mutable.Map[Long, Long]()\n        val onesCountOneOneZero = mutable.Map[Long, Long]()\n        val zerosCountOneOneZero = mutable.Map[Long, Long]()\n        val onesCountZeroZeroOne = mutable.Map[Long, Long]()\n        val zerosCountZeroZeroOne = mutable.Map[Long, Long]()\n        val onesCountOneZeroZero = mutable.Map[Long, Long]()\n        \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6rrw03y2.scala:36:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountZeroZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountZeroZeroOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountZeroZeroOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6rrw03y2.scala:37:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCountZeroZeroOne\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosCountZeroZeroOne is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosCountZeroZeroOne\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp6rrw03y2.scala:38:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCountOneZeroZero\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCountOneZeroZero is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCountOneZeroZero\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rrw03y2.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rrw03y2.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = m",
      "stdout": "",
      "timestamp": 1659976230
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mutable.Set[Long]()\n        val onesCount = mut\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:9:12 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:10:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp1uefe89v.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesCou",
      "stdout": "",
      "timestamp": 1659976227
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        var i = 0\n        while (i < n) {\n            val x = ones + zeros\n            val y = ones - zeros\n            val z = ones + zeros\n            val w = zeros - ones\n            val z = z + w\n            val x = x + z\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n            val z = z + y\n            val w = w + z\n            val x = x + w\n            val y = y + x\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc77pkxmd.scala:97:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc77pkxmd.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc77pkxmd.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc77pkxmd.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc77pkxmd.scala:16:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mz\u001b[0m = z + w\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mz is already defined as \u001b[33mvalue\u001b[0m \u001b[35mz\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpc77pkxmd.scala:17:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mx\u001b[0m = x + z\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mx is already defined as \u001b[33mvalue\u001b[0m \u001b[35mx\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel de",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer(1)\n        val zeros = mutable.ListBuffer(0)\n        val counts = mutable.ListBuffer[Long]()\n        val remainder = n % 10\n        val remainderDigit = remainder % 10\n        val remainderDigit2 = remainderDigit % 10\n        val remainderDigit3 = remainderDigit % 10\n        val remainderDigit4 = remainderDigit % 10\n        val remainderDigit5 = remainderDigit % 10\n        val remainderDigit6 = remainderDigit % 10\n        val remainderDigit7 = remainderDigit % 10\n        val remainderDigit8 = remainderDigit % 10\n        val remainderDigit9 = remainderDigit % 10\n        val remainderDigit10 = remainderDigit % 10\n        val remainderDigit11 = remainderDigit % 10\n        val remainderDigit12 = remainderDigit % 10\n        val remainderDigit13 = remainderDigit % 10\n        val remainderDigit14 = remainderDigit % 10\n        val remainderDigit15 = remainderDigit % 10\n        val remainderDigit16 = remainderDigit % 10\n        val remainderDigit17 = remainderDigit % 10\n        val remainderDigit18 = remainderDigit % 10\n        val remainderDigit19 = remainderDigit % 10\n        val remainderDigit20 = remainderDigit % 10\n        val remainderDigit21 = remainderDigit % 10\n        val remainderDigit22 = remainderDigit % 10\n        val remainderDigit23 = remainderDigit % 10\n        val remainderDigit24 = remainderDigit % 10\n        val remainderDigit25 = remainderDigit % 10\n        val remainderDigit26 = remainderDigit % 10\n        val remainderDigit27 = remainderDigit % 10\n        val remainderDigit28 = remainderDigit % 10\n        val remainderDigit29 = remainderDigit % 10\n        val remainderDigit30 = remainderDigit % 10\n        val remainderDigit31 = remainderDigit % 10\n        val remainderDigit32 = remainderDigit % 10\n        val remainderDigit33 = remainderDigit % 10\n        val remainderDigit34 = remainderDigit % 10\n        val remainderDigit35 = remainderDig\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9ac6eec.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9ac6eec.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9ac6eec.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9ac6eec.scala:45:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mremainderDigit35\u001b[0m = remainderDig\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               Not found: remainderDig\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk9ac6eec.scala:46:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        val onesCount = mutable.Map[Long, Long]()\n        val zerosCount = mutable.Map[Long, Long]()\n        val onesZeros = mutable.Map[Long, Long]()\n        val zerosOnes = mutable.Map[Long, Long]()\n        val onesOnes = mutable.Map[Long, Long]()\n        val zerosZeros = mutable.Map[Long, Long]()\n        val onesZeroOnes = mutable.Map[Long, Long]()\n        val zerosOneOnes = mutable.Map[Long, Long]()\n        val onesOneOnes = mutable.Map[Long, Long]()\n        val zerosZeroOnes = mutable.Map[Long, Long]()\n        val onesZeroZeros = mutable.Map[Long, Long]()\n        val onesOneZeros = mutable.Map[Long, Long]()\n        val zerosOneZeros = mutable.Map[Long, Long]()\n        val onesOneZeroOnes = mutable.Map[Long, Long]()\n        val zerosOneOneZeros = mutable.Map[Long, Long]()\n        val onesOneOneZeros = mutable.Map[Long, Long]()\n        val zerosZeroOneZeros = mutable.Map[Long, Long]()\n        val onesZeroOneZeros = mutable.Map[Long, Long]()\n        val zerosOneOneZeros = mutable.Map[Long, Long]()\n        val onesOneOneZeros = mutable.Map[Long, Long]()\n        val zerosZeroOneZeros = mutable.Map[Long, Long]()\n        val onesZeroOneZeros = mutable.Map[Long, Long]()\n        val zerosOneOneZeros = mutable.Map[Long, Long]()\n        val onesOneOneZeros = mutable.Map[Long, Long]()\n        val zerosZeroOneZeros = mutable.Map[Long, Long]()\n        val onesZeroOneZeros = mutable.Map[Long, Long]()\n        val zerosOneOneZeros = mutable.Map[Long, Long]()\n        val onesOneOneZeros = mutable.Map[Long, Long]()\n        val zerosZeroOneZeros = mutable.Map[Long, Long]()\n        val onesZeroOneZeros = mutable.Map[Long, Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptgpqw_em.scala:28:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOneOneZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptgpqw_em.scala:29:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesOneOneZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesOneOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesOneOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptgpqw_em.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosZeroOneZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosZeroOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosZeroOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptgpqw_em.scala:31:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroOneZeros\u001b[0m = mutable.Map[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeroOneZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeroOneZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptgpqw_em.scala:32:12 -----",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        val zeros = mutable.Set[Long]()\n        val counts = mutable.Map[Long, Long]()\n        for (i <- 1 to n) {\n            val digit = i / 10\n            if (digit == 1) {\n                ones += i\n            } else if (digit == 0) {\n                zeros += i\n            } else {\n                counts += (digit - 1) -> (counts(digit) + 1)\n            }\n        }\n        val oneCount = ones.count(_ == 1)\n        val zeroCount = zeros.count(_ == 0)\n        val totalCount = ones.size + zeros.size\n        val oneEndCount = ones.size - oneCount\n        val zeroEndCount = zeros.size - zeroCount\n        val oneEnds = ones.take(oneEndCount)\n        val zeroEnds = zeros.take(zeroEndCount)\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEndsCount = zeros.size - zeroEnds.size\n        val oneEndsCount = ones.size - oneEnds.size\n        val zeroEnds\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnznz6lv_.scala:55:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpnznz6lv_.scala:29:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneEndsCount\u001b[0m = ones.size - oneEnds.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneEndsCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneEndsCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpnznz6lv_.scala:30:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroEndsCount\u001b[0m = zeros.size - zeroEnds.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroEndsCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroEndsCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpnznz6lv_.scala:31:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36moneEndsCount\u001b[0m = ones.size - oneEnds.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0moneEndsCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35moneEndsCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpnznz6lv_.scala:32:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroEndsCount\u001b[0m = zeros.size - zeroEnds.size\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzeroEndsCount is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzeroEndsCount\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val counts = mutable.ArrayBuffer.empty[Long]\n        val n = n.toInt\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val count = (onesCount + zerosCount).toLong\n        counts += count\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9xmnvc7.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9xmnvc7.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ArrayBuffer(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9xmnvc7.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpd9xmnvc7.scala:10:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = n.toInt\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976229
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            val temp = i\n            while(temp > 0){\n                if(temp % 10 == 1){\n                    ones += i\n                    break\n                }\n                temp = temp / 10\n            }\n        }\n        count = ones.size - n\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx_xpyg7r.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_xpyg7r.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx_xpyg7r.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                    break\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpx_xpyg7r.scala:16:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                temp = temp / \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val temp\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.Set[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            val remainder = i % 10\n            if(remainder == 1){\n                ones += i\n            }\n        }\n        ones.size\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1yfmelbx.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.Set[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yfmelbx.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        var count = 0\n        for(i <- 1 to n){\n            if(i%10 == 1){\n                ones += i\n                count += 1\n            }\n        }\n        ones.size\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgnd30743.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgnd30743.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m1\u001b[0m to n){\n\u001b[31m\u001b[31m  |\u001b[0m                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (n : Long)\n\u001b[31m  |\u001b[0m                      Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976174
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap[Long, Long]()\n        val ones = mutable.ArrayBuffer(1)\n        val zeros = mutable.ArrayBuffer(0)\n        val onesCount = ones.takeWhile(x => x < n).length\n        val zerosCount = zeros.takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesOnes = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosZeros = zeros.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val onesZeros = ones.takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).takeWhile(x => x < n).length\n        val zerosOnes = zeros.takeWhile(x => x < \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpz_ib3hw0.scala:21:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < \n\u001b[31m\u001b[31m   |\u001b[0m                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz_ib3hw0.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = ones.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0monesZeros is already defined as \u001b[33mvalue\u001b[0m \u001b[35monesZeros\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz_ib3hw0.scala:17:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosOnes\u001b[0m = zeros.takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).takeWhile(\u001b[36mx\u001b[0m => x < n).length\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mzerosOnes is already defined as \u001b[33mvalue\u001b[0m \u001b[35mzerosOnes\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpz_ib3hw0.scala:18:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        var next = 1\n        var next2 = 1\n        var next3 = 1\n        var next4 = 1\n        var next5 = 1\n        var next6 = 1\n        var next7 = 1\n        var next8 = 1\n        var next9 = 1\n        var next10 = 1\n        var next11 = 1\n        var next12 = 1\n        var next13 = 1\n        var next14 = 1\n        var next15 = 1\n        var next16 = 1\n        var next17 = 1\n        var next18 = 1\n        var next19 = 1\n        var next20 = 1\n        var next21 = 1\n        var next22 = 1\n        var next23 = 1\n        var next24 = 1\n        var next25 = 1\n        var next26 = 1\n        var next27 = 1\n        var next28 = 1\n        var next29 = 1\n        var next30 = 1\n        var next31 = 1\n        var next32 = 1\n        var next33 = 1\n        var next34 = 1\n        var next35 = 1\n        var next36 = 1\n        var next37 = 1\n        var next38 = 1\n        var next39 = 1\n        var next40 = 1\n        var next41 = 1\n        var next42 = 1\n        var next43 = 1\n        var next44 = 1\n        var next45 = 1\n        var next46 = 1\n        var next47 = 1\n        var next48 = 1\n        var next49 = 1\n        var next50 = 1\n        var next51 = 1\n        var next52 = 1\n        var next53 = 1\n        var next54 = 1\n        var next55 = 1\n        var next56 = 1\n        var next57 = 1\n        var next58 = 1\n        var next59 = 1\n        var next60 = 1\n        var next61 = 1\n        var next62 = 1\n        var next63 = 1\n        var next64 = 1\n        var next65 = 1\n        var next66 = 1\n        var next67 = 1\n        var next68 = 1\n        var next69 = 1\n        var next70 = 1\n        var next71 = 1\n        var next72 = 1\n        var next73 = 1\n        var next74 = 1\n        var next75 = 1\n        var next76 = 1\n        var next77 = 1\n        var next78 = 1\n        var next79 = 1\n        var next80 = 1\n        var next81 = 1\n        var next82 = 1\n        var next83 = 1\n        var next84 = 1\n        var next85 = 1\n        var next86 = 1\n        var next87 = 1\n        var next88 = 1\n        var next89 = 1\n        var next90 = 1\n        var next91 = 1\n        var next92 = 1\n        var next93 = 1\n        var next94 = 1\n        var next95 = 1\n        var next96 = 1\n        var \n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjeohzmyg.scala:105:11 --------------------------\u001b[0m\u001b[0m\n\u001b[31m105 |\u001b[0m        \u001b[33mvar\u001b[0m \n\u001b[31m\u001b[31m    |\u001b[0m           ^\u001b[0m\n\u001b[31m    |\u001b[0m           pattern expected\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjeohzmyg.scala:106:5 --------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m    }\n\u001b[31m\u001b[31m    |\u001b[0m     ^\u001b[0m\n\u001b[31m    |\u001b[0m     Found:    Unit\n\u001b[31m    |\u001b[0m     Required: Long\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.ArrayBuffer.empty[Long]\n        val zeroes = mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n            val digit = i / 10\n            if (digits.contains(digit)) {\n                val count = counts(digit)\n                if (count == 0) {\n                    counts(digit) = i + 1\n                    ones += digit\n                } else {\n                    counts(digit) = count + 1\n                    zeroes += digit\n                }\n            }\n        }\n        val oneCount = counts.filter(_._1 == 1).size\n        val zeroCount = counts.filter(_._1 == 0).size\n        val total = oneCount + zeroCount\n        if (oneCount == 0) {\n            oneCount += 1\n        }\n        if (zeroCount == 0) {\n            zeroCount += 1\n        }\n        total + oneCount + zeroCount\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84ue4ler.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap.empty[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84ue4ler.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84ue4ler.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeroes\u001b[0m = mutable.ArrayBuffer.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ue4ler.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84ue4ler.scala:12:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (digits.contains(digit)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: digits\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val zeros = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val zerosCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val zerosCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val zerosCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val zerosCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val zerosCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val zerosCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val zerosCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val zerosCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val zerosCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val zerosCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val zerosCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val zerosCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val zerosCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val zerosCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val zerosCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val zerosCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc99gdogo.scala:12:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzerosC",
      "stdout": "",
      "timestamp": 1659976197
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        val onesCount2 = mutable.ListBuffer[Long]()\n        val onesCount3 = mutable.ListBuffer[Long]()\n        val onesCount4 = mutable.ListBuffer[Long]()\n        val onesCount5 = mutable.ListBuffer[Long]()\n        val onesCount6 = mutable.ListBuffer[Long]()\n        val onesCount7 = mutable.ListBuffer[Long]()\n        val onesCount8 = mutable.ListBuffer[Long]()\n        val onesCount9 = mutable.ListBuffer[Long]()\n        val onesCount10 = mutable.ListBuffer[Long]()\n        val onesCount11 = mutable.ListBuffer[Long]()\n        val onesCount12 = mutable.ListBuffer[Long]()\n        val onesCount13 = mutable.ListBuffer[Long]()\n        val onesCount14 = mutable.ListBuffer[Long]()\n        val onesCount15 = mutable.ListBuffer[Long]()\n        val onesCount16 = mutable.ListBuffer[Long]()\n        val onesCount17 = mutable.ListBuffer[Long]()\n        val onesCount18 = mutable.ListBuffer[Long]()\n        val onesCount19 = mutable.ListBuffer[Long]()\n        val onesCount20 = mutable.ListBuffer[Long]()\n        val onesCount21 = mutable.ListBuffer[Long]()\n        val onesCount22 = mutable.ListBuffer[Long]()\n        val onesCount23 = mutable.ListBuffer[Long]()\n        val onesCount24 = mutable.ListBuffer[Long]()\n        val onesCount25 = mutable.ListBuffer[Long]()\n        val onesCount26 = mutable.ListBuffer[Long]()\n        val onesCount27 = mutable.ListBuffer[Long]()\n        val onesCount28 = mutable.ListBuffer[Long]()\n        val onesCount29 = mutable.ListBuffer[Long]()\n        val onesCount30 = mutable.ListBuffer[Long]()\n        val onesCount31 = mutable.ListBuffer[Long]()\n        val onesCount32 = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:9:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount2\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:10:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount3\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount4\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_85r8lvj.scala:12:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b",
      "stdout": "",
      "timestamp": 1659798551
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        val ones = Vector.fill(n / 10)(1)\n        val zeros = Vector.fill(n / 10)(0)\n        val onesZeros = Vector.fill(n / 10)(1)(0)\n        val onesZeroOnes = Vector.fill(n / 10)(1)(0)(1)\n        val onesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)\n        val onesZeroOnesZeroOnes = Vector.fill(n / 10)(1)(0)(1)(0)(1)\n        val onesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnes = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)\n        val onesZeroOnesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnes = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnes = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnes = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeroOnesZeros = Vector.fill(n / 10)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(1)(0)(0)(0)\n        val onesZeroOnesZeroOnesZeroOnesZeroOnes\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw4wo59i8.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw4wo59i8.scala:8:31 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               Found:    Long\n\u001b[31m  |\u001b[0m                               Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw4wo59i8.scala:9:32 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    Long\n\u001b[31m  |\u001b[0m                                Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw4wo59i8.scala:10:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeros\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m1\u001b[0m)(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Found:    Long\n\u001b[31m   |\u001b[0m                                    Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw4wo59i8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesZeroOnes\u001b[0m = Vector.fill(n / \u001b[31m10\u001b[0m)(\u001b[31m1\u001b[0m)(\u001b[31m0\u001b[0m)(\u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    Long\n\u001b[31m   |\u001b[0m                                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanatio",
      "stdout": "",
      "timestamp": 1659976233
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val ones = mutable.ListBuffer[Long]()\n        val onesCount = mutable.ListBuffer[Long]()\n        var i = n\n        while(i != 0) {\n            ones += i\n            onesCount += i\n            i /= 10\n        }\n        val onesSet = onesCount.toSet\n        val onesSetSize = onesSet.size\n        val onesSetIterator = onesSet.iterator\n        while(onesSetIterator.hasNext) {\n            val onesSetElement = onesSetIterator.next\n            if(onesSetElement == 1) {\n                onesSetIterator.remove\n                onesSetSize -= 1\n            }\n        }\n        onesSetSize\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpftr2stri.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpftr2stri.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36monesCount\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976231
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long, Long]\n        val ones = mutable.HashSet.empty[Long]\n        val zeros = mutable.HashSet.empty[Long]\n        for (i <- 1 to n) {\n            val digit = i / Math.pow(10, n.toInt)\n            if (digits.contains(digit)) {\n                counts(digit) += 1\n                if (digits == 1) {\n                    ones += digit\n                } else {\n                    zeros += digit\n                }\n            }\n        }\n        counts.toSeq.foldLeft(0L) { (acc, x) => acc + x }\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tlene4x.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mcounts\u001b[0m = mutable.HashMap.empty[\u001b[35mLong\u001b[0m, \u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tlene4x.scala:8:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mones\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tlene4x.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mzeros\u001b[0m = mutable.HashSet.empty[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: mutable\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tlene4x.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tlene4x.scala:12:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (digits.contains(digit)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: digits\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8tlene4x.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                \u001b[33mif\u001b[0m (digits == \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31",
      "stdout": "",
      "timestamp": 1659976232
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a positive integer n, return the count of the numbers of n-digit\n    // positive integers that start or end with 1.\n    def startsOneEnds(n : Long) : Long = {\n        var count = 0\n        var last = 1\n        var next = 1\n        while(n > 0) {\n            count += 1\n            next *= 10\n            next += n % 10\n            n /= 10\n        }\n        while(last != next) {\n            count += 1\n            last /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(startsOneEnds((1l)) == (1l));\n    assert(startsOneEnds((2l)) == (18l));\n    assert(startsOneEnds((3l)) == (180l));\n    assert(startsOneEnds((4l)) == (1800l));\n    assert(startsOneEnds((5l)) == (18000l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkpw0kbyn.scala:13:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            next += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkpw0kbyn.scala:14:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            n /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean n.!=?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659976233
    }
  ]
}
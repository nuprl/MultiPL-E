{
  "name": "mbpp_127_multiply_int",
  "language": "go_test.go",
  "prompt": "package multiply_int_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to multiply two integers.\nfunc multiply_int(x int, y int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "reworded",
  "tests": "func TestMultiply_Int(t *testing.T) {\n  candidate := multiply_int\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(10, 20), expected: 200 },\n     { actual: candidate(5, 10), expected: 50 },\n     { actual: candidate(4, 8), expected: 32 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    if x == 0 || y == 0 {\n        return 0\n    }\n\n    if x == 1 {\n        return y\n    }\n\n    if y == 1 {\n        return x\n    }\n\n    return x + multiply_int(x, y-1)\n}\n",
    "    return x * y\n}\n",
    "    if x == 0 || y == 0 {\n        return 0\n    }\n\n    if x < 0 && y < 0 {\n        return multiply_int(-x, -y)\n    }\n\n    if x < 0 {\n        return -multiply_int(-x, y)\n    }\n\n    if y < 0 {\n        return -multiply_int(x, -y)\n    }\n\n    if y == 1 {\n        return x\n    }\n\n    return x + multiply_int(x, y - 1)\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    if x == 0 || y == 0 {\n        return 0\n    }\n\n    if x < 0 && y < 0 {\n        return multiply_int(-x, -y)\n    }\n\n    if x < 0 {\n        return -multiply_int(-x, y)\n    }\n\n    if y < 0 {\n        return -multiply_int(x, -y)\n    }\n\n    if y == 1 {\n        return x\n    }\n\n    return x + multiply_int(x, y - 1)\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    if x == 0 || y == 0 {\n        return 0\n    }\n    if x == 1 {\n        return y\n    }\n    if y == 1 {\n        return x\n    }\n    return x + multiply_int(x, y - 1)\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n",
    "    return x * y\n}\n"
  ]
}
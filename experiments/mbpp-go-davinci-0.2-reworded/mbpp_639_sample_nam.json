{
  "name": "mbpp_639_sample_nam",
  "language": "go_test.go",
  "prompt": "package sample_nam_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunc sample_nam(sample_names []string) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSample_Nam(t *testing.T) {\n  candidate := sample_nam\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]string{\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"}), expected: 16 },\n     { actual: candidate([]string{\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"}), expected: 10 },\n     { actual: candidate([]string{\"abcd\", \"Python\", \"abba\", \"aba\"}), expected: 6 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'a' && name[0] <= 'z' {\n            continue\n        }\n        sum += len(name)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, name := range sample_names {\n        if name[0] >= 'A' && name[0] <= 'Z' {\n            sum += len(name)\n        }\n    }\n    return sum\n}\n"
  ]
}
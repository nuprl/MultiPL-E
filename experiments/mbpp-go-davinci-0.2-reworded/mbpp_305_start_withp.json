{
  "name": "mbpp_305_start_withp",
  "language": "go_test.go",
  "prompt": "package start_withp_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to return two words from a list of words starting with letter 'p'.\nfunc start_withp(words []string) []interface{} {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "reworded",
  "tests": "func TestStart_Withp(t *testing.T) {\n  candidate := start_withp\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]string{\"Python PHP\", \"Java JavaScript\", \"c c++\"}), expected: []interface{}{\"Python\", \"PHP\"} },\n     { actual: candidate([]string{\"Python Programming\", \"Java Programming\"}), expected: []interface{}{\"Python\", \"Programming\"} },\n     { actual: candidate([]string{\"Pqrst Pqr\", \"qrstuv\"}), expected: []interface{}{\"Pqrst\", \"Pqr\"} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n        if len(result) == 2 {\n            return result\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n        if len(result) == 2 {\n            break\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    result := make([]interface{}, 0)\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, v := range words {\n        if v[0] == 'p' {\n            result = append(result, v)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n        if len(result) == 2 {\n            break\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n            if len(result) == 2 {\n                break\n            }\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    return filter(words, func(word string) bool {\n        return word[0] == 'p'\n    })\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n",
    "    var result []interface{}\n    for _, word := range words {\n        if word[0] == 'p' {\n            result = append(result, word)\n        }\n    }\n    return result\n}\n"
  ]
}
{
  "name": "mbpp_172_count_occurance",
  "language": "go_test.go",
  "prompt": "package count_occurance_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to count the number of occurence of the string 'std' in a given string.\nfunc count_occurance(s string) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "reworded",
  "tests": "func TestCount_Occurance(t *testing.T) {\n  candidate := count_occurance\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"letstdlenstdporstd\"), expected: 3 },\n     { actual: candidate(\"truststdsolensporsd\"), expected: 1 },\n     { actual: candidate(\"makestdsostdworthit\"), expected: 2 },\n     { actual: candidate(\"stds\"), expected: 1 },\n     { actual: candidate(\"\"), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+2 < len(s) {\n                if s[i+1] == 't' && s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if s[i+1] == 't' {\n                if s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if s[i+1] == 't' {\n                if s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+2 < len(s) {\n                if s[i+1] == 't' && s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s) - 2; i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if s[i+1] == 't' {\n                if s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+2 < len(s) {\n                if s[i+1] == 't' && s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if s[i+1] == 't' {\n                if s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s) - 2; i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s) - 2; i++ {\n        if s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s)-2; i++ {\n        if s[i:i+3] == \"std\" {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s) - 2; i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+2 < len(s) && s[i+1] == 't' && s[i+2] == 'd' {\n                count++\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+3 < len(s) {\n                if s[i+1] == 't' && s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    var count int\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if s[i+1] == 't' {\n                if s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if i + 2 < len(s) && s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s) - 2; i++ {\n        if s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd' {\n            count++\n        }\n    }\n    return count\n}\n",
    "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 's' {\n            if i+2 < len(s) {\n                if s[i+1] == 't' && s[i+2] == 'd' {\n                    count++\n                }\n            }\n        }\n    }\n    return count\n}\n"
  ]
}
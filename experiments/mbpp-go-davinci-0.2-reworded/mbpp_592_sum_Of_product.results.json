{
  "name": "mbpp_592_sum_Of_product",
  "language": "go_test.go",
  "prompt": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcxgunm3n_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5vg2j_pb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcvipu02u_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpioic6f2b_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpioic6f2b_test.go:31: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n + sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpm4bhjoo9_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpm4bhjoo9_test.go:31: expected '%!s(int=56)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5vg2j_pb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5vg2j_pb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9_hgp17_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfl0inwst_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpfl0inwst_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnk1_p7qt_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        for j := 0; j < n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpl3kz01ha_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiscyahdm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9_hgp17_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var product int = 1\n    for i := 1; i <= n; i++ {\n        product = product * (n - i + 1) / i\n        sum = sum + product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpegeff9j7_test.go:34: expected '%!s(int=15)', got '%!s(int=7)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpegeff9j7_test.go:34: expected '%!s(int=56)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0h5in_rj_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    var product int = 1\n    var i int = 1\n    for i <= n {\n        product = product * (n - i + 1) / i\n        sum = sum + product\n        i = i + 1\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpgz1w64kd_test.go:36: expected '%!s(int=15)', got '%!s(int=7)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpgz1w64kd_test.go:36: expected '%!s(int=56)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmptyfoabzc_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp1unqqy64_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return n * sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp_1z2tbn9_test.go:34: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp_1z2tbn9_test.go:34: expected '%!s(int=56)', got '%!s(int=24)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppvq7q3a__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += nCr(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprpz_vz60_test.go:12:16: undefined: nCr\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += factorial(n) / (factorial(i) * factorial(n - i))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpa1klymp8_test.go:12:16: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (factorial(n) / (factorial(i) * factorial(n-i)))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpau05upnc_test.go:12:17: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // nC0 + nC1 + nC2 + nC3 + nC4 + nC5 + nC6 + nC7 + nC8 + nC9 + nC10\n    // nC0 * nC1 + nC1 * nC2 + nC2 * nC3 + nC3 * nC4 + nC4 * nC5 + nC5 * nC6 + nC6 * nC7 + nC7 * nC8 + nC8 * nC9 + nC9 * nC10\n    // nC0 * nC1 * nC2 + nC1 * nC2 * nC3 + nC2 * nC3 * nC4 + nC3 * nC4 * nC5 + nC4 * nC5 * nC6 + nC5 * nC6 * nC7 + nC6 * nC7 * nC8 + nC7 * nC8 * nC9 + nC8 * nC9 * nC10\n    // nC0 * nC1 * nC2 * nC3 + nC1 * nC2 * nC3 * nC4 + nC2 * nC3 * nC4 * nC5 + nC3 * nC4 * nC5 * nC6 + nC4 * nC5 * nC6 * nC7 + nC5 * nC6 * nC7 * nC8 + nC6 * nC7 * nC8 * nC9 + nC7 * nC8 * nC9 * nC10\n    // nC0 * nC1 * nC2 * nC3 * nC4 + nC1 * nC2 * nC3 * nC4 * nC5 + nC2 * nC3 * nC4 * nC5 * nC6 + nC3 * nC4 * nC5 * nC6 * nC7 + nC4 * nC5 * nC6 * nC7 * nC8 + nC5 * nC6 * nC7 * nC8 * nC9 + nC6 * nC7 * nC8 * nC9 * nC10\n   \nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123384,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmplt390958_test.go:16:6: expected '(', found TestSum_Of_Product\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcvipu02u_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbjnhzmnh_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpojoyv19g_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr1ch9jlv_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp99o2uyr0_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4hav8p60_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiscyahdm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpcqkwowfl_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp99o2uyr0_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9k1hg145_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial(n, i) * binomial(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2zr221qs_test.go:12:16: undefined: binomial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (factorial(n) / (factorial(i) * factorial(n - i)))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpae3p6sw__test.go:12:17: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += (factorial(n) / (factorial(i) * factorial(n - i)))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp0yr1ny0m_test.go:12:17: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmphu2dwjnh_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    var product int\n    for i := 1; i <= n; i++ {\n        product = 1\n        for j := 1; j <= i; j++ {\n            product *= j\n        }\n        sum += product\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpxwfsa6em_test.go:37: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpxwfsa6em_test.go:37: expected '%!s(int=56)', got '%!s(int=33)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i:=0; i<n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpe2yo6p2m_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (factorial(n) / (factorial(i) * factorial(n - i)))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpae3p6sw__test.go:12:17: undefined: factorial\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpmbh64zj8_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9_hgp17_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j) * binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpra8duq11_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (n - i) * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp2v1alavl_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp2v1alavl_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiscyahdm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // The binomial co-efficient C(n, k) can be calculated using the following formula:\n    // C(n, k) = n! / (k! * (n - k)!)\n    // where n! = n * (n - 1) * (n - 2) * ... * 1\n    // and k! = k * (k - 1) * (k - 2) * ... * 1\n    // For example, C(4, 2) = 4! / (2! * (4 - 2)!) = 6\n    // C(4, 2) = 4 * 3 * 2 * 1 / (2 * 1 * 2 * 1) = 6\n    // C(4, 2) = 6\n    // C(4, 3) = 4! / (3! * (4 - 3)!) = 4\n    // C(4, 3) = 4 * 3 * 2 * 1 / (3 * 2 * 1 * 1) = 4\n    // C(4, 3) = 4\n    // C(4, 4) = 4! / (4! * (4 - 4)!) = 1\n    // C(4, 4) = 4 * 3 * 2 * 1 / (4 * 3 * 2 * 1 * 0) = 1\n    // C(4, 4) = 1\n    // C(4, 0) = 4! / (0! * (4 - 0)!) = 1\n    // C(4, 0) = 4 * 3 * 2 * 1 / (0 * 1 * 2 * 3 * 4) = 1\n    // C(4, 0) = 1\n    // C(4, 1) = 4! / (1! * (4 - 1)!) = 4\n    // C(4, 1) = 4 * 3 * 2 * 1 / (1 * 1 * 2 * 3) = 4\n    // C(4, 1) = 4\n    // C(4, 2) = 4! / (2! * (4 - 2)!) = 6\n    // C(4, 2) = 4 * 3 * 2 * 1 / (2 * 1 * 2 * 1) = 6\n    // C(4, 2) = 6\n    // C(4, 3) = 4! / (3! * (4 - 3\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp2d8wcs1v_test.go:33:6: expected '(', found TestSum_Of_Product\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (n - i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp5vg2j_pb_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        sum += (binomial_coefficient(n, i) * binomial_coefficient(n, i))\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4m1dal9n_test.go:12:17: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnk1_p7qt_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (n - i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += (n - i + 1) * i\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmplg67ydnz_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmplg67ydnz_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return n + sum_Of_product(n-1)\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpm4bhjoo9_test.go:31: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpm4bhjoo9_test.go:31: expected '%!s(int=56)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiscyahdm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg9wznaur_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp2n3lyu77_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9k1hg145_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += (n - i + 1) * i\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp9g_clz6o_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp9g_clz6o_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i-1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpiscyahdm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg9wznaur_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp8s5fpe7p_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpg32gs81i_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd9u3s23q_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (n - i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpeyebhtad_test.go:32: expected '%!s(int=56)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmph9_hgp17_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i+1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpgu7th54b_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmp3t2x333h_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9431c7ya_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp99o2uyr0_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcvipu02u_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += product(i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpbdb0ldja_test.go:12:16: undefined: product\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += binomial_coefficient(n, i) * binomial_coefficient(n, i)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3j2d77mm_test.go:12:16: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        for j := 1; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510318,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpmk96kxb7_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= n; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123385,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppvq7q3a__test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpctro9xhl_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123386,
      "stdout": "--- FAIL: TestSum_Of_Product (0.00s)\n    --- FAIL: TestSum_Of_Product/test_num__0 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=15)', got '%!s(int=20)'\n    --- FAIL: TestSum_Of_Product/test_num__1 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=56)', got '%!s(int=40)'\n    --- FAIL: TestSum_Of_Product/test_num__2 (0.00s)\n        tmpg9evmpkv_test.go:32: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package sum_Of_product_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of the product of consecutive binomial co-efficients.\nfunc sum_Of_product(n int) int {\n    var sum int = 0\n    for i := 0; i <= n; i++ {\n        for j := 0; j <= i; j++ {\n            sum += binomial_coefficient(i, j)\n        }\n    }\n    return sum\n}\n\nfunc TestSum_Of_Product(t *testing.T) {\n  candidate := sum_Of_product\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 15 },\n     { actual: candidate(4), expected: 56 },\n     { actual: candidate(1), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123387,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpctro9xhl_test.go:13:20: undefined: binomial_coefficient\n",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
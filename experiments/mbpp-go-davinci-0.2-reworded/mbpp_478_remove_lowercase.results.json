{
  "name": "mbpp_478_remove_lowercase",
  "language": "go_test.go",
  "prompt": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "func TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if str1[i] >= 'A' && str1[i] <= 'Z' {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 = str2 + string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 65 && char <= 90 {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 65 && c <= 90 {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, ch := range str1 {\n        if ch >= 'A' && ch <= 'Z' {\n            str2 += string(ch)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    str2 := \"\"\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, ch := range str1 {\n        if ch >= 'A' && ch <= 'Z' {\n            result += string(ch)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 = str2 + string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for i := 0; i < len(str1); i++ {\n        if str1[i] >= 'A' && str1[i] <= 'Z' {\n            str2 += string(str1[i])\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, ch := range str1 {\n        if ch >= 'A' && ch <= 'Z' {\n            str2 += string(ch)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, ch := range str1 {\n        if ch >= 'A' && ch <= 'Z' {\n            str2 += string(ch)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 65 && char <= 90 {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, v := range str1 {\n        if v >= 'A' && v <= 'Z' {\n            str2 += string(v)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, c := range str1 {\n        if c >= 'A' && c <= 'Z' {\n            str2 += string(c)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var str2 string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            str2 += string(char)\n        }\n    }\n    return str2\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509679,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package remove_lowercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to remove lowercase substrings from a given string.\nfunc remove_lowercase(str1 string) string {\n    var result string\n    for _, char := range str1 {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Lowercase(t *testing.T) {\n  candidate := remove_lowercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"PYTHon\"), expected: \"PYTH\" },\n     { actual: candidate(\"FInD\"), expected: \"FID\" },\n     { actual: candidate(\"STRinG\"), expected: \"STRG\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123922,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_763_find_min_diff",
  "language": "go_test.go",
  "prompt": "package find_min_diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the minimum difference between any two elements in a given list. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfunc find_min_diff(arr []interface{}, n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "reworded",
  "tests": "func TestFind_Min_Diff(t *testing.T) {\n  candidate := find_min_diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{1, 5, 3, 19, 18, 25}, 6), expected: 1 },\n     { actual: candidate([]interface{}{4, 3, 2, 6}, 4), expected: 1 },\n     { actual: candidate([]interface{}{30, 5, 20, 9}, 4), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, 0, n-1)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < diff {\n            diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = sort(arr)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1] - arr[i] < diff {\n            diff = arr[i+1] - arr[i]\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array in ascending order\n    sort(arr, 0, n-1)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = insertion_sort(arr)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    arr = sort(arr)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i-1].(int)) < diff {\n            diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1] - arr[i] < diff {\n            diff = arr[i + 1] - arr[i]\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    sort(arr, n)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i - 1].(int)) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    var min_diff int\n    var i, j int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i = 0; i < n; i++ {\n        for j = i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n \n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n \n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    sort(arr, n)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    if n == 0 || n == 1 {\n        return 0\n    }\n    arr_int := make([]int, n)\n    for i := 0; i < n; i++ {\n        arr_int[i] = arr[i].(int)\n    }\n    sort(arr_int, 0, n-1)\n    min_diff := arr_int[1] - arr_int[0]\n    for i := 2; i < n; i++ {\n        if arr_int[i] - arr_int[i-1] < min_diff {\n            min_diff = arr_int[i] - arr_int[i-1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n\n    // Find the min diff by comparing difference\n    // of all pairs in given array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int\n    var diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            diff = arr[j].(int) - arr[i].(int)\n            if diff < min_diff {\n                min_diff = diff\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i-1].(int)) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, 0, n-1)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    if n == 0 || n == 1 {\n        return 0\n    }\n    // Sort array elements\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    // Initialize difference as infinite\n    // Find the min diff by comparing adjacent pairs in sorted array\n    return 0\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    if n == 0 || n == 1 {\n        return 0\n    }\n    sort(arr, n)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i-1] < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    arr = quick_sort(arr, 0, n-1)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // max int\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // swap\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int\n    min_diff = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array in ascending order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i] > arr[j] {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1] - arr[i] < min_diff {\n            min_diff = arr[i + 1] - arr[i]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[n-1].(int) - arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    if n < 2 {\n        return 0\n    }\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference between any two elements in the sorted array\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    var min_diff int\n    for i := 0; i < n-1; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[i] > arr[j] {\n                min_diff = arr[i] - arr[j]\n            } else {\n                min_diff = arr[j] - arr[i]\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[n-1].(int)) - int(arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if int(arr[i+1].(int)) - int(arr[i].(int)) < diff {\n            diff = int(arr[i+1].(int)) - int(arr[i].(int))\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference between any two elements in the sorted array\n    return 0\n}\n",
    "    // Sort the array\n    // Initialize difference as infinite\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    return 0\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i-1].(int)) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := 999999999\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference by comparing adjacent pairs in sorted array.\n    var minDiff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < minDiff {\n            minDiff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return minDiff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // swap\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    arr = sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n \n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n \n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // Swap if greater is at the rear position\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 999999999\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = sort(arr)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[n - 1].(int)) - int(arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if int(arr[i + 1].(int)) - int(arr[i].(int)) < diff {\n            diff = int(arr[i + 1].(int)) - int(arr[i].(int))\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    // Initialize difference as infinite\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[n-1].(int)) - int(arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if int(arr[i+1].(int)) - int(arr[i].(int)) < diff {\n            diff = int(arr[i+1].(int)) - int(arr[i].(int))\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference by comparing adjacent pairs in sorted array.\n    // Return the minimum difference.\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[1].(int) - arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if int(arr[i + 1].(int) - arr[i].(int)) < diff {\n            diff = int(arr[i + 1].(int) - arr[i].(int))\n        }\n    }\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := int(arr[n - 1].(int)) - int(arr[0].(int))\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if int(arr[i + 1].(int)) - int(arr[i].(int)) < diff {\n            diff = int(arr[i + 1].(int)) - int(arr[i].(int))\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                temp := arr[j]\n                arr[j] = arr[j+1]\n                arr[j+1] = temp\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1] - arr[i] < diff {\n            diff = arr[i+1] - arr[i]\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := arr[1] - arr[0]\n\n    // Find the min diff by comparing difference\n    // of all pairs in given array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1] - arr[i] < diff {\n            diff = arr[i+1] - arr[i]\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var i, j int\n    var min int\n    min = arr[1].(int) - arr[0].(int)\n    for i = 0; i < n-1; i++ {\n        for j = i+1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min {\n                min = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min\n}\n",
    "    // Sort the array\n    // Find the minimum difference between any two elements in a given list.\n    // return the minimum difference\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min {\n            min = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, 0, n-1)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = sort_arr(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i-1] < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference between any two elements in the sorted array\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference by comparing adjacent pairs in sorted array.\n    return 0\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 999999999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference by comparing adjacent pairs in sorted array.\n    return 0\n}\n",
    "    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if diff > arr[i+1].(int)-arr[i].(int) {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i - 1].(int)) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if (arr[i] - arr[i-1]) < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1] - arr[i] < min_diff {\n            min_diff = arr[i + 1] - arr[i]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := int(arr[1].(int) - arr[0].(int))\n    for i := 0; i < n-1; i++ {\n        if int(arr[i+1].(int) - arr[i].(int)) < diff {\n            diff = int(arr[i+1].(int) - arr[i].(int))\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                temp := arr[j]\n                arr[j] = arr[j+1]\n                arr[j+1] = temp\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i-1].(int)) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j].(int) > arr[j + 1].(int) {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    if n == 0 || n == 1 {\n        return 0\n    }\n\n    // Sort array elements\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    sort(arr, n)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    // Initialize difference as infinite\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    return 0\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := 99999\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if (arr[i].(int) - arr[i-1].(int)) < diff {\n            diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                temp := arr[j]\n                arr[j] = arr[j+1]\n                arr[j+1] = temp\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(arr[n-1].(int)) - int(arr[0].(int))\n\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if int(arr[i+1].(int)) - int(arr[i].(int)) < diff {\n            diff = int(arr[i+1].(int)) - int(arr[i].(int))\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr)\n\n    // Initialize difference as infinite\n    diff := 999999999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // swap\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr, 0, n-1)\n    // Initialize difference as infinite\n    min_diff := arr[1].(int) - arr[0].(int)\n    // Find the min diff by comparing adjacent pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < min_diff {\n            min_diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr, 0, n-1)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                temp := arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // swap\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n-1; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < diff {\n            diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := 0; j < n - i - 1; j++ {\n            if arr[j] > arr[j + 1] {\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min_diff {\n            min_diff = arr[i] - arr[i - 1]\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Initialize difference as infinite\n    diff := 999999999\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int)-arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n - 1; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 99999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i + 1].(int) - arr[i].(int) < diff {\n            diff = arr[i + 1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j] > arr[j+1] {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i-1] < min_diff {\n            min_diff = arr[i] - arr[i-1]\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    // Find the minimum difference between any two elements in a given list.\n    // Return the minimum difference\n    return 0\n}\n",
    "    // Sort the array\n    arr = merge_sort(arr)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    var min_diff int = arr[1].(int) - arr[0].(int)\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if (arr[j].(int) - arr[i].(int) < min_diff) {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    if n == 0 || n == 1 {\n        return 0\n    }\n\n    // Sort array elements\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 0; i < n-1; i++ {\n        for j := i+1; j < n; j++ {\n            if arr[j].(int) - arr[i].(int) < min_diff {\n                min_diff = arr[j].(int) - arr[i].(int)\n            }\n        }\n    }\n    return min_diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                // swap\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := 999999999\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i] > arr[j] {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min := arr[1] - arr[0]\n    for i := 2; i < n; i++ {\n        if arr[i] - arr[i - 1] < min {\n            min = arr[i] - arr[i - 1]\n        }\n    }\n    return min\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n - 1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, 0, n-1)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort array in non-decreasing order\n    sort(arr, n)\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1) // largest int\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int)-arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if arr[i].(int) > arr[j].(int) {\n                arr[i], arr[j] = arr[j], arr[i]\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i - 1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i - 1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    // Sort the array\n    // Initialize difference as infinite\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    return 0\n}\n",
    "    // Sort the array\n    sort(arr, n)\n\n    // Initialize difference as infinite\n    diff := int(^uint(0) >> 1)\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for i := 0; i < n-1; i++ {\n        if arr[i+1].(int) - arr[i].(int) < diff {\n            diff = arr[i+1].(int) - arr[i].(int)\n        }\n    }\n\n    // Return min diff\n    return diff\n}\n",
    "    // Sort the array\n    for i := 0; i < n; i++ {\n        for j := 0; j < n-i-1; j++ {\n            if arr[j].(int) > arr[j+1].(int) {\n                temp := arr[j]\n                arr[j] = arr[j+1]\n                arr[j+1] = temp\n            }\n        }\n    }\n\n    // Find the minimum difference\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n\n    return min_diff\n}\n",
    "    sort(arr, n)\n    min_diff := arr[1].(int) - arr[0].(int)\n    for i := 2; i < n; i++ {\n        if arr[i].(int) - arr[i-1].(int) < min_diff {\n            min_diff = arr[i].(int) - arr[i-1].(int)\n        }\n    }\n    return min_diff\n}\n"
  ]
}
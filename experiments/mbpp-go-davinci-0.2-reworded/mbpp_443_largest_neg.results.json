{
  "name": "mbpp_443_largest_neg",
  "language": "go_test.go",
  "prompt": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "reworded",
  "tests": "func TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest_neg < v {\n                largest_neg = v\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp15fcrbgb_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp15fcrbgb_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp15fcrbgb_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 && value > largest_neg {\n            largest_neg = value\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 && value > largest_neg {\n            largest_neg = value\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpa7kmbmem_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, i := range list1 {\n        if i < 0 && i > largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest_neg {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpv9ev_wx6_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, i := range list1 {\n        if i < 0 && i > largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpu6p5cvkn_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest_neg < value {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest < value {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpghh20xx9_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpghh20xx9_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpghh20xx9_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest < num {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpsmncl9d2_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp57e8m507_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, i := range list1 {\n        if i < 0 {\n            if largest < i {\n                largest = i\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpr_wdz6f2_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 {\n            if num > largest {\n                largest = num\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwtjcyysl_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 {\n            if largest_neg < num {\n                largest_neg = num\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp6qa9n34m_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp6qa9n34m_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp6qa9n34m_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, value := range list1 {\n        if value < 0 {\n            if largest_neg < value {\n                largest_neg = value\n            }\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmp8i6qpz19_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if largest < v {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpefvbebmd_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 {\n            if value > largest {\n                largest = value\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwta_7auz_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, num := range list1 {\n        if num < 0 && num > largest_neg {\n            largest_neg = num\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpwukkep7k_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, num := range list1 {\n        if num < 0 && num > largest {\n            largest = num\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpy9p1g717_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 && v > largest {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_c5gu6b_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest_neg int\n    for _, v := range list1 {\n        if v < 0 && v > largest_neg {\n            largest_neg = v\n        }\n    }\n    return largest_neg\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123072,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpetni284j_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, v := range list1 {\n        if v < 0 {\n            if v > largest {\n                largest = v\n            }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpb6vpnq7v_test.go:36: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package largest_neg_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the largest negative number from the given list.\nfunc largest_neg(list1 []int) int {\n    var largest int\n    for _, value := range list1 {\n        if value < 0 && value > largest {\n            largest = value\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Neg(t *testing.T) {\n  candidate := largest_neg\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 3, -4, -6}), expected: -6 },\n     { actual: candidate([]int{1, 2, 3, -8, -9}), expected: -9 },\n     { actual: candidate([]int{1, 2, 3, 4, -1}), expected: -1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510075,
      "stdout": "--- FAIL: TestLargest_Neg (0.00s)\n    --- FAIL: TestLargest_Neg/test_num__0 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-6)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__1 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-9)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Neg/test_num__2 (0.00s)\n        tmpe_oj1b_c_test.go:34: expected '%!s(int=-1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
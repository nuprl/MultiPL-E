{
  "name": "mbpp_63_max_difference",
  "language": "go_test.go",
  "prompt": "package max_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the maximum difference between available pairs in the given list list.\nfunc max_difference(test_list [][]interface{}) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "reworded",
  "tests": "func TestMax_Difference(t *testing.T) {\n  candidate := max_difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([][]int{[]interface{}{3, 5}, []interface{}{1, 7}, []interface{}{10, 3}, []interface{}{1, 2}}), expected: 7 },\n     { actual: candidate([][]int{[]interface{}{4, 6}, []interface{}{2, 17}, []interface{}{9, 13}, []interface{}{11, 12}}), expected: 15 },\n     { actual: candidate([][]int{[]interface{}{12, 35}, []interface{}{21, 27}, []interface{}{13, 23}, []interface{}{41, 22}}), expected: 23 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] < test_list[j][0] {\n                if test_list[j][1].(int) - test_list[i][1].(int) > max_diff {\n                    max_diff = test_list[j][1].(int) - test_list[i][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        if item[0].(int) > item[1].(int) {\n            if item[0].(int) - item[1].(int) > max_diff {\n                max_diff = item[0].(int) - item[1].(int)\n            }\n        } else {\n            if item[1].(int) - item[0].(int) > max_diff {\n                max_diff = item[1].(int) - item[0].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_difference int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list[i]); j++ {\n            for k := 0; k < len(test_list[i]); k++ {\n                if j != k {\n                    if test_list[i][j].(int) - test_list[i][k].(int) > max_difference {\n                        max_difference = test_list[i][j].(int) - test_list[i][k].(int)\n                    }\n                }\n            }\n        }\n    }\n    return max_difference\n}\n",
    "    max_diff := 0\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list); j++ {\n            if i != j {\n                if test_list[i][0].(int) < test_list[j][0].(int) {\n                    diff := test_list[j][0].(int) - test_list[i][0].(int)\n                    if diff > max_diff {\n                        max_diff = diff\n                    }\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for _, item := range test_list {\n        var diff int\n        if item[0].(int) > item[1].(int) {\n            diff = item[0].(int) - item[1].(int)\n        } else {\n            diff = item[1].(int) - item[0].(int)\n        }\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list); j++ {\n            if i != j {\n                diff := test_list[i][1].(int) - test_list[j][0].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] < test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                if test_list[j][1].(int) - test_list[i][1].(int) > max_diff {\n                    max_diff = test_list[j][1].(int) - test_list[i][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                if test_list[j][1].(int) - test_list[i][1].(int) > max_diff {\n                    max_diff = test_list[j][1].(int) - test_list[i][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                diff := test_list[j][0].(int) - test_list[i][0].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                if test_list[j][0].(int) - test_list[i][0].(int) > max_diff {\n                    max_diff = test_list[j][0].(int) - test_list[i][0].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][1].(int) > test_list[j][0].(int) {\n                continue\n            }\n            if test_list[j][0].(int) - test_list[i][1].(int) > max_diff {\n                max_diff = test_list[j][0].(int) - test_list[i][1].(int)\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                diff := test_list[j][0].(int) - test_list[i][0].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) && test_list[i][1].(int) < test_list[j][1].(int) {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int = 0\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] == test_list[j][0] {\n                continue\n            }\n            if test_list[i][1] == test_list[j][1] {\n                continue\n            }\n            diff := test_list[j][0].(int) - test_list[i][0].(int)\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                diff := test_list[j][0].(int) - test_list[i][0].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0] < test_list[j][0] {\n                diff := test_list[j][1].(int) - test_list[i][1].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := i + 1; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                diff := test_list[j][0].(int) - test_list[i][0].(int)\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i, _ := range test_list {\n        for j, _ := range test_list {\n            if i != j {\n                if test_list[i][1].(int) - test_list[j][0].(int) > max_diff {\n                    max_diff = test_list[i][1].(int) - test_list[j][0].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n",
    "    var max_diff int\n    for i := 0; i < len(test_list); i++ {\n        for j := 0; j < len(test_list); j++ {\n            if test_list[i][0].(int) < test_list[j][0].(int) {\n                if test_list[j][1].(int) - test_list[i][1].(int) > max_diff {\n                    max_diff = test_list[j][1].(int) - test_list[i][1].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n"
  ]
}
{
  "name": "mbpp_738_geometric_sum",
  "language": "go_test.go",
  "prompt": "package geometric_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/gothon-exercises/data-structures-and-algorithms/gothon-recursion-exercise-9.php\nfunc geometric_sum(n int) float64 {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestGeometric_Sum(t *testing.T) {\n  candidate := geometric_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected: 1.9921875 },\n     { actual: candidate(4), expected: 1.9375 },\n     { actual: candidate(8), expected: 1.99609375 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + geometric_sum(n-1) * 0.5\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else {\n        return 1 / float64(n) + geometric_sum(n - 1)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n-1) + 1/float64(n)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return float64(1) / float64(2) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n-1)/float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + 1.0/float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    } else {\n        return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n-1) + 1.0/float64(n)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1/float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n-1) + 1/float64(n)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n-1) + 1/float64(n)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1/float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else {\n        return 1 + float64(n) * geometric_sum(n-1)\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 1 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + float64(n) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else {\n        return 1 + float64(n) * geometric_sum(n - 1)\n    }\n}\n",
    "    if n == 1 {\n        return 1\n    } else {\n        return 1 + (1 / geometric_sum(n - 1))\n    }\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1.0 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / float64(n)) * geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n-1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    }\n    return 1 / float64(n) + geometric_sum(n - 1)\n}\n",
    "    if n == 0 {\n        return 1\n    } else {\n        return 1 / float64(n) + geometric_sum(n-1)\n    }\n}\n"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "go_test.go",
  "prompt": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "reworded",
  "tests": "func TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + (n-1)*2\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=37)', got '%!s(int=11)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=73)', got '%!s(int=17)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=121)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return -1\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp68vtjsux_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp68vtjsux_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp68vtjsux_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp435a5enu_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 13\n    }\n    return find_star_num(n-1) * 10 + 2 * find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0jxa8wni_test.go:37: expected '%!s(int=37)', got '%!s(int=132)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0jxa8wni_test.go:37: expected '%!s(int=73)', got '%!s(int=1346)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0jxa8wni_test.go:37: expected '%!s(int=121)', got '%!s(int=13724)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0ekw3p1u_test.go:34: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0ekw3p1u_test.go:34: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0ekw3p1u_test.go:34: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + (n - 1) * 2\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=37)', got '%!s(int=7)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=73)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=121)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return find_star_num(n-1) + find_star_num(n-5)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpkmlzno1v_test.go:46: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpkmlzno1v_test.go:46: expected '%!s(int=73)', got '%!s(int=4)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpkmlzno1v_test.go:46: expected '%!s(int=121)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2) + find_star_num(n - 3)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=73)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=121)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4 * (n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpsjywez73_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpsjywez73_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpsjywez73_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpffg7oxf3_test.go:34: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpffg7oxf3_test.go:34: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpffg7oxf3_test.go:34: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqkgnfmqh_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    var i, j, k, l, m, n int\n    var star_num int\n    for i = 1; i <= n; i++ {\n        for j = 1; j <= i; j++ {\n            for k = 1; k <= j; k++ {\n                for l = 1; l <= k; l++ {\n                    for m = 1; m <= l; m++ {\n                        for n = 1; n <= m; n++ {\n                            star_num++\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return star_num\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123863,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp11nsthgc_test.go:10:24: n redeclared in this block\n\tprevious declaration at /tmp/tmp11nsthgc_test.go:9:27\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=37)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=73)', got '%!s(int=10)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=121)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n\n    return n * find_star_num(n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpv5orcl7j_test.go:32: expected '%!s(int=37)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpv5orcl7j_test.go:32: expected '%!s(int=73)', got '%!s(int=24)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpv5orcl7j_test.go:32: expected '%!s(int=121)', got '%!s(int=120)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 13\n    }\n    return find_star_num(n-1) * 10 + 2 * find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpeftfraep_test.go:37: expected '%!s(int=37)', got '%!s(int=132)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpeftfraep_test.go:37: expected '%!s(int=73)', got '%!s(int=1346)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpeftfraep_test.go:37: expected '%!s(int=121)', got '%!s(int=13724)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpf5jbbcvr_test.go:32: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpf5jbbcvr_test.go:32: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpf5jbbcvr_test.go:32: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpqyuunlp7_test.go:31: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return -1\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    var star_num int = 1\n    var star_num_count int = 1\n    var star_num_index int = 1\n    var star_num_index_count int = 1\n    var star_num_index_count_max int = 1\n    for i := 2; i <= n; i++ {\n        if star_num_index_count == star_num_index_count_max {\n            star_num_index++\n            star_num_index_count = 1\n            star_num_index_count_max = star_num_index * 2\n        } else {\n            star_num_index_count++\n        }\n\n        star_num_count++\n        if star_num_count == star_num_index {\n            star_num++\n            star_num_count = 1\n        }\n    }\n\n    return star_num\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpq_hiyhyc_test.go:57: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpq_hiyhyc_test.go:57: expected '%!s(int=73)', got '%!s(int=4)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpq_hiyhyc_test.go:57: expected '%!s(int=121)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 6 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=37)', got '%!s(int=19)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=73)', got '%!s(int=37)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=121)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4 * (n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp_3udrk25_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp_3udrk25_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp_3udrk25_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + (n - 1) * 2\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=37)', got '%!s(int=7)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=73)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvcwzczwd_test.go:31: expected '%!s(int=121)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    return find_star_num(n-1) + find_star_num(n-2) + find_star_num(n-3)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmph0au2kos_test.go:40: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmph0au2kos_test.go:40: expected '%!s(int=73)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmph0au2kos_test.go:40: expected '%!s(int=121)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 6 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=37)', got '%!s(int=19)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=73)', got '%!s(int=37)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=121)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1)*10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpu6aidnv4_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpu6aidnv4_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpu6aidnv4_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 6\n    }\n    if n == 7 {\n        return 7\n    }\n    if n == 8 {\n        return 8\n    }\n    if n == 9 {\n        return 9\n    }\n    if n == 10 {\n        return 10\n    }\n    if n == 11 {\n        return 11\n    }\n    if n == 12 {\n        return 12\n    }\n    if n == 13 {\n        return 13\n    }\n    if n == 14 {\n        return 14\n    }\n    if n == 15 {\n        return 15\n    }\n    if n == 16 {\n        return 16\n    }\n    if n == 17 {\n        return 17\n    }\n    if n == 18 {\n        return 18\n    }\n    if n == 19 {\n        return 19\n    }\n    if n == 20 {\n        return 20\n    }\n    if n == 21 {\n        return 21\n    }\n    if n == 22 {\n        return 22\n    }\n    if n == 23 {\n        return 23\n    }\n    if n == 24 {\n        return 24\n    }\n    if n == 25 {\n        return 25\n    }\n    if n == 26 {\n        return 26\n    }\n    if n == 27 {\n        return 27\n    }\n    if n == 28 {\n        return 28\n    }\n    if n == 29 {\n        return 29\n    }\n    if n == 30 {\n        return 30\n    }\n    if n == 31 {\n        return 31\n    }\n    if n == 32 {\n        return 32\n    }\n    if n == 33 {\n        return 33\n    }\n    if n == 34 {\n        return 34\n    }\n    if n == 35 {\n        return 35\n    }\n    if n == 36 {\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmph05ang96_test.go:120:6: expected '(', found TestFind_Star_Num\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) * 10 + 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpu7_q1iq5_test.go:31: expected '%!s(int=37)', got '%!s(int=111)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpu7_q1iq5_test.go:31: expected '%!s(int=73)', got '%!s(int=1111)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpu7_q1iq5_test.go:31: expected '%!s(int=121)', got '%!s(int=11111)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 2\n    }\n\n    if n == 3 {\n        return 3\n    }\n\n    return find_star_num(n - 1) + find_star_num(n - 2) + find_star_num(n - 3)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7r2jx_1o_test.go:44: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7r2jx_1o_test.go:44: expected '%!s(int=73)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7r2jx_1o_test.go:44: expected '%!s(int=121)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0g0w00jo_test.go:32: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp5xf2tj4q_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 6\n    }\n    if n == 7 {\n        return 7\n    }\n    if n == 8 {\n        return 8\n    }\n    if n == 9 {\n        return 9\n    }\n    if n == 10 {\n        return 10\n    }\n    if n == 11 {\n        return 11\n    }\n    if n == 12 {\n        return 12\n    }\n    if n == 13 {\n        return 13\n    }\n    if n == 14 {\n        return 14\n    }\n    if n == 15 {\n        return 15\n    }\n    if n == 16 {\n        return 16\n    }\n    if n == 17 {\n        return 17\n    }\n    if n == 18 {\n        return 18\n    }\n    if n == 19 {\n        return 19\n    }\n    if n == 20 {\n        return 20\n    }\n    if n == 21 {\n        return 21\n    }\n    if n == 22 {\n        return 22\n    }\n    if n == 23 {\n        return 23\n    }\n    if n == 24 {\n        return 24\n    }\n    if n == 25 {\n        return 25\n    }\n    if n == 26 {\n        return 26\n    }\n    if n == 27 {\n        return 27\n    }\n    if n == 28 {\n        return 28\n    }\n    if n == 29 {\n        return 29\n    }\n    if n == 30 {\n        return 30\n    }\n    if n == 31 {\n        return 31\n    }\n    if n == 32 {\n        return 32\n    }\n    if n == 33 {\n        return 33\n    }\n    if n == 34 {\n        return 34\n    }\n    if n == 35 {\n        return 35\n    }\n    if n == 36 {\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmph05ang96_test.go:120:6: expected '(', found TestFind_Star_Num\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + (n-1)*2\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=37)', got '%!s(int=11)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=73)', got '%!s(int=17)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp0ndx6_ps_test.go:31: expected '%!s(int=121)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=37)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=73)', got '%!s(int=10)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpjb9i34n2_test.go:31: expected '%!s(int=121)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp6hpkxpk6_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2) + find_star_num(n - 3)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=73)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpcnrq5stl_test.go:40: expected '%!s(int=121)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpro7rwcx__test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpgtsteg2f_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 6 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=37)', got '%!s(int=19)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=73)', got '%!s(int=37)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=121)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) + (n - 1) * 2\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpnj7e0lod_test.go:32: expected '%!s(int=37)', got '%!s(int=11)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpnj7e0lod_test.go:32: expected '%!s(int=73)', got '%!s(int=17)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpnj7e0lod_test.go:32: expected '%!s(int=121)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n - 1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3pi6utmc_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp7fqzx3w9_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvn940bde_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp1gw9umsr_test.go:31: expected '%!s(int=37)', got '%!s(int=11)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp1gw9umsr_test.go:31: expected '%!s(int=73)', got '%!s(int=17)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp1gw9umsr_test.go:31: expected '%!s(int=121)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    return find_star_num(n-1) + find_star_num(n-2) + find_star_num(n-3)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp_523bmdi_test.go:40: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp_523bmdi_test.go:40: expected '%!s(int=73)', got '%!s(int=6)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp_523bmdi_test.go:40: expected '%!s(int=121)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n - 1) + find_star_num(n - 2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpmsdx3ubp_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 6 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=37)', got '%!s(int=19)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=73)', got '%!s(int=37)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=121)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return -1\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    if n == 2 {\n        return 13\n    }\n\n    return find_star_num(n-1) + 10 * find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpvdnmfjsy_test.go:40: expected '%!s(int=37)', got '%!s(int=23)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpvdnmfjsy_test.go:40: expected '%!s(int=73)', got '%!s(int=153)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpvdnmfjsy_test.go:40: expected '%!s(int=121)', got '%!s(int=383)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 6\n    }\n    if n == 7 {\n        return 7\n    }\n    if n == 8 {\n        return 8\n    }\n    if n == 9 {\n        return 9\n    }\n    if n == 10 {\n        return 10\n    }\n    if n == 11 {\n        return 11\n    }\n    if n == 12 {\n        return 12\n    }\n    if n == 13 {\n        return 13\n    }\n    if n == 14 {\n        return 14\n    }\n    if n == 15 {\n        return 15\n    }\n    if n == 16 {\n        return 16\n    }\n    if n == 17 {\n        return 17\n    }\n    if n == 18 {\n        return 18\n    }\n    if n == 19 {\n        return 19\n    }\n    if n == 20 {\n        return 20\n    }\n    if n == 21 {\n        return 21\n    }\n    if n == 22 {\n        return 22\n    }\n    if n == 23 {\n        return 23\n    }\n    if n == 24 {\n        return 24\n    }\n    if n == 25 {\n        return 25\n    }\n    if n == 26 {\n        return 26\n    }\n    if n == 27 {\n        return 27\n    }\n    if n == 28 {\n        return 28\n    }\n    if n == 29 {\n        return 29\n    }\n    if n == 30 {\n        return 30\n    }\n    if n == 31 {\n        return 31\n    }\n    if n == 32 {\n        return 32\n    }\n    if n == 33 {\n        return 33\n    }\n    if n == 34 {\n        return 34\n    }\n    if n == 35 {\n        return 35\n    }\n    if n == 36 {\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmph05ang96_test.go:120:6: expected '(', found TestFind_Star_Num\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n\n    return find_star_num(n - 1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpbonjik9z_test.go:32: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2 * (n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpo6r9j1ze_test.go:31: expected '%!s(int=37)', got '%!s(int=11)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpo6r9j1ze_test.go:31: expected '%!s(int=73)', got '%!s(int=17)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpo6r9j1ze_test.go:31: expected '%!s(int=121)', got '%!s(int=25)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpesyo33vl_test.go:36: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpzqsi6_ig_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    return find_star_num(n-1) + find_star_num(n-2)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=37)', got '%!s(int=3)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=73)', got '%!s(int=5)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmphmgf6r0u_test.go:37: expected '%!s(int=121)', got '%!s(int=8)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) + 2 * n - 1\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpa1h8nbt6_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpa1h8nbt6_test.go:31: expected '%!s(int=73)', got '%!s(int=20)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpa1h8nbt6_test.go:31: expected '%!s(int=121)', got '%!s(int=29)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpes4c2goa_test.go:31: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpp2_1qlq6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 5\n    }\n    return find_star_num(n-1) * 10 + n\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510680,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=37)', got '%!s(int=523)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=73)', got '%!s(int=5234)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpdv5zctrp_test.go:31: expected '%!s(int=121)', got '%!s(int=52345)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n\n    return find_star_num(n-1) + 4*(n-1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123865,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp3oee64ai_test.go:32: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 6 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=37)', got '%!s(int=19)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=73)', got '%!s(int=37)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmpk6h6_657_test.go:31: expected '%!s(int=121)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package find_star_num_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the n'th star number.\nfunc find_star_num(n int) int {\n    if n < 1 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return find_star_num(n - 1) + 4 * (n - 1)\n}\n\nfunc TestFind_Star_Num(t *testing.T) {\n  candidate := find_star_num\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 37 },\n     { actual: candidate(4), expected: 73 },\n     { actual: candidate(5), expected: 121 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123864,
      "stdout": "--- FAIL: TestFind_Star_Num (0.00s)\n    --- FAIL: TestFind_Star_Num/test_num__0 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=37)', got '%!s(int=13)'\n    --- FAIL: TestFind_Star_Num/test_num__1 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=73)', got '%!s(int=25)'\n    --- FAIL: TestFind_Star_Num/test_num__2 (0.00s)\n        tmp_e3sj4n6_test.go:34: expected '%!s(int=121)', got '%!s(int=41)'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
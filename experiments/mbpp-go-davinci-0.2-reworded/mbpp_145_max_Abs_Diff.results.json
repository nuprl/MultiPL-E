{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "go_test.go",
  "prompt": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "func TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i, _ := range arr {\n        for j, _ := range arr {\n            if i != j {\n                diff := arr[i].(int) - arr[j].(int)\n                if diff < 0 {\n                    diff = -diff\n                }\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp38o4rbkx_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    // Write your code here\n    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1btzmtsm_test.go:37: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i, _ := range arr {\n        for j, _ := range arr {\n            if i != j {\n                diff := int(arr[i].(int)) - int(arr[j].(int))\n                if diff < 0 {\n                    diff = -diff\n                }\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    var diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff = arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var maxDiff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > maxDiff {\n                maxDiff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return maxDiff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpdvmy5dh7_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i], arr[j]) > max {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp589fx8op_test.go:13:16: undefined: abs\n/tmp/tmp589fx8op_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if max < abs(arr[i].(int) - arr[j].(int)) {\n                    max = abs(arr[i].(int) - arr[j].(int))\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpwfvl2hg1_test.go:14:26: undefined: abs\n/tmp/tmpwfvl2hg1_test.go:15:27: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    var min_diff int\n    var max_num int\n    var min_num int\n\n    for _, v := range arr {\n        if v.(int) > max_num {\n            max_num = v.(int)\n        }\n        if v.(int) < min_num {\n            min_num = v.(int)\n        }\n    }\n    max_diff = max_num - min_num\n    min_diff = min_num - max_num\n    if max_diff > min_diff {\n        return max_diff\n    } else {\n        return min_diff\n    }\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmppszvuirg_test.go:47: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmppszvuirg_test.go:47: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmppszvuirg_test.go:47: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max_diff {\n                    max_diff = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if max_diff < int(arr[i].(int) - arr[j].(int)) {\n                    max_diff = int(arr[i].(int) - arr[j].(int))\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max_diff {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_11xhfu7_test.go:13:16: undefined: abs\n/tmp/tmp_11xhfu7_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if max < int(arr[i].(int) - arr[j].(int)) {\n                max = int(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpf4nx3w_4_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max {\n                    max = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4165uucc_test.go:13:16: undefined: abs\n/tmp/tmp4165uucc_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := int(arr[i].(int)) - int(arr[j].(int))\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    max = arr[0].(int)\n    min = arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    var diff int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            diff = int(arr[i].(int)) - int(arr[j].(int))\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max {\n                    max = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    var min_diff int\n    var max_val int\n    var min_val int\n    var diff int\n    var val int\n    var ok bool\n\n    max_diff = 0\n    min_diff = 0\n    max_val = 0\n    min_val = 0\n    for _, v := range arr {\n        if val, ok = v.(int); ok {\n            if val > max_val {\n                max_val = val\n            }\n            if val < min_val {\n                min_val = val\n            }\n        }\n    }\n    diff = max_val - min_val\n    if diff > max_diff {\n        max_diff = diff\n    }\n    if diff < min_diff {\n        min_diff = diff\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp00fhrsw6_test.go:57: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmp00fhrsw6_test.go:57: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmp00fhrsw6_test.go:57: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max {\n                    max = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < Abs(arr[i], arr[j]) {\n                max = Abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3nfkxqjq_test.go:13:22: undefined: Abs\n/tmp/tmp3nfkxqjq_test.go:14:23: undefined: Abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    max = arr[0].(int)\n    min = arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max_diff {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_11xhfu7_test.go:13:16: undefined: abs\n/tmp/tmp_11xhfu7_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if diff := arr[i].(int) - arr[j].(int); diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp38qrh9tu_test.go:16:16: undefined: diff\n/tmp/tmp38qrh9tu_test.go:17:28: undefined: diff\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpe_ppgw_1_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i, v := range arr {\n        for j, v2 := range arr {\n            if i != j {\n                if v.(int) - v2.(int) > max {\n                    max = v.(int) - v2.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) > arr[j].(int) {\n                if arr[i].(int) - arr[j].(int) > max_diff {\n                    max_diff = arr[i].(int) - arr[j].(int)\n                }\n            } else {\n                if arr[j].(int) - arr[i].(int) > max_diff {\n                    max_diff = arr[j].(int) - arr[i].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpe_ppgw_1_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i, v := range arr {\n        for j, w := range arr {\n            if i != j {\n                if v.(int) - w.(int) > max {\n                    max = v.(int) - w.(int)\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i], arr[j]) {\n                max_diff = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpockonkgx_test.go:13:27: undefined: abs\n/tmp/tmpockonkgx_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < int(arr[i].(int) - arr[j].(int)) {\n                max_diff = int(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpl0pbqf27_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if max < abs(arr[i], arr[j]) {\n                    max = abs(arr[i], arr[j])\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpn5_re49c_test.go:14:26: undefined: abs\n/tmp/tmpn5_re49c_test.go:15:27: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpll4as8bv_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i == j {\n                continue\n            }\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpll4as8bv_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i; j < len(arr); j++ {\n            if i == j {\n                continue\n            }\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1gqhjp65_test.go:39: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i], arr[j]) > max {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp589fx8op_test.go:13:16: undefined: abs\n/tmp/tmp589fx8op_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i, v := range arr {\n        for j, w := range arr {\n            if i != j {\n                if max < Abs(v.(int) - w.(int)) {\n                    max = Abs(v.(int) - w.(int))\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123016,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmprp51lntw_test.go:14:26: undefined: Abs\n/tmp/tmprp51lntw_test.go:15:27: undefined: Abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    max = arr[0].(int)\n    min = arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if abs(arr[i].(int) - arr[j].(int)) > max {\n                    max = abs(arr[i].(int) - arr[j].(int))\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123016,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpd8c8ztuk_test.go:14:20: undefined: abs\n/tmp/tmpd8c8ztuk_test.go:15:27: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := int(arr[i].(int)) - int(arr[j].(int))\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max, min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpx0zeulq7_test.go:37: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "ok  \tcommand-line-arguments\t0.006s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if int(arr[i].(int)) - int(arr[j].(int)) > max_diff {\n                max_diff = int(arr[i].(int)) - int(arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2chte5pk_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i], arr[j]) > max {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123016,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_9liteve_test.go:13:16: undefined: abs\n/tmp/tmp_9liteve_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.005s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i], arr[j]) > max {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp589fx8op_test.go:13:16: undefined: abs\n/tmp/tmp589fx8op_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs_diff(arr[i], arr[j]) > max_diff {\n                max_diff = abs_diff(arr[i], arr[j])\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpjjjdx88b_test.go:13:16: undefined: abs_diff\n/tmp/tmpjjjdx88b_test.go:14:28: undefined: abs_diff\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpe_ppgw_1_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if max_diff < Abs(arr[i].(int) - arr[j].(int)) {\n                    max_diff = Abs(arr[i].(int) - arr[j].(int))\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpzyq7emjl_test.go:14:31: undefined: Abs\n/tmp/tmpzyq7emjl_test.go:15:32: undefined: Abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i, v := range arr {\n        for j, w := range arr {\n            if i != j {\n                if max < abs(v.(int) - w.(int)) {\n                    max = abs(v.(int) - w.(int))\n                }\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpwh0yhw98_test.go:14:26: undefined: abs\n/tmp/tmpwh0yhw98_test.go:15:27: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i], arr[j]) {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppiknrmmo_test.go:13:22: undefined: abs\n/tmp/tmppiknrmmo_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int = 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max_diff {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9kxout7v_test.go:13:16: undefined: abs\n/tmp/tmp9kxout7v_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    if len(arr) < 2 {\n        return 0\n    }\n    max := arr[0].(int)\n    min := arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i, v := range arr {\n        for j, w := range arr {\n            if i == j {\n                continue\n            }\n            if v.(int) - w.(int) > max_diff {\n                max_diff = v.(int) - w.(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs(arr[i].(int) - arr[j].(int)) {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpf19vbxx2_test.go:13:27: undefined: abs\n/tmp/tmpf19vbxx2_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := 0; j < len(arr); j++ {\n            if i != j {\n                if arr[i].(int) - arr[j].(int) > max_diff {\n                    max_diff = arr[i].(int) - arr[j].(int)\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max_diff {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpcq43s1pb_test.go:13:16: undefined: abs\n/tmp/tmpcq43s1pb_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max_diff {\n                max_diff = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp_11xhfu7_test.go:13:16: undefined: abs\n/tmp/tmp_11xhfu7_test.go:14:28: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i], arr[j]) {\n                max = abs(arr[i], arr[j])\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmppiknrmmo_test.go:13:22: undefined: abs\n/tmp/tmppiknrmmo_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    var min int\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpemo1usyl_test.go:38: expected '%!s(int=4)', got '%!s(int=5)'\n    --- FAIL: TestMax_Abs_Diff/test_num__1 (0.00s)\n        tmpemo1usyl_test.go:38: expected '%!s(int=8)', got '%!s(int=9)'\n    --- FAIL: TestMax_Abs_Diff/test_num__2 (0.00s)\n        tmpemo1usyl_test.go:38: expected '%!s(int=2)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    var min_element int\n    var max_element int\n    min_element = arr[0].(int)\n    max_element = arr[0].(int)\n    for _, v := range arr {\n        if v.(int) < min_element {\n            min_element = v.(int)\n        }\n        if v.(int) > max_element {\n            max_element = v.(int)\n        }\n    }\n    max_diff = max_element - min_element\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpe_ppgw_1_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6bsg0ptf_test.go:13:16: undefined: abs\n/tmp/tmp6bsg0ptf_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    if len(arr) == 0 {\n        return 0\n    }\n    max := arr[0].(int)\n    min := arr[0].(int)\n    for _, v := range arr {\n        if v.(int) > max {\n            max = v.(int)\n        }\n        if v.(int) < min {\n            min = v.(int)\n        }\n    }\n    return max - min\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max_diff < abs_diff(arr[i], arr[j]) {\n                max_diff = abs_diff(arr[i], arr[j])\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp3p0529qm_test.go:13:27: undefined: abs_diff\n/tmp/tmp3p0529qm_test.go:14:28: undefined: abs_diff\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max_diff := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123015,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmpll4as8bv_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max_diff {\n                max_diff = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp2lcm0ik3_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp1q2kgi8d_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if max < abs(arr[i].(int) - arr[j].(int)) {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510134,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp9uxidu3n_test.go:13:22: undefined: abs\n/tmp/tmp9uxidu3n_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i, v := range arr {\n        for j, w := range arr {\n            if i == j {\n                continue\n            }\n            if v.(int) - w.(int) > max {\n                max = v.(int) - w.(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp4165uucc_test.go:13:16: undefined: abs\n/tmp/tmp4165uucc_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i := 0; i < len(arr); i++ {\n        for j := i+1; j < len(arr); j++ {\n            diff := arr[i].(int) - arr[j].(int)\n            if diff < 0 {\n                diff = -diff\n            }\n            if diff > max_diff {\n                max_diff = diff\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    max := 0\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if arr[i].(int) - arr[j].(int) > max {\n                max = arr[i].(int) - arr[j].(int)\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510135,
      "stdout": "--- FAIL: TestMax_Abs_Diff (0.00s)\n    --- FAIL: TestMax_Abs_Diff/test_num__0 (0.00s)\n        tmp38o4rbkx_test.go:36: expected '%!s(int=4)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max int\n    for i := 0; i < len(arr); i++ {\n        for j := i + 1; j < len(arr); j++ {\n            if abs(arr[i].(int) - arr[j].(int)) > max {\n                max = abs(arr[i].(int) - arr[j].(int))\n            }\n        }\n    }\n    return max\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123014,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9cwjpf9_test.go:13:16: undefined: abs\n/tmp/tmps9cwjpf9_test.go:14:23: undefined: abs\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package max_Abs_Diff_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the maximum difference between any two elements in a given list.\nfunc max_Abs_Diff(arr []interface{}) int {\n    var max_diff int\n    for i, v := range arr {\n        for j, w := range arr {\n            if i != j {\n                diff := v.(int) - w.(int)\n                if diff < 0 {\n                    diff = -diff\n                }\n                if diff > max_diff {\n                    max_diff = diff\n                }\n            }\n        }\n    }\n    return max_diff\n}\n\nfunc TestMax_Abs_Diff(t *testing.T) {\n  candidate := max_Abs_Diff\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]interface{}{2, 1, 5, 3}), expected: 4 },\n     { actual: candidate([]interface{}{9, 3, 2, 5, 1}), expected: 8 },\n     { actual: candidate([]interface{}{3, 2, 1}), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123017,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_113_check_integer",
  "language": "go_test.go",
  "prompt": "package check_integer_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check if a string represents an integer or not.\nfunc check_integer(text string) bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "reworded",
  "tests": "func TestCheck_Integer(t *testing.T) {\n  candidate := check_integer\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"python\"), expected: false },\n     { actual: candidate(\"1\"), expected: true },\n     { actual: candidate(\"12345\"), expected: true },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    for i := 0; i < len(text); i++ {\n        if text[i] < '0' || text[i] > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for i := 0; i < len(text); i++ {\n        if text[i] < '0' || text[i] > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for i := 0; i < len(text); i++ {\n        if text[i] < '0' || text[i] > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    for i, c := range text {\n        if i == 0 {\n            if c == '-' || c == '+' {\n                continue\n            }\n        }\n\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, char := range text {\n        if char < '0' || char > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    if text[0] == '-' {\n        text = text[1:]\n    }\n\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for i := 0; i < len(text); i++ {\n        if text[i] < '0' || text[i] > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    if text[0] == '-' {\n        text = text[1:]\n    }\n\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n\n    if text[0] == '-' {\n        text = text[1:]\n    }\n\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n\n    return true\n}\n",
    "    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(text) == 0 {\n        return false\n    }\n    if text[0] == '-' {\n        text = text[1:]\n    }\n    for _, c := range text {\n        if c < '0' || c > '9' {\n            return false\n        }\n    }\n    return true\n}\n"
  ]
}
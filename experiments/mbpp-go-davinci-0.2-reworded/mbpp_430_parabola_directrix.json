{
  "name": "mbpp_430_parabola_directrix",
  "language": "go_test.go",
  "prompt": "package parabola_directrix_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the directrix of a parabola.\nfunc parabola_directrix(a int, b int, c int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "func TestParabola_Directrix(t *testing.T) {\n  candidate := parabola_directrix\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5, 3, 2), expected: -198 },\n     { actual: candidate(9, 8, 4), expected: -2336 },\n     { actual: candidate(2, 4, 6), expected: -130 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * b * b) / (4 * a * c)\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -c/b\n}\n",
    "    return -(b * b) / (4 * a) + c\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(b * b) / (4 * a) + c\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -(a * b) / (2 * a)\n}\n",
    "    return -c / (2 * a)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / (b * b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -1 * (b * b - 4 * a * c) / (4 * a)\n}\n",
    "    return -(4 * a * c) / (b * b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a*a*a*c + a*b*b - a*a*b*b) / (a*a*b - a*a*a)\n}\n",
    "    return -c/b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / (b * b)\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / (b * b)\n}\n",
    "    return -c/b\n}\n",
    "    return -1 * (a * b * b) / (4 * a * c)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -(4 * a * c) / (b * b)\n}\n",
    "    return -c/b\n}\n",
    "    return -c/b\n}\n",
    "    return -1 * (a * c) / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(4*a*c)/(b*b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c / (b*b)\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(b * b) / (4 * a) + c\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c / b\n}\n",
    "    return (2 * a * c - b * b) / (4 * a)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * b) / (2 * a)\n}\n",
    "    return -(4*a*c)/(b*b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(4*a*c)/(b*b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a*a*b)/(4*a) + c\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * b) / (2 * a)\n}\n",
    "    return -4*a*c / (b*b)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -(a*a*b*b)/(4*a*c)\n}\n",
    "    return -1 * (a * b * b) / (4 * a * c)\n}\n",
    "    return -c / b\n}\n",
    "    return -(a*a*a*c - a*b*b + b*b*b) / (3*a*a)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -a/b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -1 * (a * b * b) / (4 * a * c)\n}\n",
    "    return -c / b\n}\n",
    "    return -4*a*c/b\n}\n",
    "    return -c/b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4*a*c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / (b * b)\n}\n",
    "    return -c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -c / b\n}\n",
    "    return (b * b - 4 * a * c) / (4 * a)\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -(a * c) / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4*a*c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -c / b\n}\n",
    "    return -c/b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -4 * a * c / b\n}\n",
    "    return -1 * (a * c) / b\n}\n"
  ]
}
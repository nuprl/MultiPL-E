{
  "name": "mbpp_267_square_Sum",
  "language": "go_test.go",
  "prompt": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 10 },\n     { actual: candidate(3), expected: 35 },\n     { actual: candidate(4), expected: 84 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += (2*i - 1) * (2*i - 1)\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n"
  ]
}
{
  "name": "mbpp_759_is_decimal",
  "language": "go_test.go",
  "prompt": "package is_decimal_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to check whether a given string is a decimal number with a precision of 2.\nfunc is_decimal(num string) bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "func TestIs_Decimal(t *testing.T) {\n  candidate := is_decimal\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"123.11\"), expected: true },\n     { actual: candidate(\"e666.86\"), expected: false },\n     { actual: candidate(\"3.124587\"), expected: false },\n     { actual: candidate(\"1.11\"), expected: true },\n     { actual: candidate(\"1.1.11\"), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    if len(num) < 1 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) < 1 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 2] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 3] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 4] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 5] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 6] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 7] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 8] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 9] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num) - 10",
    "    if len(num) == 0 {\n        return false\n    }\n\n    // check if the first character is a minus sign\n    if num[0] == '-' {\n        num = num[1:]\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {\n        return false\n    }\n\n    // check if the number contains a decimal point\n    if len(num) == 0 || num[0] == '.' {",
    "    if num == \"\" {\n        return false\n    }\n    for i := 0; i < len(num); i++ {\n        if i == 0 && num[i] == '-' {\n            continue\n        }\n        if num[i] == '.' {\n            if i == len(num) - 3 {\n                return true\n            }\n            return false\n        }\n        if num[i] < '0' || num[i] > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    // TODO: implement\n    return false\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if len(num) == 0 {\n        return false\n    }\n    dot_count := 0\n    for _, c := range num {\n        if c == '.' {\n            dot_count++\n            if dot_count > 1 {\n                return false\n            }\n        } else if c < '0' || c > '9' {\n            return false\n        }\n    }\n    if dot_count == 0 {\n        return false\n    }\n    if len(num) - dot_count > 3 {\n        return false\n    }\n    return true\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n\n    dot_count := 0\n    for _, c := range num {\n        if c == '.' {\n            dot_count++\n        }\n    }\n\n    if dot_count > 1 {\n        return false\n    }\n\n    if dot_count == 1 {\n        dot_index := -1\n        for i, c := range num {\n            if c == '.' {\n                dot_index = i\n                break\n            }\n        }\n\n        if dot_index == -1 {\n            return false\n        }\n\n        if dot_index == len(num) - 1 {\n            return false\n        }\n\n        if dot_index == len(num) - 2 {\n            return true\n        }\n\n        return false\n    }\n\n    return true\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] == '.' {\n        num = num[2:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] == '.' {\n        num = num[2:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) == 1 {\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && len(num) == 2 && num[1] == '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) == 2 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) > 2 && num[1] == '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) > 2 && num[1] != '.' {\n        return false\n    }\n    if num[0] != '0' && len(num) == 1 {\n        return true\n    }\n    if num[0] != '0' && len(num) == 2 && num[1] == '.' {\n        return false\n    }\n    if num[0] != '0' && len(num) == 2 && num[1] != '.' {\n        return true\n    }\n    if num[0] != '0' && len(num) > 2 && num[1] == '.' {\n        return false\n    }\n    if num[0] != '0' && len(num) > 2 && num[1] != '.' {\n        return true\n    }\n    return false\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n\n    if num[0] == '-' {\n        num = num[1:]\n    }\n\n    if len(num) == 0 {\n        return false\n    }\n\n    if num[0] == '.' {\n        return false\n    }\n\n    if num[len(num) - 1] == '.' {\n        return false\n    }\n\n    dot_count := 0\n    for _, c := range num {\n        if c == '.' {\n            dot_count++\n        }\n    }\n\n    if dot_count > 1 {\n        return false\n    }\n\n    for _, c := range num {\n        if c != '.' && (c < '0' || c > '9') {\n            return false\n        }\n    }\n\n    if dot_count == 0 {\n        return true\n    }\n\n    dot_index := -1\n    for i, c := range num {\n        if c == '.' {\n            dot_index = i\n            break\n        }\n    }\n\n    if dot_index == -1 {\n        return false\n    }\n\n    if dot_index == 0 {\n        return len(num) - 1 <= 2\n    }\n\n    if dot_index == len(num) - 1 {\n        return len(num) - 1 <= 2\n    }\n\n    return len(num) - dot_index - 1 <= 2\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    dot_index := -1\n    for i, c := range num {\n        if c == '.' {\n            dot_index = i\n            break\n        }\n    }\n    if dot_index == -1 {\n        return false\n    }\n    if dot_index == len(num) - 1 {\n        return false\n    }\n    if dot_index == len(num) - 2 {\n        return true\n    }\n    return false\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '0' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '.' {\n        return false\n    }\n    if num[0] == '.' && num[1] == '0' {\n        return false\n    }\n    if num[0] == '.' && num[1] == '.' {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '0' && num[3] == '0' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '0' && num[3] == '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '.' && num[3] == '0' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && num[2] == '.' && num[3] == '.' {\n        return false\n    }\n    if num[0] == '.' && num[1] == '0' && num[2",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n    }\n    if len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n    }\n    if len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n    }\n    if len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n    }\n    if len(num) == 1 {\n        return true\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n",
    "    if len(num) < 1 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) < 1 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) < 1 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 1 {\n        return false\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) > 2 {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) == 2 {\n        return true\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) == 2 {\n        return true\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) > 2 {\n        return false\n    }\n    if num[0] != '0' && num[1] != '.' && len(num) > 2 {\n        return false\n    }\n    return true\n}\n",
    "    if len(num) < 3 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) < 3 {\n        return false\n    }\n    if num[len(num)-3] == '.' {\n        return true\n    }\n    return false\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) > 3 {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) == 3 && num[2] == '0' {\n        return false\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) == 3 && num[2] != '0' {\n        return true\n    }\n    if num[0] == '0' && num[1] == '.' && len(num) == 2 {\n        return true\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) == 2 {\n        return false\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) == 3 && num[2] == '0' {\n        return true\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) == 3 && num[2] != '0' {\n        return true\n    }\n    if num[0] != '0' && num[1] == '.' && len(num) > 3 {\n        return false\n    }\n    if num[0] != '0' && num[1] != '.' && len(num) == 1 {\n        return true\n    }\n    if",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        return false\n    }\n    count := 0\n    for _, c := range num {\n        if c == '.' {\n            count++\n        }\n    }\n    if count > 1 {\n        return false\n    }\n    if count == 0 {\n        return true\n    }\n    if count == 1 {\n        for i, c := range num {\n            if c == '.' {\n                if len(num[i+1:]) > 2 {\n                    return false\n                }\n            }\n        }\n    }\n    return true\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n\n    if num[0] == '-' {\n        num = num[1:]\n    }\n\n    if len(num) == 0 {\n        return false\n    }\n\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n\n    if len(num) == 0 {\n        return false\n    }\n\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n\n    if len(num) == 0 {\n        return false\n    }\n\n    if num[0] == '0' && len(num) > 1 {\n        return false\n    }\n\n    if num[0] == '0' && len(num) == 1 {\n        return true\n    }\n\n    if num[0] == '.' {\n        return false\n    }\n\n    if num[len(num)-1] == '.' {\n        return false\n    }\n\n    if len(num) == 1 {\n        return true\n    }\n\n    if num[0] == '-' {\n        return false\n    }\n\n    if num[0] == '+' {\n        return false\n    }\n\n    if num[0] == 'e' {\n        return false\n    }\n\n    if num[0] == 'E' {\n        return false\n    }\n\n    if num[0] == '.' {\n        return false\n    }\n\n    if num[len(num)-1] == '.' {\n        return false\n    }\n\n    if num[0] == '-' && num[1] == '.' {\n        return false\n    }\n\n    if num[0] == '-' && num[1] == 'e' {\n        return false\n    }\n\n    if num[0] == '-' && num[1] == 'E' {\n        return false\n    }\n\n    if num[0] == '-' && num[1] == '0' {\n        return false\n    }\n\n    if num[0] == '-' && num[1] == '+' {\n        return false\n    }\n\n    if num[0] == '+' && num[",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num) - 1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    dot_index := -1\n    for i := 0; i < len(num); i++ {\n        if num[i] == '.' {\n            if dot_index != -1 {\n                return false\n            }\n            dot_index = i\n        } else if num[i] < '0' || num[i] > '9' {\n            return false\n        }\n    }\n    if dot_index == -1 {\n        return true\n    }\n    if dot_index == len(num) - 1 {\n        return false\n    }\n    if dot_index == len(num) - 2 {\n        return true\n    }\n    return false\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num)-1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 && num[1] != '.' {\n        return false\n    }\n    if num[0] == '0' && len(num) > 2 && num[2] == '.' {\n        return false\n    }\n    dot_count := 0\n    for _, v := range num {\n        if v == '.' {\n            dot_count++\n        }\n    }\n    if dot_count > 1 {\n        return false\n    }\n    if dot_count == 1 {\n        for _, v := range num {\n            if v != '.' && (v < '0' || v > '9') {\n                return false\n            }\n        }\n        return true\n    }\n    for _, v := range num {\n        if v < '0' || v > '9' {\n            return false\n        }\n    }\n    return true\n}\n",
    "    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '-' {\n        num = num[1:]\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '.' {\n        num = \"0\" + num\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[len(num) - 1] == '.' {\n        num = num + \"0\"\n    }\n    if len(num) == 0 {\n        return false\n    }\n    if num[0] == '0' && len(num) > 1 {\n        return false\n    }\n    for i := 0; i < len(num); i++ {\n        if num[i] == '.' {\n            if i == len(num) - 3 {\n                return true\n            }\n            return false\n        }\n        if num[i] < '0' || num[i] > '9' {\n            return false\n        }\n    }\n    return true\n}\n"
  ]
}
{
  "name": "mbpp_735_toggle_middle_bits",
  "language": "go_test.go",
  "prompt": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
  "prompt_terminology": "reworded",
  "tests": "func TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 0\n    for i = 1; i < 32; i++ {\n        if (i == 1 || i == 31) {\n            mask = mask << 1\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvxtqsgef_test.go:39: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvxtqsgef_test.go:39: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvxtqsgef_test.go:39: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvxtqsgef_test.go:39: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvxtqsgef_test.go:39: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x80000001\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000002\n    var mask10 int = 0x7FFFFFFC\n    var mask11 int = 0x80000003\n    var mask12 int = 0x7FFFFFFB\n    var mask13 int = 0x80000004\n    var mask14 int = 0x7FFFFFFA\n    var mask15 int = 0x80000005\n    var mask16 int = 0x7FFFFFF9\n    var mask17 int = 0x80000006\n    var mask18 int = 0x7FFFFFF8\n    var mask19 int = 0x80000007\n    var mask20 int = 0x7FFFFFF7\n    var mask21 int = 0x80000008\n    var mask22 int = 0x7FFFFFF6\n    var mask23 int = 0x80000009\n    var mask24 int = 0x7FFFFFF5\n    var mask25 int = 0x8000000A\n    var mask26 int = 0x7FFFFFF4\n    var mask27 int = 0x8000000B\n    var mask28 int = 0x7FFFFFF3\n    var mask29 int = 0x8000000C\n    var mask30 int = 0x7FFFFFF2\n    var mask31 int = 0x8000000D\n    var mask32 int = 0x7FFFFFF1\n    var mask33 int = 0x8000000E\n    var mask34 int = 0x7FFFFFF0\n    var mask35 int = 0x8000000F\n    var mask36 int = 0x7FFFFFEF\n    var mask37 int = 0x80000010\n    var mask38 int = 0x7FFFFFEE\n    var mask39 int = 0x80000011\n    var mask40 int = 0x7FFFFFED\n    var mask41 int = 0x80000012\n    var mask\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmprr49_9_y_test.go:51:9: missing variable type or initialization\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | (1 << i)\n        i++\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpiuktedhr_test.go:36: expected '%!s(int=15)', got '%!s(int=503)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpiuktedhr_test.go:36: expected '%!s(int=12)', got '%!s(int=1012)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpiuktedhr_test.go:36: expected '%!s(int=13)', got '%!s(int=2037)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpiuktedhr_test.go:36: expected '%!s(int=127)', got '%!s(int=-65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpiuktedhr_test.go:36: expected '%!s(int=115)', got '%!s(int=-77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // Remove the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(31)))\n    // Toggle the middle bits\n    n = n ^ (n >> 1)\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjej1gilf_test.go:41: expected '%!s(int=15)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjej1gilf_test.go:41: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjej1gilf_test.go:41: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjej1gilf_test.go:41: expected '%!s(int=127)', got '%!s(int=97)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjej1gilf_test.go:41: expected '%!s(int=115)', got '%!s(int=107)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for i := n; i > 0; i >>= 1 {\n        num_bits++\n    }\n\n    // Get the mask to toggle the bits\n    mask := 0\n    for i := 0; i < num_bits - 2; i++ {\n        mask = (mask << 1) | 1\n    }\n    mask <<= 1\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // find the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // toggle all bits except the first and the last bit\n    n = n ^ 0xfffffffc\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmprm4vx05i_test.go:38: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmprm4vx05i_test.go:38: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmprm4vx05i_test.go:38: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmprm4vx05i_test.go:38: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmprm4vx05i_test.go:38: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // find the number of bits\n    var num_bits int = 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // toggle all bits except the first and the last\n    var mask int = (1 << uint(num_bits - 1)) - 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvdvcyuh0_test.go:38: expected '%!s(int=15)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvdvcyuh0_test.go:38: expected '%!s(int=12)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpvdvcyuh0_test.go:38: expected '%!s(int=13)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvdvcyuh0_test.go:38: expected '%!s(int=127)', got '%!s(int=63)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvdvcyuh0_test.go:38: expected '%!s(int=115)', got '%!s(int=63)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 0; i < 31; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwxkmipnp_test.go:34: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwxkmipnp_test.go:34: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwxkmipnp_test.go:34: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwxkmipnp_test.go:34: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwxkmipnp_test.go:34: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        if i != 1 && i != 31 {\n            mask = mask | (1 << i)\n        }\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpia3q91ud_test.go:36: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpia3q91ud_test.go:36: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpia3q91ud_test.go:36: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpia3q91ud_test.go:36: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpia3q91ud_test.go:36: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // We need to create a mask to toggle all the bits except the first and the last bit.\n    // We can do this by creating a mask with all the bits set to 1 and then unsetting the first and last bit.\n    // We can create a mask with all the bits set to 1 by shifting 1 to the left by the number of bits in the number.\n    // We can get the number of bits in the number by getting the number of bits in an int and subtracting 1.\n    // We can get the number of bits in an int by using the unsafe package.\n    mask := (1 << uint(unsafe.Sizeof(n)*8 - 1)) - 1\n    // Now we need to unset the first and last bit of the mask.\n    // We can do this by shifting the mask to the right by 1 and then shifting it to the left by 1.\n    mask = (mask >> 1) << 1\n    // Now we can toggle the bits of the number by xoring it with the mask.\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpm40u2kse_test.go:15:24: undefined: unsafe\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var i int = 1\n    for i < 32 {\n        mask = mask | (0b11 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpbdqo2pf8_test.go:36: expected '%!s(int=15)', got '%!s(int=8589934582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpbdqo2pf8_test.go:36: expected '%!s(int=12)', got '%!s(int=8589934581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpbdqo2pf8_test.go:36: expected '%!s(int=13)', got '%!s(int=8589934580)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpbdqo2pf8_test.go:36: expected '%!s(int=127)', got '%!s(int=8589934526)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpbdqo2pf8_test.go:36: expected '%!s(int=115)', got '%!s(int=8589934514)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp8x87t3j2_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x00000002\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0xFFFFFFF8\n    var mask12 int = 0x00000004\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0xFFFFFFF0\n    var mask16 int = 0x00000008\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0xFFFFFFE0\n    var mask20 int = 0x00000010\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0xFFFFFFC0\n    var mask24 int = 0x00000020\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0xFFFFFF80\n    var mask28 int = 0x00000040\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0xFFFFFF00\n    var mask32 int = 0x00000080\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0xFFFFFE00\n    var mask36 int = 0x00000100\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0xFFFFFC00\n    var mask40 int = 0x00000200\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpu5bkvy62_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int\n    for i = 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpkfmiuu52_test.go:35: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpkfmiuu52_test.go:35: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpkfmiuu52_test.go:35: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpkfmiuu52_test.go:35: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpkfmiuu52_test.go:35: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // get the mask for the first and last bits\n    mask := (1 << uint(num_bits)) - 1\n    // toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpg7x5z77z_test.go:39: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpg7x5z77z_test.go:39: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpg7x5z77z_test.go:39: expected '%!s(int=115)', got '%!s(int=127)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first bit\n    first_bit := n & 1\n    // get the last bit\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // shift the number to the right to get rid of the first bit\n    n = n >> 1\n    // shift the number to the left to get rid of the last bit\n    n = n << 1\n    // toggle the bits\n    n = n ^ (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // shift the number to the left to add the first bit\n    n = n << 1\n    // add the first bit\n    n = n | first_bit\n    // shift the number to the right to add the last bit\n    n = n >> 1\n    // add the last bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit of the number\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n\n    // Shift the number to the right by one bit\n    n = n >> 1\n\n    // Toggle all the bits of the number\n    n = n ^ 0xFFFFFFFF\n\n    // Shift the number to the left by one bit\n    n = n << 1\n\n    // Set the first and last bit of the number\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7fffffff\n    var mask2 int = 0x80000001\n    return (n ^ mask) ^ mask2\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var i int = 1\n    for i < 32 {\n        mask = mask | (0b11 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n\n    // get the rest of the bits\n    rest_bits := n & 0x7ffffffe\n\n    // toggle the rest of the bits\n    rest_bits = rest_bits ^ 0x7ffffffe\n\n    // put the bits back together\n    return first_bit | rest_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x7FFFFFFD\n    var mask8 int = 0x80000002\n    var mask9 int = 0x00000002\n    var mask10 int = 0xFFFFFFFC\n    var mask11 int = 0x7FFFFFFC\n    var mask12 int = 0x80000004\n    var mask13 int = 0x00000004\n    var mask14 int = 0xFFFFFFF8\n    var mask15 int = 0x7FFFFFF8\n    var mask16 int = 0x80000008\n    var mask17 int = 0x00000008\n    var mask18 int = 0xFFFFFFF0\n    var mask19 int = 0x7FFFFFF0\n    var mask20 int = 0x800000010\n    var mask21 int = 0x00000010\n    var mask22 int = 0xFFFFFFE0\n    var mask23 int = 0x7FFFFFE0\n    var mask24 int = 0x800000020\n    var mask25 int = 0x00000020\n    var mask26 int = 0xFFFFFFC0\n    var mask27 int = 0x7FFFFFC0\n    var mask28 int = 0x800000040\n    var mask29 int = 0x00000040\n    var mask30 int = 0xFFFFFF80\n    var mask31 int = 0x7FFFFF80\n    var mask32 int = 0x800000080\n    var mask33 int = 0x00000080\n    var mask34 int = 0xFFFFFF00\n    var mask35 int = 0x7FFFFF00\n    var mask36 int = 0x800000100\n    var mask37 int = 0x00000100\n    var mask38 int = 0xFFFFFE00\n    var mask39 int = 0x7FFFFE00\n    var mask40 int = 0x800000200\n    var mask41 int = 0x00000200\n    var mask42 int = 0xFFFFFC00\n    var mask43\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get the first and last bit\n    mask := 0b11\n    // get the first and last bit\n    first_bit := n & mask\n    last_bit := n & (mask << uint(len(fmt.Sprintf(\"%b\", n)) - 2))\n    // get the number without the first and last bit\n    n = n & ^(mask << uint(len(fmt.Sprintf(\"%b\", n)) - 2))\n    n = n & ^mask\n    // toggle the bits\n    n = n ^ (n >> 1)\n    // add the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    var result int = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bits\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n\n    // Get the number of bits to toggle\n    num_bits_to_toggle := len(fmt.Sprintf(\"%b\", n)) - 2\n\n    // Create a mask to toggle the bits\n    mask := (1 << uint(num_bits_to_toggle)) - 1\n\n    // Toggle the bits\n    n = n ^ mask\n\n    // Set the first and last bits\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // Get the mask for the first and last bits\n    mask := (1 << uint(num_bits)) - 1\n    // Toggle the bits\n    return mask ^ n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // TODO: Write - Your - Code\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp8x87t3j2_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0xFFFFFFFE\n    var mask8 int = 0xFFFFFFFE\n    var mask9 int = 0xFFFFFFFE\n    var mask10 int = 0xFFFFFFFE\n    var mask11 int = 0xFFFFFFFE\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0xFFFFFFFE\n    var mask14 int = 0xFFFFFFFE\n    var mask15 int = 0xFFFFFFFE\n    var mask16 int = 0xFFFFFFFE\n    var mask17 int = 0xFFFFFFFE\n    var mask18 int = 0xFFFFFFFE\n    var mask19 int = 0xFFFFFFFE\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0xFFFFFFFE\n    var mask22 int = 0xFFFFFFFE\n    var mask23 int = 0xFFFFFFFE\n    var mask24 int = 0xFFFFFFFE\n    var mask25 int = 0xFFFFFFFE\n    var mask26 int = 0xFFFFFFFE\n    var mask27 int = 0xFFFFFFFE\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0xFFFFFFFE\n    var mask30 int = 0xFFFFFFFE\n    var mask31 int = 0xFFFFFFFE\n    var mask32 int = 0xFFFFFFFE\n    var mask33 int = 0xFFFFFFFE\n    var mask34 int = 0xFFFFFFFE\n    var mask35 int = 0xFFFFFFFE\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0xFFFFFFFE\n    var mask38 int = 0xFFFFFFFE\n    var mask39 int = 0xFFFFFFFE\n    var mask40 int = 0xFFFFFFFE\n    var mask41 int = 0xFFFFFFFE\n    var mask42 int = 0xFFFFFFFE\n    var mask43 int = 0xFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    var result int = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to toggle bits\n    mask := 0x7FFFFFFF\n    // shift mask to toggle bits\n    mask = mask >> 1\n    // toggle bits\n    n = n ^ mask\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = n\n    for i := 1; i < 32; i++ {\n        if (n & (mask << i)) != 0 {\n            result &= ^(mask << i)\n        } else {\n            result |= (mask << i)\n        }\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    var mask_first_last int = mask ^ (mask >> 1)\n    return n ^ mask_first_last\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to toggle bits\n    mask := 0x7FFFFFFF\n    // shift mask to toggle bits\n    mask = mask >> 1\n    // toggle bits\n    n = n ^ mask\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint\n    var result int\n    for i = 1; i < uint(len(fmt.Sprintf(\"%b\", n)) - 1); i++ {\n        result = result | (1 << i)\n    }\n    return n ^ result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    var mask_left int = mask >> 1\n    var mask_right int = mask << 1\n    var mask_middle int = mask_left ^ mask_right\n    return n ^ mask_middle\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for i := n; i > 0; i = i >> 1 {\n        num_bits++\n    }\n\n    // Create a mask with all bits set except the first and last\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | 1 << i\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 0\n    for i = 1; i < 31; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0x80000001\n    var mask8 int = 0x7FFFFFFF\n\n    var result int = n ^ mask\n    var result2 int = result & mask2\n    var result3 int = result & mask3\n    var result4 int = result2 | result3\n    var result5 int = result4 ^ mask4\n    var result6 int = result5 & mask5\n    var result7 int = result5 & mask6\n    var result8 int = result6 | result7\n    var result9 int = result8 ^ mask7\n    var result10 int = result9 & mask8\n\n    return result10\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 1\n    var result int = n\n    for i < 32 {\n        if i == 1 || i == 31 {\n            i += 1\n            continue\n        }\n        if n & mask == 1 {\n            result &= ^mask\n        } else {\n            result |= mask\n        }\n        mask <<= 1\n        i += 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 1\n    for i < 32 {\n        if i == 1 || i == 31 {\n            i++\n            continue\n        }\n        if n & mask == 0 {\n            n = n | mask\n        } else {\n            n = n & ^mask\n        }\n        mask = mask << 1\n        i++\n    }\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFEF\n    var mask27 int = 0x8000001F\n    var mask28 int = 0xFFFFFFC0\n    var mask29 int = 0x7FFFFFDF\n    var mask30 int = 0x8000003F\n    var mask31 int = 0xFFFFFF80\n    var mask32 int = 0x7FFFFFDF\n    var mask33 int = 0x8000007F\n    var mask34 int = 0xFFFFFF00\n    var mask35 int = 0x7FFFFF9F\n    var mask36 int = 0x800000FF\n    var mask37 int = 0xFFFFFE00\n    var mask38 int = 0x7FFFFDFF\n    var mask39 int = 0x800001FF\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 1\n    var i = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = (1 << uint(n)) - 1\n    fmt.Printf(\"%b\\n\", mask)\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFE\n    var mask7 int = 0x7FFFFFFE\n    var mask8 int = 0x80000001\n    var mask9 int = 0x00000001\n    var mask10 int = 0x80000000\n    var mask11 int = 0x7FFFFFFF\n    var mask12 int = 0xFFFFFFFE\n    var mask13 int = 0x7FFFFFFE\n    var mask14 int = 0xFFFFFFFE\n    var mask15 int = 0x7FFFFFFE\n    var mask16 int = 0x80000001\n    var mask17 int = 0x00000001\n    var mask18 int = 0x80000000\n    var mask19 int = 0x7FFFFFFF\n    var mask20 int = 0xFFFFFFFE\n    var mask21 int = 0x7FFFFFFE\n    var mask22 int = 0xFFFFFFFE\n    var mask23 int = 0x7FFFFFFE\n    var mask24 int = 0x80000001\n    var mask25 int = 0x00000001\n    var mask26 int = 0x80000000\n    var mask27 int = 0x7FFFFFFF\n    var mask28 int = 0xFFFFFFFE\n    var mask29 int = 0x7FFFFFFE\n    var mask30 int = 0xFFFFFFFE\n    var mask31 int = 0x7FFFFFFE\n    var mask32 int = 0x80000001\n    var mask33 int = 0x00000001\n    var mask34 int = 0x80000000\n    var mask35 int = 0x7FFFFFFF\n    var mask36 int = 0xFFFFFFFE\n    var mask37 int = 0x7FFFFFFE\n    var mask38 int = 0xFFFFFFFE\n    var mask39 int = 0x7FFFFFFE\n    var mask40 int = 0x80000001\n    var mask41 int = 0x00000001\n    var mask42 int = 0x80000000\n    var mask43 int\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = ^((1 << 1) - 1)\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 31 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFE\n\n    var result int = n & mask\n    var result2 int = n & mask2\n    var result3 int = n & mask3\n    var result4 int = result ^ mask4\n    var result5 int = result4 & mask5\n    var result6 int = result2 | result5\n    var result7 int = result6 | result3\n\n    return result7\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp8x87t3j2_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit of the number\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // Get the number of bits to be toggled\n    num_bits := uint(31)\n    if last_bit == 0 {\n        num_bits = uint(30)\n    }\n    // Toggle the bits\n    for i := uint(1); i < num_bits; i++ {\n        n = n ^ (1 << i)\n    }\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // get the mask for the first and last bit\n    mask := 1 << uint(num_bits - 1) | 1\n\n    // toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Get the mask\n    mask := 0\n    for i := 0; i < num_bits; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n\n    // Toggle the bits\n    n = n ^ mask\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFC00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFF800\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF000\n    var mask26 int = 0xFFFFE000\n    var mask27 int = 0x7FFFC000\n    var mask28 int = 0xFFFFC000\n    var mask29 int = 0x7FFF8000\n    var mask30 int = 0xFFFF8000\n    var mask31 int = 0x7FFF0000\n    var mask32 int = 0xFFFE0000\n    var mask33 int = 0x7FFC0000\n    var mask34 int = 0xFFFC0000\n    var mask35 int = 0x7FF80000\n    var mask36 int = 0xFFF80000\n    var mask37 int = 0x7FF00000\n    var mask38 int = 0xFFE00000\n    var mask39 int = 0x7FC00000\n    var mask40 int = 0xFFC00000\n    var mask41 int = 0x7F800000\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i <= n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // get the mask\n    mask := 0\n    for i := 0; i < num_bits; i++ {\n        mask = mask << 1\n        if i != 0 && i != num_bits - 1 {\n            mask = mask | 1\n        }\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    return (n ^ mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000001\n    return (n ^ (mask & mask2))\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var i int = 1\n    for i < 32 {\n        mask = mask | (mask << 2)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxgfam9yv_test.go:36: expected '%!s(int=15)', got '%!s(int=17179869174)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxgfam9yv_test.go:36: expected '%!s(int=12)', got '%!s(int=17179869173)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxgfam9yv_test.go:36: expected '%!s(int=13)', got '%!s(int=17179869172)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxgfam9yv_test.go:36: expected '%!s(int=127)', got '%!s(int=17179869118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxgfam9yv_test.go:36: expected '%!s(int=115)', got '%!s(int=17179869106)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return (n ^ mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpx0v1bvve_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpx0v1bvve_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpx0v1bvve_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpx0v1bvve_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpx0v1bvve_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // Get the number of bits to toggle\n    num_bits_to_toggle := num_bits - 2\n    // Get the mask\n    mask := 0\n    for i := 0; i < num_bits_to_toggle; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n    // Toggle the bits\n    n = n ^ mask\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9463pmnx_test.go:46: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9463pmnx_test.go:46: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9463pmnx_test.go:46: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9463pmnx_test.go:46: expected '%!s(int=127)', got '%!s(int=31)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9463pmnx_test.go:46: expected '%!s(int=115)', got '%!s(int=31)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // get the number of bits to toggle\n    num_bits := uint(31)\n    // get the mask\n    mask := (1 << num_bits) - 1\n    // get the number to toggle\n    num_to_toggle := n & mask\n    // toggle the number\n    num_to_toggle = num_to_toggle ^ mask\n    // put the first and last bit back\n    num_to_toggle = num_to_toggle | first_bit\n    num_to_toggle = num_to_toggle | last_bit\n    return num_to_toggle\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpfmwv1971_test.go:44: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpfmwv1971_test.go:44: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpfmwv1971_test.go:44: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpfmwv1971_test.go:44: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpfmwv1971_test.go:44: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp6atbvteo_test.go:30: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp6atbvteo_test.go:30: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp6atbvteo_test.go:30: expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp6atbvteo_test.go:30: expected '%!s(int=127)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp6atbvteo_test.go:30: expected '%!s(int=115)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to toggle bits except first and last bit\n    mask := 0xFFFFFFFC\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9rvifjm6_test.go:32: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9rvifjm6_test.go:32: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9rvifjm6_test.go:32: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9rvifjm6_test.go:32: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9rvifjm6_test.go:32: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Get the mask to toggle the bits\n    mask := 0\n    for i := 0; i < num_bits - 2; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n    mask = mask << 1\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmppmzex2qk_test.go:46: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmppmzex2qk_test.go:46: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmppmzex2qk_test.go:46: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmppmzex2qk_test.go:46: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmppmzex2qk_test.go:46: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.011s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 2; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpys84f4f9_test.go:34: expected '%!s(int=15)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpys84f4f9_test.go:34: expected '%!s(int=12)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpys84f4f9_test.go:34: expected '%!s(int=13)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpys84f4f9_test.go:34: expected '%!s(int=127)', got '%!s(int=4294967229)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpys84f4f9_test.go:34: expected '%!s(int=115)', got '%!s(int=4294967217)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFC00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFE000\n    var mask24 int = 0xFFFFF000\n    var mask25 int = 0x7FFFC000\n    var mask26 int = 0xFFFF8000\n    var mask27 int = 0x7FFE0000\n    var mask28 int = 0xFFFC0000\n    var mask29 int = 0x7FE00000\n    var mask30 int = 0xFFF00000\n    var mask31 int = 0x7FC00000\n    var mask32 int = 0xFF800000\n    var mask33 int = 0x7F000000\n    var mask34 int = 0xFE000000\n    var mask35 int = 0x7C000000\n    var mask36 int = 0xF8000000\n    var mask37 int = 0x78000000\n    var mask38 int = 0xF0000000\n    var mask39 int = 0x70000000\n    var mask40 int = 0xE0000000\n    var mask41 int = 0x60000000\n    var mask42 int = 0xC0000000\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpa8hbj1bb_test.go:53:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // remove the first and last bit\n    n = n &^ 1\n    n = n &^ (1 << uint(31))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpljkbunfv_test.go:41: expected '%!s(int=15)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpljkbunfv_test.go:41: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpljkbunfv_test.go:41: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpljkbunfv_test.go:41: expected '%!s(int=127)', got '%!s(int=97)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpljkbunfv_test.go:41: expected '%!s(int=115)', got '%!s(int=107)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for i := n; i > 0; i >>= 1 {\n        num_bits += 1\n    }\n\n    // Get the mask to toggle the bits\n    mask := 0\n    for i := 0; i < num_bits - 2; i++ {\n        mask |= 1 << i\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzzh4abcv_test.go:43: expected '%!s(int=15)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzzh4abcv_test.go:43: expected '%!s(int=12)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzzh4abcv_test.go:43: expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzzh4abcv_test.go:43: expected '%!s(int=127)', got '%!s(int=94)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzzh4abcv_test.go:43: expected '%!s(int=115)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    var first_bit int = mask & (n >> 1)\n    var last_bit int = mask & (n << 1)\n    var middle_bits int = mask & (n >> 1) & (n << 1)\n    var result int = first_bit | last_bit | middle_bits\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpf1p5vg92_test.go:35: expected '%!s(int=15)', got '%!s(int=22)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpf1p5vg92_test.go:35: expected '%!s(int=12)', got '%!s(int=21)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpf1p5vg92_test.go:35: expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpf1p5vg92_test.go:35: expected '%!s(int=127)', got '%!s(int=162)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpf1p5vg92_test.go:35: expected '%!s(int=115)', got '%!s(int=190)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n\n    // Get the mask to toggle the middle bits\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the middle bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxfb9b_1u_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxfb9b_1u_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxfb9b_1u_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxfb9b_1u_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxfb9b_1u_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1))\n    // Get the middle bits\n    middle_bits := n & (^(1 << uint(len(fmt.Sprintf(\"%b\", n)) - 1)))\n    middle_bits = middle_bits & (^1)\n    // Toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // Put the first and last bit back\n    middle_bits = middle_bits | first_bit\n    middle_bits = middle_bits | last_bit\n    return middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxeadg5tm_test.go:41: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxeadg5tm_test.go:41: expected '%!s(int=12)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxeadg5tm_test.go:41: expected '%!s(int=13)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxeadg5tm_test.go:41: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxeadg5tm_test.go:41: expected '%!s(int=115)', got '%!s(int=65)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n    // fmt.Println(num_bits)\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(num_bits - 1))\n    // fmt.Println(first_bit, last_bit)\n    // toggle the middle bits\n    for i := 1; i < num_bits - 1; i++ {\n        n = n ^ (1 << uint(i))\n    }\n    // fmt.Println(n)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122544,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpicnw7bms_test.go:49: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpicnw7bms_test.go:49: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpicnw7bms_test.go:49: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpicnw7bms_test.go:49: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpicnw7bms_test.go:49: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    mask = mask >> 1\n    mask = mask << 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122544,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp2o27u45__test.go:33: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp2o27u45__test.go:33: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp2o27u45__test.go:33: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp2o27u45__test.go:33: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp2o27u45__test.go:33: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to get all bits except first and last\n    mask := (1 << uint(n-2)) - 1\n    // toggle bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpocj6w9aa_test.go:33: expected '%!s(int=15)', got '%!s(int=118)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpocj6w9aa_test.go:33: expected '%!s(int=12)', got '%!s(int=245)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpocj6w9aa_test.go:33: expected '%!s(int=13)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpocj6w9aa_test.go:33: expected '%!s(int=127)', got '%!s(int=9223372036854775742)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpocj6w9aa_test.go:33: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number.\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n    // Get the number of bits to be toggled.\n    num_bits_to_toggle := num_bits - 2\n    // Get the mask to toggle the bits.\n    mask := (1 << uint(num_bits_to_toggle)) - 1\n    // Toggle the bits.\n    return ^(n & mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4or87ub2_test.go:41: expected '%!s(int=15)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4or87ub2_test.go:41: expected '%!s(int=12)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4or87ub2_test.go:41: expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4or87ub2_test.go:41: expected '%!s(int=127)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4or87ub2_test.go:41: expected '%!s(int=115)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122544,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n >>= 1\n        num_bits++\n    }\n\n    // Get the mask for the first and last bits\n    mask := (1 << (num_bits - 1)) | 1\n\n    // Toggle the bits\n    return n ^ (n & ^mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqbj4tzy6_test.go:41: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqbj4tzy6_test.go:41: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqbj4tzy6_test.go:41: expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqbj4tzy6_test.go:41: expected '%!s(int=127)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqbj4tzy6_test.go:41: expected '%!s(int=115)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n\n    var result int = n ^ mask\n    result = result ^ mask2\n    result = result ^ mask3\n    result = result ^ mask4\n\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpyp081a6z_test.go:40: expected '%!s(int=15)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpyp081a6z_test.go:40: expected '%!s(int=12)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpyp081a6z_test.go:40: expected '%!s(int=13)', got '%!s(int=11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpyp081a6z_test.go:40: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpyp081a6z_test.go:40: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        num_bits++\n        n = n >> 1\n    }\n    // get the mask to toggle the bits\n    mask := 0\n    for i := 0; i < num_bits; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n    mask = mask ^ 3\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpyl77v0ch_test.go:43: expected '%!s(int=15)', got '%!s(int=12)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpyl77v0ch_test.go:43: expected '%!s(int=13)', got '%!s(int=12)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpyl77v0ch_test.go:43: expected '%!s(int=127)', got '%!s(int=124)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpyl77v0ch_test.go:43: expected '%!s(int=115)', got '%!s(int=124)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x7FFFFFFC\n    var mask8 int = 0xFFFFFFF8\n    var mask9 int = 0x7FFFFFF8\n    var mask10 int = 0xFFFFFFF0\n    var mask11 int = 0x7FFFFFF0\n    var mask12 int = 0xFFFFFFE0\n    var mask13 int = 0x7FFFFFE0\n    var mask14 int = 0xFFFFFFC0\n    var mask15 int = 0x7FFFFFC0\n    var mask16 int = 0xFFFFFF80\n    var mask17 int = 0x7FFFFF80\n    var mask18 int = 0xFFFFFF00\n    var mask19 int = 0x7FFFFF00\n    var mask20 int = 0xFFFFFE00\n    var mask21 int = 0x7FFFFE00\n    var mask22 int = 0xFFFFFC00\n    var mask23 int = 0x7FFFFC00\n    var mask24 int = 0xFFFFF800\n    var mask25 int = 0x7FFFF800\n    var mask26 int = 0xFFFFF000\n    var mask27 int = 0x7FFFF000\n    var mask28 int = 0xFFFFE000\n    var mask29 int = 0x7FFFE000\n    var mask30 int = 0xFFFFC000\n    var mask31 int = 0x7FFFC000\n    var mask32 int = 0xFFFF8000\n    var mask33 int = 0x7FFF8000\n    var mask34 int = 0xFFFF0000\n    var mask35 int = 0x7FFF0000\n    var mask36 int = 0xFFFE0000\n    var mask37 int = 0x7FFE0000\n    var mask38 int = 0xFFFC0000\n    var mask39 int = 0x7FFC0000\n    var mask40 int = 0xFFF80000\n    var mask41 int = 0x7FF80000\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122545,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmphsslvlyr_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmphsslvlyr_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmphsslvlyr_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmphsslvlyr_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmphsslvlyr_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // TODO: Write - Your - Code\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n    // Create a mask of 1s with the number of bits in the number\n    mask := 0\n    for i := 0; i < num_bits; i++ {\n        mask = mask << 1\n        mask += 1\n    }\n    // Mask out the first and last bits\n    mask = mask ^ (1 << (num_bits - 1))\n    mask = mask ^ 1\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp6bptthae_test.go:46: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp6bptthae_test.go:46: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp6bptthae_test.go:46: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp6bptthae_test.go:46: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp6bptthae_test.go:46: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 1\n    for i < 32 {\n        if i == 1 || i == 31 {\n            i++\n            continue\n        }\n        n = n ^ (mask << i)\n        i++\n    }\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp8qezftzq_test.go:40: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp8qezftzq_test.go:40: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp8qezftzq_test.go:40: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp8qezftzq_test.go:40: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp8qezftzq_test.go:40: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit of the number\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // Remove the first and last bit from the number\n    n = n & (^0 << 1)\n    n = n & (^0 >> 1)\n    // Toggle the middle bits\n    n = n ^ (^0 >> 1)\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp40dk0hac_test.go:41: expected '%!s(int=15)', got '%!s(int=-9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp40dk0hac_test.go:41: expected '%!s(int=12)', got '%!s(int=-11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp40dk0hac_test.go:41: expected '%!s(int=13)', got '%!s(int=-11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp40dk0hac_test.go:41: expected '%!s(int=127)', got '%!s(int=-65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp40dk0hac_test.go:41: expected '%!s(int=115)', got '%!s(int=-77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n\n    var mask6 int = 0x80000001\n    var mask7 int = 0x7FFFFFFD\n\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x00000003\n\n    var mask10 int = 0xFFFFFFFB\n    var mask11 int = 0x00000004\n\n    var mask12 int = 0xFFFFFFF7\n    var mask13 int = 0x00000008\n\n    var mask14 int = 0xFFFFFFEF\n    var mask15 int = 0x00000010\n\n    var mask16 int = 0xFFFFFFDF\n    var mask17 int = 0x00000020\n\n    var mask18 int = 0xFFFFFFBF\n    var mask19 int = 0x00000040\n\n    var mask20 int = 0xFFFFFF7F\n    var mask21 int = 0x00000080\n\n    var mask22 int = 0xFFFFFEFF\n    var mask23 int = 0x00000100\n\n    var mask24 int = 0xFFFFFDFF\n    var mask25 int = 0x00000200\n\n    var mask26 int = 0xFFFFFBFF\n    var mask27 int = 0x00000400\n\n    var mask28 int = 0xFFFFF7FF\n    var mask29 int = 0x00000800\n\n    var mask30 int = 0xFFFFEFFF\n    var mask31 int = 0x00001000\n\n    var mask32 int = 0xFFFFDFFF\n    var mask33 int = 0x00002000\n\n    var mask34 int = 0xFFFFBFFF\n    var mask35 int = 0x00004000\n\n    var mask36 int = 0xFFFF7FFF\n    var mask37 int = 0x00008000\n\n    var mask38 int = 0xFFFEFFFF\n    var mask39 int = 0x00010000\n\n    var mask40 int = 0xFFFDFFFF\n    var mask41 int = 0x00020000\n\n    var mask42 int = 0xFFFBFFFF\n    var mask43 int = 0x00040000\n\n    var mask44 int\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpvqfgrjg5_test.go:74:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the position of the first set bit from right.\n    first_set_bit_pos := 0\n    for i := 0; i < 32; i++ {\n        if (n & (1 << i)) != 0 {\n            first_set_bit_pos = i\n            break\n        }\n    }\n\n    // Get the position of the last set bit from right.\n    last_set_bit_pos := 0\n    for i := 31; i >= 0; i-- {\n        if (n & (1 << i)) != 0 {\n            last_set_bit_pos = i\n            break\n        }\n    }\n\n    // Toggle all bits between first and last set bit.\n    for i := first_set_bit_pos + 1; i < last_set_bit_pos; i++ {\n        n = n ^ (1 << i)\n    }\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp_b5szmkw_test.go:53: expected '%!s(int=12)', got '%!s(int=14)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 1\n    var i = 1\n    for i < 32 {\n        if i == 1 || i == 31 {\n            i++\n            continue\n        }\n        mask = mask | (1 << i)\n        i++\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpynp03cye_test.go:40: expected '%!s(int=15)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpynp03cye_test.go:40: expected '%!s(int=12)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpynp03cye_test.go:40: expected '%!s(int=13)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpynp03cye_test.go:40: expected '%!s(int=127)', got '%!s(int=2147483580)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpynp03cye_test.go:40: expected '%!s(int=115)', got '%!s(int=2147483568)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 1\n    for i < 31 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp134alsas_test.go:36: expected '%!s(int=15)', got '%!s(int=715827874)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp134alsas_test.go:36: expected '%!s(int=12)', got '%!s(int=715827873)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp134alsas_test.go:36: expected '%!s(int=13)', got '%!s(int=715827872)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp134alsas_test.go:36: expected '%!s(int=127)', got '%!s(int=715827946)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp134alsas_test.go:36: expected '%!s(int=115)', got '%!s(int=715827942)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Get the mask to toggle the bits\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp4k5p8pld_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp4k5p8pld_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp4k5p8pld_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp4k5p8pld_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp4k5p8pld_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp8x87t3j2_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint = 1\n    var j uint = uint(n) - 2\n    var mask uint = (1 << j) - 1\n    mask = mask | (1 << i)\n    return int(n ^ mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmps9rvk_c8_test.go:14:18: invalid operation: n ^ mask (mismatched types int and uint)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 0\n    for i = 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            mask = mask << 1\n            continue\n        }\n        mask = mask << 1\n        mask = mask | 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwvtlbm_j_test.go:40: expected '%!s(int=15)', got '%!s(int=3221225463)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwvtlbm_j_test.go:40: expected '%!s(int=12)', got '%!s(int=3221225460)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwvtlbm_j_test.go:40: expected '%!s(int=13)', got '%!s(int=3221225461)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwvtlbm_j_test.go:40: expected '%!s(int=127)', got '%!s(int=3221225407)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwvtlbm_j_test.go:40: expected '%!s(int=115)', got '%!s(int=3221225395)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7fffffff\n    var result = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpcs7l7yjs_test.go:32: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpcs7l7yjs_test.go:32: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpcs7l7yjs_test.go:32: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpcs7l7yjs_test.go:32: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpcs7l7yjs_test.go:32: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFC\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFF8\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF0\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFE0\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFC0\n    var mask21 int = 0x800003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFF80\n    var mask24 int = 0x800007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFF00\n    var mask27 int = 0x80000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFE00\n    var mask30 int = 0x80001FF\n    var mask31 int = 0xFFFFC00\n    var mask32 int = 0x7FFC00\n    var mask33 int = 0x80003FF\n    var mask34 int = 0xFFFF800\n    var mask35 int = 0x7FF800\n    var mask36 int = 0x80007FF\n    var mask37 int = 0xFFFF000\n    var mask38 int = 0x7FF000\n    var mask39 int = 0x8000FFF\n    var mask40 int = 0xFFFE000\n    var mask41 int = 0x7FE000\n    var mask42 int = 0\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122546,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp5kgfergc_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var i int = 1\n    for i < 32 {\n        if i % 2 == 1 {\n            mask = mask | (1 << i)\n        }\n        i = i + 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpy3fy4uq__test.go:38: expected '%!s(int=15)', got '%!s(int=2863311522)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpy3fy4uq__test.go:38: expected '%!s(int=12)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpy3fy4uq__test.go:38: expected '%!s(int=13)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpy3fy4uq__test.go:38: expected '%!s(int=127)', got '%!s(int=2863311594)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpy3fy4uq__test.go:38: expected '%!s(int=115)', got '%!s(int=2863311590)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // clear the first and last bit\n    n = n & (^1)\n    n = n & (^(1 << uint(31)))\n    // toggle the middle bits\n    n = n ^ (n >> 1)\n    // set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9c06y8a3_test.go:41: expected '%!s(int=15)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9c06y8a3_test.go:41: expected '%!s(int=12)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9c06y8a3_test.go:41: expected '%!s(int=13)', got '%!s(int=15)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9c06y8a3_test.go:41: expected '%!s(int=127)', got '%!s(int=97)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9c06y8a3_test.go:41: expected '%!s(int=115)', got '%!s(int=107)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFE0\n    var mask27 int = 0x800001FF\n    var mask28 int = 0xFFFFFC00\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x800003FF\n    var mask31 int = 0xFFFFF800\n    var mask32 int = 0x7FFFFF00\n    var mask33 int = 0x800007FF\n    var mask34 int = 0xFFFFF000\n    var mask35 int = 0x7FFFFC00\n    var mask36 int = 0x80001FFF\n    var mask37 int = 0xFFFFC000\n    var mask38 int = 0x7FFFF800\n    var mask39 int = 0x80003FFF\n    var mask40 int = 0xFFFF8000\n    var mask41 int = 0x7FF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122547,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpphjeqkmu_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122544,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpbobibwxu_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint\n    var mask int = 0\n    var result int = 0\n    var count int = 0\n    var first_bit int = 0\n    var last_bit int = 0\n    var first_bit_mask int = 0\n    var last_bit_mask int = 0\n\n    // get first bit\n    first_bit = n & 1\n    first_bit_mask = first_bit << 31\n    // get last bit\n    last_bit = n & (1 << 31)\n    last_bit_mask = last_bit >> 31\n\n    for i = 1; i < 31; i++ {\n        mask = 1 << i\n        if n & mask == 0 {\n            result = result | mask\n        }\n        count++\n    }\n\n    result = result | first_bit_mask\n    result = result | last_bit_mask\n\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpndowkcwk_test.go:57: expected '%!s(int=15)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpndowkcwk_test.go:57: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpndowkcwk_test.go:57: expected '%!s(int=13)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpndowkcwk_test.go:57: expected '%!s(int=127)', got '%!s(int=4294967230)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpndowkcwk_test.go:57: expected '%!s(int=115)', got '%!s(int=4294967218)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n\n    var first_bit int = n & mask2\n    var last_bit int = n & mask3\n    var middle_bits int = n & mask5\n\n    var result int = first_bit | last_bit | middle_bits\n\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpey3ku1z2_test.go:10:9: mask declared but not used\n/tmp/tmpey3ku1z2_test.go:13:9: mask4 declared but not used\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Create a mask with all bits set except the first and last bit\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // get the middle bits\n    middle_bits := n & (^(1 << uint(31))) & (^1)\n    // toggle the middle bits\n    middle_bits = middle_bits ^ middle_bits\n    // put the first and last bit back\n    return first_bit | middle_bits | last_bit\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpq_sdeto9_test.go:38: expected '%!s(int=15)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpq_sdeto9_test.go:38: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpq_sdeto9_test.go:38: expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpq_sdeto9_test.go:38: expected '%!s(int=127)', got '%!s(int=1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpq_sdeto9_test.go:38: expected '%!s(int=115)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Create a mask with all bits set except the first and last bit\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122548,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp01hgk6n4_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 0\n    for i = 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpbfpxr7of_test.go:35: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpbfpxr7of_test.go:35: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpbfpxr7of_test.go:35: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpbfpxr7of_test.go:35: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpbfpxr7of_test.go:35: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 31 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpxn0obc_z_test.go:36: expected '%!s(int=15)', got '%!s(int=715827875)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpxn0obc_z_test.go:36: expected '%!s(int=12)', got '%!s(int=715827872)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpxn0obc_z_test.go:36: expected '%!s(int=13)', got '%!s(int=715827873)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpxn0obc_z_test.go:36: expected '%!s(int=127)', got '%!s(int=715827947)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpxn0obc_z_test.go:36: expected '%!s(int=115)', got '%!s(int=715827943)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // mask to toggle the middle bits\n    mask := 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp99zvx392_test.go:32: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp99zvx392_test.go:32: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp99zvx392_test.go:32: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp99zvx392_test.go:32: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp99zvx392_test.go:32: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit of the number\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // Toggle all the bits except the first and last bit\n    n = n ^ 0xFFFFFFFE\n    // Add the first and last bit back\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpoou9_6b2_test.go:38: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpoou9_6b2_test.go:38: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpoou9_6b2_test.go:38: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpoou9_6b2_test.go:38: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpoou9_6b2_test.go:38: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Get the mask for the first and last bit\n    mask := (1 << uint(num_bits)) - 1\n\n    // Toggle the middle bits\n    return n ^ (mask ^ (1 << 1))\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpvolosd7q_test.go:41: expected '%!s(int=15)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpvolosd7q_test.go:41: expected '%!s(int=12)', got '%!s(int=13)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpvolosd7q_test.go:41: expected '%!s(int=127)', got '%!s(int=125)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpvolosd7q_test.go:41: expected '%!s(int=115)', got '%!s(int=125)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000001\n    return (n ^ mask) ^ mask2\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122550,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9r3b09ro_test.go:32: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9r3b09ro_test.go:32: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9r3b09ro_test.go:32: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9r3b09ro_test.go:32: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9r3b09ro_test.go:32: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Create a mask to toggle the middle bits\n    mask := 0\n    for i := 0; i < num_bits - 2; i++ {\n        mask = mask << 1\n        mask = mask | 1\n    }\n    mask = mask << 1\n    mask = mask | 1\n\n    // Toggle the middle bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122550,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp8z_3zog6_test.go:47: expected '%!s(int=15)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp8z_3zog6_test.go:47: expected '%!s(int=12)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp8z_3zog6_test.go:47: expected '%!s(int=13)', got '%!s(int=7)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp8z_3zog6_test.go:47: expected '%!s(int=127)', got '%!s(int=63)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp8z_3zog6_test.go:47: expected '%!s(int=115)', got '%!s(int=63)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7FFFFFFF\n    var mask2 = 0x80000000\n    var mask3 = 0x00000001\n    var temp = n & mask\n    var temp2 = n & mask2\n    var temp3 = n & mask3\n    var result = temp ^ temp2 ^ temp3\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122550,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpsl33yxku_test.go:37: expected '%!s(int=15)', got '%!s(int=8)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpsl33yxku_test.go:37: expected '%!s(int=12)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpsl33yxku_test.go:37: expected '%!s(int=13)', got '%!s(int=10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpsl33yxku_test.go:37: expected '%!s(int=127)', got '%!s(int=64)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpsl33yxku_test.go:37: expected '%!s(int=115)', got '%!s(int=76)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n\n    // Toggle all bits except the first and last bit\n    n = n ^ 0xFFFFFFFE\n\n    // Set the first and last bit\n    n = n | first_bit\n    n = n | last_bit\n\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpg3he2xfy_test.go:41: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpg3he2xfy_test.go:41: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpg3he2xfy_test.go:41: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpg3he2xfy_test.go:41: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpg3he2xfy_test.go:41: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpoc3j83at_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpoc3j83at_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpoc3j83at_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpoc3j83at_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpoc3j83at_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFEF\n    var mask11 int = 0xFFFFFFDF\n    var mask12 int = 0x00000010\n    var mask13 int = 0xFFFFFFEF\n    var mask14 int = 0xFFFFFFBF\n    var mask15 int = 0x00000020\n    var mask16 int = 0xFFFFFFDF\n    var mask17 int = 0xFFFFFF7F\n    var mask18 int = 0x00000040\n    var mask19 int = 0xFFFFFFBF\n    var mask20 int = 0xFFFFFEFF\n    var mask21 int = 0x00000080\n    var mask22 int = 0xFFFFFF7F\n    var mask23 int = 0xFFFFFDFF\n    var mask24 int = 0x00000100\n    var mask25 int = 0xFFFFFEFF\n    var mask26 int = 0xFFFFFBFF\n    var mask27 int = 0x00000200\n    var mask28 int = 0xFFFFFDFF\n    var mask29 int = 0xFFFFF7FF\n    var mask30 int = 0x00000400\n    var mask31 int = 0xFFFFFBFF\n    var mask32 int = 0xFFFFEFFF\n    var mask33 int = 0x00000800\n    var mask34 int = 0xFFFFF7FF\n    var mask35 int = 0xFFFFDFFF\n    var mask36 int = 0x00001000\n    var mask37 int = 0xFFFFEFFF\n    var mask38 int = 0xFFFFBFFF\n    var mask39 int = 0x00002000\n    var mask40 int = 0xFFFFDFFF\n    var mask41 int = 0xFFFF7FFF\n    var mask42 int = 0x00004000\n    var mask43 int = 0xFFFFBFFF\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122549,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmpdqrxx37w_test.go:54:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 31; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpn7670prs_test.go:34: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpn7670prs_test.go:34: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpn7670prs_test.go:34: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpn7670prs_test.go:34: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpn7670prs_test.go:34: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits += 1\n    }\n\n    // Get the mask to toggle the bits\n    mask := 0\n    for i := 1; i < num_bits - 1; i++ {\n        mask = mask | (1 << i)\n    }\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9ssikz_i_test.go:44: expected '%!s(int=15)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9ssikz_i_test.go:44: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9ssikz_i_test.go:44: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9ssikz_i_test.go:44: expected '%!s(int=127)', got '%!s(int=62)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9ssikz_i_test.go:44: expected '%!s(int=115)', got '%!s(int=62)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // get the mask\n    mask := (1 << (num_bits - 2)) - 1\n\n    // toggle the bits\n    return ^(n & mask)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpf8ez3oea_test.go:41: expected '%!s(int=15)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpf8ez3oea_test.go:41: expected '%!s(int=12)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpf8ez3oea_test.go:41: expected '%!s(int=13)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpf8ez3oea_test.go:41: expected '%!s(int=127)', got '%!s(int=-1)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpf8ez3oea_test.go:41: expected '%!s(int=115)', got '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n\n    // Create a mask with all bits set except the first and last bit\n    mask := (1 << (num_bits - 1)) - 1\n    mask = mask ^ (1 << 1)\n\n    // Toggle the bits\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp6bvwqqre_test.go:42: expected '%!s(int=15)', got '%!s(int=5)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp6bvwqqre_test.go:42: expected '%!s(int=12)', got '%!s(int=5)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp6bvwqqre_test.go:42: expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp6bvwqqre_test.go:42: expected '%!s(int=127)', got '%!s(int=61)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp6bvwqqre_test.go:42: expected '%!s(int=115)', got '%!s(int=61)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // We need to create a mask to toggle the bits.\n    // The mask should be like:\n    // 11111111111111111111111111111100\n    // We can create this mask by doing:\n    // -1 << 2\n    // -1 is all 1s\n    // << 2 means shift the bits 2 places to the left\n    // So we have:\n    // 11111111111111111111111111111100\n    // We can then do a bitwise AND with this mask and the number to toggle the bits.\n    mask := -1 << 2\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp829efb6n_test.go:41: expected '%!s(int=15)', got '%!s(int=-11)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp829efb6n_test.go:41: expected '%!s(int=12)', got '%!s(int=-10)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp829efb6n_test.go:41: expected '%!s(int=13)', got '%!s(int=-9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp829efb6n_test.go:41: expected '%!s(int=127)', got '%!s(int=-67)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp829efb6n_test.go:41: expected '%!s(int=115)', got '%!s(int=-79)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 0\n    for i < 31 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp9ov0tu0r_test.go:36: expected '%!s(int=15)', got '%!s(int=1431655772)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp9ov0tu0r_test.go:36: expected '%!s(int=12)', got '%!s(int=1431655775)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp9ov0tu0r_test.go:36: expected '%!s(int=13)', got '%!s(int=1431655774)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp9ov0tu0r_test.go:36: expected '%!s(int=127)', got '%!s(int=1431655700)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp9ov0tu0r_test.go:36: expected '%!s(int=115)', got '%!s(int=1431655704)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7fffffff\n    var mask2 int = 0x80000001\n    return (n ^ mask) ^ mask2\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmplrddx_pv_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmplrddx_pv_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmplrddx_pv_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967285)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmplrddx_pv_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967231)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmplrddx_pv_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967219)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // TODO: implement\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmprvxpqm3d_test.go:31: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmprvxpqm3d_test.go:31: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmprvxpqm3d_test.go:31: expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmprvxpqm3d_test.go:31: expected '%!s(int=127)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmprvxpqm3d_test.go:31: expected '%!s(int=115)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 1; i < 32; i++ {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for n > 0 {\n        result = result << 1\n        result = result | (n & mask)\n        n = n >> 2\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpo523xgxf_test.go:37: expected '%!s(int=15)', got '%!s(int=2)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpo523xgxf_test.go:37: expected '%!s(int=12)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpo523xgxf_test.go:37: expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpo523xgxf_test.go:37: expected '%!s(int=127)', got '%!s(int=9)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpo523xgxf_test.go:37: expected '%!s(int=115)', got '%!s(int=13)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = (1 << uint(n)) - 1\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjhytp820_test.go:31: expected '%!s(int=15)', got '%!s(int=502)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjhytp820_test.go:31: expected '%!s(int=12)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjhytp820_test.go:31: expected '%!s(int=13)', got '%!s(int=2036)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjhytp820_test.go:31: expected '%!s(int=127)', got '%!s(int=-66)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjhytp820_test.go:31: expected '%!s(int=115)', got '%!s(int=-78)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFE\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpwiystvvk_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = (1 << uint(n)) - 1\n    mask = mask ^ (mask >> 1)\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmplldf9w60_test.go:32: expected '%!s(int=15)', got '%!s(int=265)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmplldf9w60_test.go:32: expected '%!s(int=12)', got '%!s(int=522)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmplldf9w60_test.go:32: expected '%!s(int=13)', got '%!s(int=1035)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmplldf9w60_test.go:32: expected '%!s(int=127)', got '%!s(int=65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmplldf9w60_test.go:32: expected '%!s(int=115)', got '%!s(int=77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // We need to create a mask that has all the bits set except the first and the last bit.\n    // We can do this by creating a mask that has all the bits set and then unsetting the first and the last bit.\n    mask := (1 << uint(n)) - 1\n    mask = mask ^ (1 << uint(n-1))\n    mask = mask ^ (1 << uint(0))\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpawe3pr0s_test.go:35: expected '%!s(int=15)', got '%!s(int=247)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpawe3pr0s_test.go:35: expected '%!s(int=12)', got '%!s(int=500)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpawe3pr0s_test.go:35: expected '%!s(int=13)', got '%!s(int=1013)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpawe3pr0s_test.go:35: expected '%!s(int=127)', got '%!s(int=-65)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpawe3pr0s_test.go:35: expected '%!s(int=115)', got '%!s(int=-77)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    for i := 0; i < 32; i++ {\n        if i != 0 && i != 31 {\n            mask += 1 << i\n        }\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp_s79ooyq_test.go:36: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp_s79ooyq_test.go:36: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp_s79ooyq_test.go:36: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp_s79ooyq_test.go:36: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp_s79ooyq_test.go:36: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0xFFFFFFFC\n    var mask7 int = 0x80000001\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000002\n    var mask10 int = 0x7FFFFFFC\n    var mask11 int = 0x80000003\n    var mask12 int = 0x7FFFFFFB\n    var mask13 int = 0x80000004\n    var mask14 int = 0x7FFFFFFA\n    var mask15 int = 0x80000005\n    var mask16 int = 0x7FFFFFF9\n    var mask17 int = 0x80000006\n    var mask18 int = 0x7FFFFFF8\n    var mask19 int = 0x80000007\n    var mask20 int = 0x7FFFFFF7\n    var mask21 int = 0x80000008\n    var mask22 int = 0x7FFFFFF6\n    var mask23 int = 0x80000009\n    var mask24 int = 0x7FFFFFF5\n    var mask25 int = 0x8000000A\n    var mask26 int = 0x7FFFFFF4\n    var mask27 int = 0x8000000B\n    var mask28 int = 0x7FFFFFF3\n    var mask29 int = 0x8000000C\n    var mask30 int = 0x7FFFFFF2\n    var mask31 int = 0x8000000D\n    var mask32 int = 0x7FFFFFF1\n    var mask33 int = 0x8000000E\n    var mask34 int = 0x7FFFFFF0\n    var mask35 int = 0x8000000F\n    var mask36 int = 0x7FFFFFEF\n    var mask37 int = 0x80000010\n    var mask38 int = 0x7FFFFFEE\n    var mask39 int = 0x80000011\n    var mask40 int = 0x7FFFFFED\n    var mask41 int = 0x80000012\n    var mask\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmprr49_9_y_test.go:51:9: missing variable type or initialization\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    //return n\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000003\n    var mask7 int = 0xFFFFFFF8\n    var mask8 int = 0xFFFFFFF0\n    var mask9 int = 0x0000000F\n    var mask10 int = 0xFFFFFF0F\n    var mask11 int = 0xFFFFFF00\n    var mask12 int = 0x000000FF\n    var mask13 int = 0xFFFF00FF\n    var mask14 int = 0xFFFF0000\n    var mask15 int = 0x0000FFFF\n    var mask16 int = 0xFF00FFFF\n    var mask17 int = 0xFF0000FF\n    var mask18 int = 0x00FFFFFF\n    var mask19 int = 0xFFFFFF\n    var mask20 int = 0xFF00FF00\n    var mask21 int = 0x00FF00FF\n    var mask22 int = 0x00FFFF00\n    var mask23 int = 0xFFFF00\n    var mask24 int = 0xFF0000\n    var mask25 int = 0xFF00\n    var mask26 int = 0xFF\n    var mask27 int = 0xFFFFFF00\n    var mask28 int = 0x00FFFFFF\n    var mask29 int = 0xFFFF00FF\n    var mask30 int = 0xFF00FFFF\n    var mask31 int = 0xFFFFFF00\n    var mask32 int = 0x00FFFFFF\n    var mask33 int = 0xFFFF00FF\n    var mask34 int = 0xFF00FFFF\n    var mask35 int = 0xFFFFFF00\n    var mask36 int = 0x00FFFFFF\n    var mask37 int = 0xFFFF00FF\n    var mask38 int = 0xFF00FFFF\n    var mask39 int = 0xFFFFFF00\n    var mask40 int = 0x00FFFFFF\n    var mask41 int = 0xFFFF00FF\n    var mask42 int = 0xFF00FFFF\n    var mask43 int = 0xFFFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122550,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp5mvbjbc2_test.go:54:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111101\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967228)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967216)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // Get the mask for the first and last bits\n    first_bit_mask := 1 << (num_bits - 1)\n    last_bit_mask := 1\n    // Get the mask for the middle bits\n    middle_bits_mask := (first_bit_mask | last_bit_mask) ^ (1 << num_bits) - 1\n    // Toggle the middle bits\n    return n ^ middle_bits_mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpjfnmz8lm_test.go:42: expected '%!s(int=15)', got '%!s(int=24)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpjfnmz8lm_test.go:42: expected '%!s(int=12)', got '%!s(int=24)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpjfnmz8lm_test.go:42: expected '%!s(int=13)', got '%!s(int=24)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpjfnmz8lm_test.go:42: expected '%!s(int=127)', got '%!s(int=192)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpjfnmz8lm_test.go:42: expected '%!s(int=115)', got '%!s(int=192)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < n {\n        mask = mask | i\n        i = i << 1\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFE\n    var mask8 int = 0x7FFFFFFE\n    var mask9 int = 0x80000001\n    var mask10 int = 0x00000001\n    var mask11 int = 0xFFFFFFFE\n    var mask12 int = 0x7FFFFFFE\n    var mask13 int = 0x80000001\n    var mask14 int = 0x00000001\n    var mask15 int = 0xFFFFFFFE\n    var mask16 int = 0x7FFFFFFE\n    var mask17 int = 0x80000001\n    var mask18 int = 0x00000001\n    var mask19 int = 0xFFFFFFFE\n    var mask20 int = 0x7FFFFFFE\n    var mask21 int = 0x80000001\n    var mask22 int = 0x00000001\n    var mask23 int = 0xFFFFFFFE\n    var mask24 int = 0x7FFFFFFE\n    var mask25 int = 0x80000001\n    var mask26 int = 0x00000001\n    var mask27 int = 0xFFFFFFFE\n    var mask28 int = 0x7FFFFFFE\n    var mask29 int = 0x80000001\n    var mask30 int = 0x00000001\n    var mask31 int = 0xFFFFFFFE\n    var mask32 int = 0x7FFFFFFE\n    var mask33 int = 0x80000001\n    var mask34 int = 0x00000001\n    var mask35 int = 0xFFFFFFFE\n    var mask36 int = 0x7FFFFFFE\n    var mask37 int = 0x80000001\n    var mask38 int = 0x00000001\n    var mask39 int = 0xFFFFFFFE\n    var mask40 int = 0x7FFFFFFE\n    var mask41 int = 0x80000001\n    var mask42 int = 0x00000001\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122551,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp9nnwl7c4_test.go:52:24: hexadecimal literal has no digits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result |= (n & mask) << i\n        } else {\n            result |= (n & mask) << i ^ mask << i\n        }\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpqcy8495b_test.go:39: expected '%!s(int=15)', got '%!s(int=4294967293)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpqcy8495b_test.go:39: expected '%!s(int=12)', got '%!s(int=6442450942)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpqcy8495b_test.go:39: expected '%!s(int=13)', got '%!s(int=6442450947)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpqcy8495b_test.go:39: expected '%!s(int=127)', got '%!s(int=4294967293)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpqcy8495b_test.go:39: expected '%!s(int=115)', got '%!s(int=4294967293)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11\n    var result int = 0\n    for i := 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | (^n & mask)\n        }\n        n = n >> 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpphkozwv9_test.go:40: expected '%!s(int=15)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpphkozwv9_test.go:40: expected '%!s(int=12)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpphkozwv9_test.go:40: expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpphkozwv9_test.go:40: expected '%!s(int=127)', got '%!s(int=3)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpphkozwv9_test.go:40: expected '%!s(int=115)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0x00000002\n    var mask8 int = 0xFFFFFFFC\n    var mask9 int = 0x7FFFFFFC\n    var mask10 int = 0x80000003\n    var mask11 int = 0x00000004\n    var mask12 int = 0xFFFFFFF8\n    var mask13 int = 0x7FFFFFF8\n    var mask14 int = 0x80000007\n    var mask15 int = 0x00000008\n    var mask16 int = 0xFFFFFFF0\n    var mask17 int = 0x7FFFFFF0\n    var mask18 int = 0x8000000F\n    var mask19 int = 0x00000010\n    var mask20 int = 0xFFFFFFE0\n    var mask21 int = 0x7FFFFFE0\n    var mask22 int = 0x8000001F\n    var mask23 int = 0x00000020\n    var mask24 int = 0xFFFFFFC0\n    var mask25 int = 0x7FFFFFC0\n    var mask26 int = 0x8000003F\n    var mask27 int = 0x00000040\n    var mask28 int = 0xFFFFFF80\n    var mask29 int = 0x7FFFFF80\n    var mask30 int = 0x8000007F\n    var mask31 int = 0x00000080\n    var mask32 int = 0xFFFFFF00\n    var mask33 int = 0x7FFFFF00\n    var mask34 int = 0x800000FF\n    var mask35 int = 0x00000100\n    var mask36 int = 0xFFFFFE00\n    var mask37 int = 0x7FFFFE00\n    var mask38 int = 0x800001FF\n    var mask39 int = 0x00000200\n    var mask40 int = 0xFFFFFC00\n    var mask41 int = 0x7FFFFC00\n    var mask42 int = 0x800003\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509773,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmp8x87t3j2_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // get the number of bits in the number\n    num_bits := 0\n    for n > 0 {\n        n = n >> 1\n        num_bits++\n    }\n    // get the mask for the first and last bits\n    mask := (1 << uint(num_bits)) - 1\n    // get the mask for the middle bits\n    mask = mask ^ ((1 << uint(num_bits - 2)) - 1)\n    // toggle the middle bits\n    n = n ^ mask\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp7mybdu_z_test.go:42: expected '%!s(int=15)', got '%!s(int=12)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp7mybdu_z_test.go:42: expected '%!s(int=13)', got '%!s(int=12)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp7mybdu_z_test.go:42: expected '%!s(int=127)', got '%!s(int=96)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp7mybdu_z_test.go:42: expected '%!s(int=115)', got '%!s(int=96)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFC\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFF8\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF0\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFE0\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFC0\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFF80\n    var mask24 int = 0x80000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFF00\n    var mask27 int = 0x8000000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFE00\n    var mask30 int = 0x8000001FF\n    var mask31 int = 0xFFFFC00\n    var mask32 int = 0x7FFC00\n    var mask33 int = 0x8000003FF\n    var mask34 int = 0xFFFF800\n    var mask35 int = 0x7FF800\n    var mask36 int = 0x80000007FF\n    var mask37 int = 0xFFFF000\n    var mask38 int = 0x7FF000\n    var mask39 int = 0x8000000FFF\n    var mask40 int = 0xFFFE000\n    var mask41 int = 0x7FE000\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmph55tr_31_test.go:52:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // TODO\n    return 0\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp8dqcjnmw_test.go:31: expected '%!s(int=15)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp8dqcjnmw_test.go:31: expected '%!s(int=12)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp8dqcjnmw_test.go:31: expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp8dqcjnmw_test.go:31: expected '%!s(int=127)', got '%!s(int=0)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp8dqcjnmw_test.go:31: expected '%!s(int=115)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0x7ffffffe\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp8n6fqanv_test.go:31: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp8n6fqanv_test.go:31: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp8n6fqanv_test.go:31: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp8n6fqanv_test.go:31: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp8n6fqanv_test.go:31: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var result int = n ^ mask\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpfj0siq94_test.go:32: expected '%!s(int=15)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpfj0siq94_test.go:32: expected '%!s(int=12)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpfj0siq94_test.go:32: expected '%!s(int=13)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpfj0siq94_test.go:32: expected '%!s(int=127)', got '%!s(int=2147483582)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpfj0siq94_test.go:32: expected '%!s(int=115)', got '%!s(int=2147483570)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i += 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmps7c_2jsf_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0xFFFFFFFC\n    var mask6 int = 0x00000002\n    var mask7 int = 0xFFFFFFFB\n    var mask8 int = 0xFFFFFFF7\n    var mask9 int = 0x00000004\n    var mask10 int = 0xFFFFFFF3\n    var mask11 int = 0xFFFFFFE7\n    var mask12 int = 0x00000008\n    var mask13 int = 0xFFFFFFD7\n    var mask14 int = 0xFFFFFFAF\n    var mask15 int = 0x00000010\n    var mask16 int = 0xFFFFFF6F\n    var mask17 int = 0xFFFFFEFF\n    var mask18 int = 0x00000020\n    var mask19 int = 0xFFFFFDFF\n    var mask20 int = 0xFFFFFBFF\n    var mask21 int = 0x00000040\n    var mask22 int = 0xFFFFF7FF\n    var mask23 int = 0xFFFFEFFF\n    var mask24 int = 0x00000080\n    var mask25 int = 0xFFFFDFFF\n    var mask26 int = 0xFFFFBFFF\n    var mask27 int = 0x00000100\n    var mask28 int = 0xFFFF7FFF\n    var mask29 int = 0xFFFEFFFF\n    var mask30 int = 0x00000200\n    var mask31 int = 0xFFFDFFFF\n    var mask32 int = 0xFFFBFFFF\n    var mask33 int = 0x00000400\n    var mask34 int = 0xFFF7FFFF\n    var mask35 int = 0xFFEFFFFF\n    var mask36 int = 0x00000800\n    var mask37 int = 0xFFDFFFFF\n    var mask38 int = 0xFFBFFFFF\n    var mask39 int = 0x00001000\n    var mask40 int = 0xFF7FFFFF\n    var mask41 int = 0xFEFFFFFF\n    var mask42 int = 0x00002000\n    var mask43 int = 0x\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111101\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=15)', got '%!s(int=4294967284)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=12)', got '%!s(int=4294967287)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=13)', got '%!s(int=4294967286)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=127)', got '%!s(int=4294967228)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpf1wsojsu_test.go:31: expected '%!s(int=115)', got '%!s(int=4294967216)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0b11111111111111111111111111111111\n    var first_bit int = 0b10000000000000000000000000000000\n    var last_bit int = 0b00000000000000000000000000000001\n    var middle_bits int = mask ^ (first_bit | last_bit)\n    return n ^ middle_bits\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp__kuauq7_test.go:34: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp__kuauq7_test.go:34: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp__kuauq7_test.go:34: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp__kuauq7_test.go:34: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp__kuauq7_test.go:34: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var i uint\n    var mask uint = 0xFFFFFFFF\n    var result uint = 0\n\n    for i = 1; i < 31; i++ {\n        result = result | ((n & (1 << i)) << 1)\n    }\n\n    return int(result)\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "FAIL\tcommand-line-arguments [build failed]\nFAIL\n",
      "stderr": "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpq4_luv5a_test.go:15:25: invalid operation: result | n & (1 << i) << 1 (mismatched types uint and int)\n",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 1\n    var i int = 0\n    var result int = 0\n    for i = 0; i < 32; i++ {\n        if i == 0 || i == 31 {\n            result = result | (n & mask)\n        } else {\n            result = result | ((n & mask) ^ mask)\n        }\n        mask = mask << 1\n    }\n    return result\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmp0oxc6ao8_test.go:41: expected '%!s(int=15)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmp0oxc6ao8_test.go:41: expected '%!s(int=12)', got '%!s(int=2147483636)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmp0oxc6ao8_test.go:41: expected '%!s(int=13)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmp0oxc6ao8_test.go:41: expected '%!s(int=127)', got '%!s(int=2147483583)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmp0oxc6ao8_test.go:41: expected '%!s(int=115)', got '%!s(int=2147483571)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask = 0\n    var i = 0\n    for i = 1; i < 32; i++ {\n        if i == 1 || i == 31 {\n            continue\n        }\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpgkvfosiq_test.go:38: expected '%!s(int=15)', got '%!s(int=2147483637)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpgkvfosiq_test.go:38: expected '%!s(int=12)', got '%!s(int=2147483638)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpgkvfosiq_test.go:38: expected '%!s(int=13)', got '%!s(int=2147483639)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpgkvfosiq_test.go:38: expected '%!s(int=127)', got '%!s(int=2147483581)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpgkvfosiq_test.go:38: expected '%!s(int=115)', got '%!s(int=2147483569)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    // Get the first and last bit of the number.\n    first_bit := n & 1\n    last_bit := n & (1 << uint(31))\n    // Get the number of bits in the number.\n    num_bits := 0\n    for i := 0; i < 32; i++ {\n        if n & (1 << uint(i)) != 0 {\n            num_bits = i + 1\n        }\n    }\n    // Toggle the middle bits.\n    for i := 1; i < num_bits - 1; i++ {\n        n ^= (1 << uint(i))\n    }\n    // Set the first and last bit to the original value.\n    n |= first_bit\n    n |= last_bit\n    return n\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0\n    var i int = 1\n    for i < 32 {\n        mask = mask | (1 << i)\n        i = i + 2\n    }\n    return n ^ mask\n}\n\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509774,
      "stdout": "--- FAIL: TestToggle_Middle_Bits (0.00s)\n    --- FAIL: TestToggle_Middle_Bits/test_num__0 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=15)', got '%!s(int=2863311523)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__1 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=12)', got '%!s(int=2863311520)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__2 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=13)', got '%!s(int=2863311521)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__3 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=127)', got '%!s(int=2863311595)'\n    --- FAIL: TestToggle_Middle_Bits/test_num__4 (0.00s)\n        tmpzhvmnb1v_test.go:36: expected '%!s(int=115)', got '%!s(int=2863311591)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package toggle_middle_bits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n int) int {\n    var mask int = 0x7FFFFFFF\n    var mask2 int = 0x80000000\n    var mask3 int = 0x00000001\n    var mask4 int = 0xFFFFFFFE\n    var mask5 int = 0x7FFFFFFE\n    var mask6 int = 0x80000001\n    var mask7 int = 0xFFFFFFFC\n    var mask8 int = 0x7FFFFFFD\n    var mask9 int = 0x80000003\n    var mask10 int = 0xFFFFFFF8\n    var mask11 int = 0x7FFFFFFB\n    var mask12 int = 0x80000007\n    var mask13 int = 0xFFFFFFF0\n    var mask14 int = 0x7FFFFFF7\n    var mask15 int = 0x8000000F\n    var mask16 int = 0xFFFFFFE0\n    var mask17 int = 0x7FFFFFFF\n    var mask18 int = 0x8000001F\n    var mask19 int = 0xFFFFFFC0\n    var mask20 int = 0x7FFFFFFF\n    var mask21 int = 0x8000003F\n    var mask22 int = 0xFFFFFF80\n    var mask23 int = 0x7FFFFFFF\n    var mask24 int = 0x8000007F\n    var mask25 int = 0xFFFFFF00\n    var mask26 int = 0x7FFFFFFF\n    var mask27 int = 0x800000FF\n    var mask28 int = 0xFFFFFE00\n    var mask29 int = 0x7FFFFFFF\n    var mask30 int = 0x800001FF\n    var mask31 int = 0xFFFFFC00\n    var mask32 int = 0x7FFFFFFF\n    var mask33 int = 0x800003FF\n    var mask34 int = 0xFFFFF800\n    var mask35 int = 0x7FFFFFFF\n    var mask36 int = 0x800007FF\n    var mask37 int = 0xFFFFF000\n    var mask38 int = 0x7FFFFFFF\n    var mask39 int = 0x80000FFF\n    var mask40 int = 0xFFFFE000\n    var mask41 int = 0x7FFFFFF\nfunc TestToggle_Middle_Bits(t *testing.T) {\n  candidate := toggle_middle_bits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(9), expected: 15 },\n     { actual: candidate(10), expected: 12 },\n     { actual: candidate(11), expected: 13 },\n     { actual: candidate(65), expected: 127 },\n     { actual: candidate(77), expected: 115 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122552,
      "stdout": "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n",
      "stderr": "# command-line-arguments\n/tmp/tmptun5bl3s_test.go:51:6: expected '(', found TestToggle_Middle_Bits\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
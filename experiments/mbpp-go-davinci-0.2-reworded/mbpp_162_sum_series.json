{
  "name": "mbpp_162_sum_series",
  "language": "go_test.go",
  "prompt": "package sum_series_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunc sum_series(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSum_Series(t *testing.T) {\n  candidate := sum_series\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(6), expected: 12 },\n     { actual: candidate(10), expected: 30 },\n     { actual: candidate(9), expected: 25 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var sum int = 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i < n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n",
    "    sum := 0\n    for i := 0; i <= n/2; i++ {\n        sum += n - 2*i\n    }\n    return sum\n}\n"
  ]
}
{
  "name": "mbpp_594_diff_even_odd",
  "language": "go_test.go",
  "prompt": "package diff_even_odd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the difference of the first even and first odd number of a given list.\nfunc diff_even_odd(list1 []int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "func TestDiff_Even_Odd(t *testing.T) {\n  candidate := diff_even_odd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 3, 5, 7, 4, 1, 6, 8}), expected: 3 },\n     { actual: candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), expected: 1 },\n     { actual: candidate([]int{1, 5, 7, 9, 10}), expected: 9 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, i := range list1 {\n        if i % 2 == 0 {\n            even = i\n            break\n        }\n    }\n    for _, i := range list1 {\n        if i % 2 != 0 {\n            odd = i\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, value := range list1 {\n        if value % 2 == 0 {\n            even = value\n            break\n        }\n    }\n    for _, value := range list1 {\n        if value % 2 != 0 {\n            odd = value\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return -1\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n    }\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even_num int\n    var odd_num int\n    for _, num := range list1 {\n        if num % 2 == 0 {\n            even_num = num\n            break\n        }\n    }\n    for _, num := range list1 {\n        if num % 2 != 0 {\n            odd_num = num\n            break\n        }\n    }\n    return even_num - odd_num\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return -1\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return -1\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return 0\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n    }\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, value := range list1 {\n        if value % 2 == 0 {\n            even = value\n            break\n        }\n    }\n    for _, value := range list1 {\n        if value % 2 != 0 {\n            odd = value\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n    }\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var foundEven, foundOdd bool\n\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !foundEven {\n                even = v\n                foundEven = true\n            }\n        } else {\n            if !foundOdd {\n                odd = v\n                foundOdd = true\n            }\n        }\n        if foundEven && foundOdd {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n    }\n    for i := 0; i < len(list1); i++ {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, i := range list1 {\n        if i % 2 == 0 {\n            even = i\n            break\n        }\n    }\n    for _, i := range list1 {\n        if i % 2 != 0 {\n            odd = i\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    even, odd := 0, 0\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var evenFound, oddFound bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !evenFound {\n                even = v\n                evenFound = true\n            }\n        } else {\n            if !oddFound {\n                odd = v\n                oddFound = true\n            }\n        }\n        if evenFound && oddFound {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return 0\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 == 1 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if even == -1 {\n                even = v\n            }\n        } else {\n            if odd == -1 {\n                odd = v\n            }\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    if even == -1 || odd == -1 {\n        return -1\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, num := range list1 {\n        if num % 2 == 0 {\n            if !even_found {\n                even = num\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = num\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, num := range list1 {\n        if num % 2 == 0 {\n            even = num\n            break\n        }\n    }\n    for _, num := range list1 {\n        if num % 2 != 0 {\n            odd = num\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for i, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n        if i == len(list1) - 1 {\n            return 0\n        }\n    }\n    for i, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n        if i == len(list1) - 1 {\n            return 0\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var found_even, found_odd bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !found_even {\n                even = v\n                found_even = true\n            }\n        } else {\n            if !found_odd {\n                odd = v\n                found_odd = true\n            }\n        }\n        if found_even && found_odd {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_found, odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 == 1 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 == 1 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var even_flag, odd_flag bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_flag {\n                even = v\n                even_flag = true\n            }\n        } else {\n            if !odd_flag {\n                odd = v\n                odd_flag = true\n            }\n        }\n        if even_flag && odd_flag {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    even = -1\n    odd = -1\n    for _, val := range list1 {\n        if val % 2 == 0 {\n            if even == -1 {\n                even = val\n            }\n        } else {\n            if odd == -1 {\n                odd = val\n            }\n        }\n    }\n    if even == -1 || odd == -1 {\n        return 0\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    var evenFound, oddFound bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !evenFound {\n                even = v\n                evenFound = true\n            }\n        } else {\n            if !oddFound {\n                odd = v\n                oddFound = true\n            }\n        }\n        if evenFound && oddFound {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var first_even, first_odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            first_even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            first_odd = v\n            break\n        }\n    }\n    return first_even - first_odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even int\n    var odd int\n    var even_found bool\n    var odd_found bool\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            if !even_found {\n                even = v\n                even_found = true\n            }\n        } else {\n            if !odd_found {\n                odd = v\n                odd_found = true\n            }\n        }\n        if even_found && odd_found {\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n",
    "    var even, odd int\n    for _, v := range list1 {\n        if v % 2 == 0 {\n            even = v\n            break\n        }\n    }\n    for _, v := range list1 {\n        if v % 2 != 0 {\n            odd = v\n            break\n        }\n    }\n    return even - odd\n}\n"
  ]
}
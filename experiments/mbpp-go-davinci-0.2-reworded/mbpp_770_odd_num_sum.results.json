{
  "name": "mbpp_770_odd_num_sum",
  "language": "go_test.go",
  "prompt": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            continue\n        }\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpg2svwi04_test.go:35: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpg2svwi04_test.go:35: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpg2svwi04_test.go:35: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i*i*i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp3_5s8h8t_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp3_5s8h8t_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp3_5s8h8t_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmp4mha9bmh_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i:=1; i<=n; i++ {\n        if i%2 != 0 {\n            sum += i*i*i*i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i*i*i*i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=82)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=707)', got '%!s(int=0)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpyugqsv8t_test.go:29: expected '%!s(int=3108)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpnwo30sys_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=82)', got '%!s(int=17)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=707)', got '%!s(int=98)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpxpph0hxi_test.go:32: expected '%!s(int=3108)', got '%!s(int=354)'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i * i\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpbjpona0b_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665509953,
      "stdout": "--- FAIL: TestOdd_Num_Sum (0.00s)\n    --- FAIL: TestOdd_Num_Sum/test_num__0 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=82)', got '%!s(int=1)'\n    --- FAIL: TestOdd_Num_Sum/test_num__1 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=707)', got '%!s(int=82)'\n    --- FAIL: TestOdd_Num_Sum/test_num__2 (0.00s)\n        tmpguvyqwku_test.go:34: expected '%!s(int=3108)', got '%!s(int=82)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package odd_num_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n int) int {\n    return 0\n}\n\nfunc TestOdd_Num_Sum(t *testing.T) {\n  candidate := odd_num_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 82 },\n     { actual: candidate(3), expected: 707 },\n     { actual: candidate(4), expected: 3108 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666122519,
      "stdout": "",
      "stderr": "",
      "exit_code": null,
      "status": "Timeout"
    }
  ]
}
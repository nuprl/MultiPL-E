{
  "name": "mbpp_280_sequential_search",
  "language": "go_test.go",
  "prompt": "package sequential_search_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function that takes in a list and element and returns a list containing a boolean that indicates if the element is in the list and the index position of the element (or -1 if the element is not found).\nfunc sequential_search(dlist []int, item int) []interface{} {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_280_sequential_search.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSequential_Search(t *testing.T) {\n  candidate := sequential_search\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{11, 23, 58, 31, 56, 77, 43, 12, 65, 19}, 31), expected: []interface{}{true, 3} },\n     { actual: candidate([]int{12, 32, 45, 62, 35, 47, 44, 61}, 61), expected: []interface{}{true, 7} },\n     { actual: candidate([]int{9, 10, 17, 19, 22, 39, 48, 56}, 48), expected: []interface{}{true, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for i, v := range dlist {\n        if v == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int = -1\n    var found bool = false\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var index int = -1\n    var found bool = false\n    for i, v := range dlist {\n        if v == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var pos int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var result []interface{}\n    var found bool\n    var index int\n\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n\n    if found {\n        result = append(result, found, index)\n    } else {\n        result = append(result, found, -1)\n    }\n\n    return result\n}\n",
    "    var result []interface{}\n    for i, v := range dlist {\n        if v == item {\n            result = append(result, true, i)\n            return result\n        }\n    }\n    result = append(result, false, -1)\n    return result\n}\n",
    "    var found bool = false\n    var pos int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    var found bool = false\n    var pos int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int = -1\n    var found bool = false\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var pos int\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    if !found {\n        pos = -1\n    }\n    return []interface{}{found, pos}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if found == false {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for _, value := range dlist {\n        if value == item {\n            found = true\n            break\n        }\n        index++\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    var found bool = false\n    var pos int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    }\n    return []interface{}{found, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, val := range dlist {\n        if val == item {\n            found = true\n            index = i\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var pos int\n\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n\n    if !found {\n        pos = -1\n    }\n\n    return []interface{}{found, pos}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var pos int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for index, _ = range dlist {\n        if dlist[index] == item {\n            found = true\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var pos int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            pos = i\n            break\n        }\n    }\n    return []interface{}{found, pos}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    if found == false {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int = -1\n    var found bool = false\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int\n    var found bool\n    for index, _ = range dlist {\n        if dlist[index] == item {\n            found = true\n            break\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if found {\n        return []interface{}{found, index}\n    } else {\n        return []interface{}{found, -1}\n    }\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var result []interface{}\n    for i, v := range dlist {\n        if v == item {\n            result = append(result, true, i)\n            return result\n        }\n    }\n    result = append(result, false, -1)\n    return result\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool\n    var index int\n    for i := 0; i < len(dlist); i++ {\n        if dlist[i] == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    if !found {\n        index = -1\n    }\n    return []interface{}{found, index}\n}\n",
    "    var index int = -1\n    var found bool = false\n    for i, v := range dlist {\n        if v == item {\n            index = i\n            found = true\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool\n    var index int\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n            break\n        }\n    }\n    return []interface{}{found, index}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    for i, v := range dlist {\n        if v == item {\n            return []interface{}{true, i}\n        }\n    }\n    return []interface{}{false, -1}\n}\n",
    "    var found bool = false\n    var index int = -1\n    for i, v := range dlist {\n        if v == item {\n            found = true\n            index = i\n        }\n    }\n    return []interface{}{found, index}\n}\n"
  ]
}
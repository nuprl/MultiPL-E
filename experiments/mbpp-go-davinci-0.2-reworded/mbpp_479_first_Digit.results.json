{
  "name": "mbpp_479_first_Digit",
  "language": "go_test.go",
  "prompt": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "func TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    var first int\n    for n > 0 {\n        first = n % 10\n        n /= 10\n    }\n    return first\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    var digit int\n    for n > 0 {\n        digit = n % 10\n        n /= 10\n    }\n    return digit\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 0 {\n        n = -n\n    }\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 10 {\n        return n\n    }\n    return first_Digit(n / 10)\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // if n == 0 {\n    //     return 0\n    // }\n    // for n > 0 {\n    //     if n < 10 {\n    //         return n\n    //     }\n    //     n = n / 10\n    // }\n    // return 0\n    return n % 10\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp6pxdfpku_test.go:38: expected '%!s(int=1)', got '%!s(int=3)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp6pxdfpku_test.go:38: expected '%!s(int=4)', got '%!s(int=6)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp6pxdfpku_test.go:38: expected '%!s(int=1)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    return n / 10\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=1)', got '%!s(int=12)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=4)', got '%!s(int=45)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 10 {\n        return n\n    }\n    return first_Digit(n / 10)\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 0 {\n        n = -n\n    }\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 0 {\n        n = -n\n    }\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    var digit int\n    for n > 0 {\n        digit = n % 10\n        n /= 10\n    }\n    return digit\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n /= 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    if n < 10 {\n        return n\n    }\n    return first_Digit(n/10)\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    return n / 10\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=1)', got '%!s(int=12)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=4)', got '%!s(int=45)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp3d69k675_test.go:29: expected '%!s(int=1)', got '%!s(int=123)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp3d69k675_test.go:29: expected '%!s(int=4)', got '%!s(int=456)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp3d69k675_test.go:29: expected '%!s(int=1)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    return n / 10\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=1)', got '%!s(int=12)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpe96lm8ij_test.go:28: expected '%!s(int=4)', got '%!s(int=45)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp5ikqr6xg_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp5ikqr6xg_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp5ikqr6xg_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n /= 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    var num int\n    for n > 0 {\n        num = n % 10\n        n = n / 10\n    }\n    return num\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 0 {\n        if n < 10 {\n            return n\n        }\n        n = n / 10\n    }\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmpbx7v9o88_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // your code here\n    for n >= 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n >= 10 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n /= 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp63b3ikmb_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Write your code here\n    for n > 9 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code goes here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp9tr3dh91_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    // Your code here\n    return 0\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510671,
      "stdout": "--- FAIL: TestFirst_Digit (0.00s)\n    --- FAIL: TestFirst_Digit/test_num__0 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__1 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestFirst_Digit/test_num__2 (0.00s)\n        tmp8368f0_8_test.go:29: expected '%!s(int=1)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package first_Digit_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the first digit of a given number.\nfunc first_Digit(n int) int {\n    for n > 10 {\n        n = n / 10\n    }\n    return n\n}\n\nfunc TestFirst_Digit(t *testing.T) {\n  candidate := first_Digit\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(123), expected: 1 },\n     { actual: candidate(456), expected: 4 },\n     { actual: candidate(12), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666124266,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
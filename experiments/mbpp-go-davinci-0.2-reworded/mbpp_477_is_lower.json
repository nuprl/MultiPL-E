{
  "name": "mbpp_477_is_lower",
  "language": "go_test.go",
  "prompt": "package is_lower_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to convert the given string to lower case.\nfunc is_lower(myString string) string {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "reworded",
  "tests": "func TestIs_Lower(t *testing.T) {\n  candidate := is_lower\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"InValid\"), expected: \"invalid\" },\n     { actual: candidate(\"TruE\"), expected: \"true\" },\n     { actual: candidate(\"SenTenCE\"), expected: \"sentence\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    return myString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 65 && char <= 90 {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var lower string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            lower += string(char + 32)\n        } else {\n            lower += string(char)\n        }\n    }\n    return lower\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char >= 65 && char <= 90 {\n            newString += string(char + 32)\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            newString += string(char + 32)\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            newString += string(char + 32)\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var result string\n    for _, c := range myString {\n        if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    var myLowerString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            myLowerString += string(char + 32)\n        } else {\n            myLowerString += string(char)\n        }\n    }\n    return myLowerString\n}\n",
    "    var result string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n            result += string(char)\n        }\n    }\n    return result\n}\n",
    "    return myString\n}\n",
    "    return myString\n}\n",
    "    return myString\n}\n",
    "    var newString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            newString += string(char + 32)\n        } else {\n            newString += string(char)\n        }\n    }\n    return newString\n}\n",
    "    var myLowerString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            myLowerString += string(char + 32)\n        } else {\n            myLowerString += string(char)\n        }\n    }\n    return myLowerString\n}\n",
    "    var lowerString string\n    for _, char := range myString {\n        if char >= 'A' && char <= 'Z' {\n            lowerString += string(char + 32)\n        } else {\n            lowerString += string(char)\n        }\n    }\n    return lowerString\n}\n"
  ]
}
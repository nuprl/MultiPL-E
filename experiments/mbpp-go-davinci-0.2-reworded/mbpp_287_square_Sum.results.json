{
  "name": "mbpp_287_square_Sum",
  "language": "go_test.go",
  "prompt": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_287_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (i+1)*(i+1)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp_vpnxrxh_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp_vpnxrxh_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp_vpnxrxh_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    var sum int\n    for i:=1; i<=n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpo3a_tn_y_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpo3a_tn_y_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpo3a_tn_y_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (i + 1) * (i + 1)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfookgdvo_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfookgdvo_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfookgdvo_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.002s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i < n; i++ {\n        sum += (2*i + 2) * (2*i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    var i int\n    for i = 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp381eu8cu_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp381eu8cu_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp381eu8cu_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6j9trkb7_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    if n == 0 {\n        return 0\n    }\n    return n * n + square_Sum(n - 2)\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123559,
      "stdout": "runtime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp=0xc020170380 stack=[0xc020170000, 0xc040170000]\nfatal error: stack overflow\n\nruntime stack:\nruntime.throw(0x54622b, 0xe)\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:1117 +0x72\nruntime.newstack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/stack.go:1069 +0x7ed\nruntime.morestack()\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/asm_amd64.s:458 +0x8f\n\ngoroutine 6 [running]:\ncommand-line-arguments_test.square_Sum(0xfffffffffe000053, 0x0)\n\t/tmp/tmpfndawvmi_test.go:9 +0x69 fp=0xc020170390 sp=0xc020170388 pc=0x50a669\ncommand-line-arguments_test.square_Sum(0xfffffffffe000055, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc0201703b0 sp=0xc020170390 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000057, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc0201703d0 sp=0xc0201703b0 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000059, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc0201703f0 sp=0xc0201703d0 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe00005b, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc020170410 sp=0xc0201703f0 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe00005d, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc020170430 sp=0xc020170410 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe00005f, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc020170450 sp=0xc020170430 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000061, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc020170470 sp=0xc020170450 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000063, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc020170490 sp=0xc020170470 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000065, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc0201704b0 sp=0xc020170490 pc=0x50a647\ncommand-line-arguments_test.square_Sum(0xfffffffffe000067, 0x0)\n\t/tmp/tmpfndawvmi_test.go:13 +0x47 fp=0xc0201704d0 sp=0xc0201704b0 pc=0x50a647\ncommand-line",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=20)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=56)', got '%!s(int=0)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpegwrk01j_test.go:29: expected '%!s(int=120)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 0; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpz_5jct_g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpz_5jct_g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpz_5jct_g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpctpqwwnx_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    // Write your code here\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp71gbemjz_test.go:33: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 0; i < n; i++ {\n        sum += (2 * i + 2) * (2 * i + 2)\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "ok  \tcommand-line-arguments\t0.004s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk4r3vaz6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    return n * (n + 1) * (2 * n + 1) / 6\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpt7ch7_a9_test.go:28: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpt7ch7_a9_test.go:28: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpt7ch7_a9_test.go:28: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i:=1; i<=n; i++ {\n        sum += i*i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1666123558,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpk6qyt5r6_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpk6qyt5r6_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpk6qyt5r6_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmplhj4068g_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=20)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=56)', got '%!s(int=4)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmp6bsqsmx2_test.go:34: expected '%!s(int=120)', got '%!s(int=20)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package square_Sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function takes in an integer n and returns the sum of squares of first n even natural numbers.\nfunc square_Sum(n int) int {\n    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i * i\n    }\n    return sum\n}\n\nfunc TestSquare_Sum(t *testing.T) {\n  candidate := square_Sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(2), expected: 20 },\n     { actual: candidate(3), expected: 56 },\n     { actual: candidate(4), expected: 120 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1665510438,
      "stdout": "--- FAIL: TestSquare_Sum (0.00s)\n    --- FAIL: TestSquare_Sum/test_num__0 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=20)', got '%!s(int=5)'\n    --- FAIL: TestSquare_Sum/test_num__1 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=56)', got '%!s(int=14)'\n    --- FAIL: TestSquare_Sum/test_num__2 (0.00s)\n        tmpfhjexvhm_test.go:32: expected '%!s(int=120)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
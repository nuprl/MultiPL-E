{
  "name": "mbpp_806_max_run_uppercase",
  "language": "go_test.go",
  "prompt": "package max_run_uppercase_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find maximum run of uppercase characters in the given string.\nfunc max_run_uppercase(test_str string) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "func TestMax_Run_Uppercase(t *testing.T) {\n  candidate := max_run_uppercase\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"GeMKSForGERksISBESt\"), expected: 5 },\n     { actual: candidate(\"PrECIOusMOVemENTSYT\"), expected: 6 },\n     { actual: candidate(\"GooGLEFluTTER\"), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var max_run int = 0\n    var run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            run++\n        } else {\n            if run > max_run {\n                max_run = run\n            }\n            run = 0\n        }\n    }\n    if run > max_run {\n        max_run = run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    max_run := 0\n    cur_run := 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int\n    var run int\n\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            run++\n        } else {\n            if run > max_run {\n                max_run = run\n            }\n            run = 0\n        }\n    }\n\n    if run > max_run {\n        max_run = run\n    }\n\n    return max_run\n}\n",
    "    var max_run int = 0\n    var run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            run += 1\n        } else {\n            if run > max_run {\n                max_run = run\n            }\n            run = 0\n        }\n    }\n    if run > max_run {\n        max_run = run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, ch := range test_str {\n        if ch >= 'A' && ch <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int\n    var cur_run int\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, ch := range test_str {\n        if ch >= 'A' && ch <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run += 1\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run += 1\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run += 1\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    max_run := 0\n    cur_run := 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, char := range test_str {\n        if char >= 'A' && char <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_count int = 0\n    var cur_count int = 0\n\n    for _, ch := range test_str {\n        if ch >= 'A' && ch <= 'Z' {\n            cur_count++\n        } else {\n            if cur_count > max_count {\n                max_count = cur_count\n            }\n            cur_count = 0\n        }\n    }\n\n    if cur_count > max_count {\n        max_count = cur_count\n    }\n\n    return max_count\n}\n",
    "    var max_run int = 0\n    var run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            run++\n        } else {\n            if run > max_run {\n                max_run = run\n            }\n            run = 0\n        }\n    }\n    if run > max_run {\n        max_run = run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, c := range test_str {\n        if c >= 'A' && c <= 'Z' {\n            cur_run++\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n",
    "    var max_run int = 0\n    var cur_run int = 0\n    for _, char := range test_str {\n        if char >= 'A' && char <= 'Z' {\n            cur_run += 1\n        } else {\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n            cur_run = 0\n        }\n    }\n    if cur_run > max_run {\n        max_run = cur_run\n    }\n    return max_run\n}\n"
  ]
}
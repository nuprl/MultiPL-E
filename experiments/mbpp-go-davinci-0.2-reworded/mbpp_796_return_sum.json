{
  "name": "mbpp_796_return_sum",
  "language": "go_test.go",
  "prompt": "package return_sum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write function to find the sum of all items in the given map.\nfunc return_sum(dict map[string]int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
  "prompt_terminology": "reworded",
  "tests": "func TestReturn_Sum(t *testing.T) {\n  candidate := return_sum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(map[string]int{\"a\": 100, \"b\": 200, \"c\": 300}), expected: 600 },\n     { actual: candidate(map[string]int{\"a\": 25, \"b\": 18, \"c\": 45}), expected: 88 },\n     { actual: candidate(map[string]int{\"a\": 36, \"b\": 39, \"c\": 49}), expected: 124 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, value := range dict {\n        sum += value\n    }\n    return sum\n}\n",
    "    sum := 0\n    for _, v := range dict {\n        sum += v\n    }\n    return sum\n}\n"
  ]
}
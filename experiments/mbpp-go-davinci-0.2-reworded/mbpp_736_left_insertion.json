{
  "name": "mbpp_736_left_insertion",
  "language": "go_test.go",
  "prompt": "package left_insertion_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/gothon-exercises/data-structures-and-algorithms/gothon-data-structure-exercise-24.php\nfunc left_insertion(a []int, x int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "reworded",
  "tests": "func TestLeft_Insertion(t *testing.T) {\n  candidate := left_insertion\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 2, 4, 5}, 6), expected: 4 },\n     { actual: candidate([]int{1, 2, 4, 5}, 3), expected: 2 },\n     { actual: candidate([]int{1, 2, 4, 5}, 7), expected: 4 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if x > a[mid] {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var n = len(a)\n    var i int\n    for i = 0; i < n; i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] == x {\n            return m\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n    return l\n}\n",
    "    i := 0\n    for i < len(a) && a[i] < x {\n        i++\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    if len(a) == 0 {\n        return 0\n    }\n    if x <= a[0] {\n        return 0\n    }\n    if x > a[len(a)-1] {\n        return len(a)\n    }\n    low := 0\n    high := len(a) - 1\n    for low < high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    n := len(a)\n    if n == 0 {\n        return 0\n    }\n    if x <= a[0] {\n        return 0\n    }\n    if x > a[n-1] {\n        return n\n    }\n    l, r := 0, n-1\n    for l < r {\n        m := (l+r)/2\n        if a[m] < x {\n            l = m+1\n        } else {\n            r = m\n        }\n    }\n    return l\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var low, high, mid int\n    low = 0\n    high = len(a) - 1\n    for low <= high {\n        mid = (low + high) / 2\n        if a[mid] == x {\n            return mid\n        } else if a[mid] > x {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    i := 0\n    for i < len(a) && a[i] < x {\n        i++\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var left, right, mid int\n    left = 0\n    right = len(a) - 1\n    for left <= right {\n        mid = (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i := 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := low + (high - low) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := l + (r - l) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    mid := 0\n    for low <= high {\n        mid = (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    if len(a) == 0 {\n        return 0\n    }\n    if x < a[0] {\n        return 0\n    }\n    if x > a[len(a)-1] {\n        return len(a)\n    }\n    for i := 0; i < len(a); i++ {\n        if a[i] == x {\n            return i\n        }\n        if a[i] < x && a[i+1] > x {\n            return i+1\n        }\n    }\n    return 0\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    if len(a) == 0 {\n        return 0\n    }\n    if x < a[0] {\n        return 0\n    }\n    if x > a[len(a)-1] {\n        return len(a)\n    }\n    for i := 0; i < len(a); i++ {\n        if x <= a[i] {\n            return i\n        }\n    }\n    return 0\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    // TODO: Implement\n    return 0\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i, v := range a {\n        if v > x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    if len(a) == 0 {\n        return 0\n    }\n    if x <= a[0] {\n        return 0\n    }\n    if x > a[len(a)-1] {\n        return len(a)\n    }\n    for i := 0; i < len(a); i++ {\n        if a[i] < x && x <= a[i+1] {\n            return i+1\n        }\n    }\n    return -1\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if x <= a[mid] {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    left := 0\n    right := len(a) - 1\n    for left <= right {\n        mid := (left + right) / 2\n        if a[mid] == x {\n            return mid\n        } else if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    // TODO: implement\n    return 0\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i, v := range a {\n        if v > x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if x <= a[i] {\n            return i\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] == x {\n            return m\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if x <= a[i] {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i, v := range a {\n        if v >= x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i, v := range a {\n        if v >= x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    low := 0\n    high := len(a) - 1\n    mid := 0\n\n    for low <= high {\n        mid = (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a) && a[i] < x; i++ {}\n    return i\n}\n",
    "    low, high := 0, len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    lo := 0\n    hi := len(a) - 1\n    for lo <= hi {\n        mid := lo + (hi - lo) / 2\n        if a[mid] < x {\n            lo = mid + 1\n        } else {\n            hi = mid - 1\n        }\n    }\n    return lo\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] >= x {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    left := 0\n    right := len(a) - 1\n    for left <= right {\n        mid := (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n    return l\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var left, right, mid int\n    left = 0\n    right = len(a) - 1\n    for left <= right {\n        mid = (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var l int = 0\n    var r int = len(a) - 1\n    var m int = 0\n\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] == x {\n            return m\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n\n    return l\n}\n",
    "    left := 0\n    right := len(a)\n    for left < right {\n        mid := (left + right) / 2\n        if x <= a[mid] {\n            right = mid\n        } else {\n            left = mid + 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i, j int\n    for i, j = 0, len(a); i < j; {\n        h := int(uint(i+j) >> 1)\n        if a[h] < x {\n            i = h+1\n        } else {\n            j = h\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if x > a[mid] {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    l, r := 0, len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            return m\n        }\n    }\n    return l\n}\n",
    "    var l, r, m int\n    l = 0\n    r = len(a) - 1\n    for l <= r {\n        m = (l + r) / 2\n        if a[m] == x {\n            return m\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    left := 0\n    right := len(a) - 1\n    for left <= right {\n        mid := (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    left := 0\n    right := len(a) - 1\n    for left <= right {\n        mid := (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    // fmt.Println(a)\n    // fmt.Println(x)\n    if len(a) == 0 {\n        return 0\n    }\n    if len(a) == 1 {\n        if a[0] < x {\n            return 1\n        } else {\n            return 0\n        }\n    }\n    if len(a) == 2 {\n        if a[0] < x {\n            if a[1] < x {\n                return 2\n            } else {\n                return 1\n            }\n        } else {\n            return 0\n        }\n    }\n    if len(a) == 3 {\n        if a[0] < x {\n            if a[1] < x {\n                if a[2] < x {\n                    return 3\n                } else {\n                    return 2\n                }\n            } else {\n                return 1\n            }\n        } else {\n            return 0\n        }\n    }\n    if len(a) == 4 {\n        if a[0] < x {\n            if a[1] < x {\n                if a[2] < x {\n                    if a[3] < x {\n                        return 4\n                    } else {\n                        return 3\n                    }\n                } else {\n                    return 2\n                }\n            } else {\n                return 1\n            }\n        } else {\n            return 0\n        }\n    }\n    if len(a) == 5 {\n        if a[0] < x {\n            if a[1] < x {\n                if a[2] < x {\n                    if a[3] < x {\n                        if a[4] < x {\n                            return 5\n                        } else {\n                            return 4\n                        }\n                    } else {\n                        return 3\n                    }\n                } else {\n                    return 2\n                }\n            } else {\n                return 1\n            }\n        } else {\n            return 0\n        }\n    }\n    if len(a) == 6 {\n        if a[0] < x {\n            if a[1] < x {\n                if a[2] < x {\n                    if a[3] < x {\n                        if a[4] <",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] == x {\n            return m\n        } else if a[m] > x {\n            r = m - 1\n        } else {\n            l = m + 1\n        }\n    }\n    return l\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    for i := 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    for i, v := range a {\n        if v >= x {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    var low, high, mid int\n    low = 0\n    high = len(a) - 1\n    for low <= high {\n        mid = (low + high) / 2\n        if x > a[mid] {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a) && a[i] < x; i++ {\n    }\n    return i\n}\n",
    "    var left, right, mid int\n    left = 0\n    right = len(a) - 1\n    for left <= right {\n        mid = (left + right) / 2\n        if a[mid] < x {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return left\n}\n",
    "    for i := 0; i < len(a); i++ {\n        if x <= a[i] {\n            return i\n        }\n    }\n    return len(a)\n}\n",
    "    left := 0\n    right := len(a) - 1\n    for left <= right {\n        mid := (left + right) / 2\n        if a[mid] == x {\n            return mid\n        } else if a[mid] > x {\n            right = mid - 1\n        } else {\n            left = mid + 1\n        }\n    }\n    return left\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if x < a[mid] {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    if len(a) == 0 {\n        return 0\n    }\n    if x < a[0] {\n        return 0\n    }\n    if x > a[len(a)-1] {\n        return len(a)\n    }\n    for i := 0; i < len(a); i++ {\n        if a[i] == x {\n            return i\n        }\n        if a[i] < x && x < a[i+1] {\n            return i+1\n        }\n    }\n    return 0\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l <= r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m - 1\n        }\n    }\n    return l\n}\n",
    "    var low, high, mid int\n    low = 0\n    high = len(a) - 1\n\n    for low <= high {\n        mid = (low + high) / 2\n        if a[mid] == x {\n            return mid\n        } else if a[mid] > x {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] >= x {\n            break\n        }\n    }\n    return i\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            return i\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := low + (high - low) / 2\n        if a[mid] == x {\n            return mid\n        } else if a[mid] > x {\n            high = mid - 1\n        } else {\n            low = mid + 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    mid := 0\n\n    for low <= high {\n        mid = (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    var i int\n    for i = 0; i < len(a); i++ {\n        if a[i] > x {\n            break\n        }\n    }\n    return i\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    low := 0\n    high := len(a) - 1\n    for low <= high {\n        mid := (low + high) / 2\n        if a[mid] < x {\n            low = mid + 1\n        } else {\n            high = mid - 1\n        }\n    }\n    return low\n}\n",
    "    l := 0\n    r := len(a) - 1\n    for l < r {\n        m := (l + r) / 2\n        if a[m] < x {\n            l = m + 1\n        } else {\n            r = m\n        }\n    }\n    return l\n}\n"
  ]
}
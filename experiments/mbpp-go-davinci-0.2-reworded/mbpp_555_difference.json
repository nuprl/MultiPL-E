{
  "name": "mbpp_555_difference",
  "language": "go_test.go",
  "prompt": "package difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a gothon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\nfunc difference(n int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "func TestDifference(t *testing.T) {\n  candidate := difference\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(3), expected: 30 },\n     { actual: candidate(5), expected: 210 },\n     { actual: candidate(2), expected: 6 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum * sum - sum_of_cubes(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum * sum - sum_of_cubes(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum_of_numbers := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum_of_numbers += i\n    }\n    return sum_of_numbers * sum_of_numbers - sum_of_cubes\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    var sum int\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    var sum_of_cubes int\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n    }\n    return sum_of_cubes - sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    var sum_of_squares int = 0\n    var sum_of_numbers int = 0\n    for i := 1; i <= n; i++ {\n        sum_of_squares += i * i\n        sum_of_numbers += i\n    }\n    return sum_of_numbers * sum_of_numbers - sum_of_squares\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    var sum_of_cubes int = 0\n    var sum_of_n int = 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum_of_n += i\n    }\n    return sum_of_cubes - sum_of_n * sum_of_n\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n    }\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    return sumOfCubes(n) - sum(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    var sumOfCubes int\n    var sum int\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sum_of_cubes\n}\n",
    "    var sum_of_cubes int = 0\n    var sum int = 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum * sum - sumOfCubes(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNaturals := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNaturals += i\n    }\n    return sumOfCubes - sumOfNaturals * sumOfNaturals\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sum_of_squares := 0\n    sum_of_cubes := 0\n    for i := 1; i <= n; i++ {\n        sum_of_squares += i * i\n        sum_of_cubes += i * i * i\n    }\n    return sum_of_squares - sum_of_cubes\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sum_of_cubes\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    var sum_of_cubes int = 0\n    var sum_of_n int = 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum_of_n += i\n    }\n    return sum_of_cubes - sum_of_n * sum_of_n\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n",
    "    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6)\n}\n",
    "    sum_of_squares := 0\n    sum_of_cubes := 0\n    for i := 1; i <= n; i++ {\n        sum_of_squares += i * i\n        sum_of_cubes += i * i * i\n    }\n    return sum_of_squares - sum_of_cubes\n}\n",
    "    sum_of_squares := 0\n    sum_of_cubes := 0\n    for i := 1; i <= n; i++ {\n        sum_of_squares += i * i\n        sum_of_cubes += i * i * i\n    }\n    return sum_of_squares - sum_of_cubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i * i * i\n    }\n    return sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sumOfFirstN(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return (sum * sum) - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfSquares(n) - sumOfCubes(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sumOfNaturals := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNaturals += i\n    }\n    return sumOfNaturals * sumOfNaturals - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sum(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return squareOfSum(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sumOfNaturals := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNaturals += i\n    }\n    return sumOfCubes - sumOfNaturals * sumOfNaturals\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum := 0\n    for i := 1; i <= n; i++ {\n        sum += i\n    }\n    return sum * sum - sum_of_cubes(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfSquares(n) - sumOfCubes(n)\n}\n",
    "    var sumOfCubes, sum int\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    var sumOfCubes, sum int\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfCubes := 0\n    sumOfN := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfN += i\n    }\n    return sumOfCubes - sumOfN * sumOfN\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    sum_of_squares := 0\n    sum_of_cubes := 0\n    for i := 1; i <= n; i++ {\n        sum_of_squares += i * i\n        sum_of_cubes += i * i * i\n    }\n    return sum_of_squares - sum_of_cubes\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sumOfSquares := 0\n    sumOfCubes := 0\n    for i := 1; i <= n; i++ {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sum_of_cubes\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    var sumOfCubes, sumOfNumbers int\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n",
    "    return sumOfCubes(n) - sumOfSquares(n)\n}\n",
    "    sumOfCubes := 0\n    sumOfNumbers := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers\n}\n",
    "    sumOfCubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sum * sum - sumOfCubes\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)\n}\n",
    "    return sumOfCubes(n) - sumOfNumbers(n)\n}\n",
    "    sum_of_cubes := 0\n    sum := 0\n    for i := 1; i <= n; i++ {\n        sum_of_cubes += i * i * i\n        sum += i\n    }\n    return sum_of_cubes - sum * sum\n}\n"
  ]
}
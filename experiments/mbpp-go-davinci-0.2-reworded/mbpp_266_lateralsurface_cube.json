{
  "name": "mbpp_266_lateralsurface_cube",
  "language": "go_test.go",
  "prompt": "package lateralsurface_cube_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write a function to find the lateral surface area of a cube given its side length.\nfunc lateralsurface_cube(l int) int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
  "prompt_terminology": "reworded",
  "tests": "func TestLateralsurface_Cube(t *testing.T) {\n  candidate := lateralsurface_cube\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5), expected: 100 },\n     { actual: candidate(9), expected: 324 },\n     { actual: candidate(10), expected: 400 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "completions": [
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return l * l * 4\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n",
    "    return 4 * l * l\n}\n"
  ]
}